<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>m_veloper</title>
    <description></description>
    <link>https://m-veloper.github.io/</link>
    <atom:link href="https://m-veloper.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 09 Mar 2020 23:54:39 +0900</pubDate>
    <lastBuildDate>Mon, 09 Mar 2020 23:54:39 +0900</lastBuildDate>
    <generator>Jekyll v3.8.6</generator>
    
      <item>
        <title>[SASS/SCSS] CSS Preprocessor 란?</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/sass/2020-03-09-sass-01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;css-preprocessor-란&quot;&gt;CSS Preprocessor 란?&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Sass, Less 등이 있습니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;이 친구들은 CSS 전(예비)처리기 입니다. 보통 CSS Preprocessor 라고 부릅니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;CSS가 동작하기 전에 사용하는 기능으로, 웹에서는 분명 CSS가 동작하지만 우리는 CSS의 불편함을 이런 확장 기능으로 상쇄할 수 있습니다.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  사스는 기초 언어에 힘과 우아함을 더해주는 CSS의 확장이다.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;어떻게-사용할까&quot;&gt;어떻게 사용할까?&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;위에서 언급한 것처럼 웹에서는 CSS만 동작합니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Sass, Less, Stylus 같은 전처리기(이하 ‘전처리기’로 표기)는 직접 동작시킬 수 없습니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;그렇다면 어떻게 사용할 수 있을까?&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  CSS는 불편하니 일단 배제하고 우선 전처리기로 작성(코딩)합니다.
  전처리기는 CSS 문법과 굉장히 유사하지만 선택자의 중첩(Nesting)이나 조건문, 반복문, 다양한 단위(Unit)의 연산 등… 
  표준 CSS 보다 훨씬 많은 기능을 사용해서 편리하게 작성할 수 있습니다.
  단, 웹에서는 직접 동작하지 않으니 이렇게 작성한 전처리기를 웹에서 동작 가능한 표준의 CSS로 컴파일(Compile)합니다.
  전처리기로 작성하고 CSS로 컴파일해서 동작시키는 거죠.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;왜-sassscss인가&quot;&gt;왜 Sass(SCSS)인가?&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;보통 언급되는 전처리기 3대장으로 Less, Sass(SCSS), Stylus가 있습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Less&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;Less에서 제공하는 기능의 한계.&lt;/li&gt;
      &lt;li&gt;기능이 Sass나 Stylus에는 있음.&lt;/li&gt;
      &lt;li&gt;하지만 진입장벽이 낮기 때문에 접하기 쉽고 그만큼 많이 사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Stylus&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;깔끔하고 좀 더 세련됐으며 기능&lt;/li&gt;
      &lt;li&gt;하지만 덜 사용되며(덜 유명하며) 비교적 늦게 나왔기 때문에 성숙도는 떨어짐&lt;/li&gt;
      &lt;li&gt;그 때문인지 컴파일 후 사소한 버그가 몇몇&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Sass(SCSS)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;위에 언급한 두 가지 전처리기의 장점을 모두 가지고있음.&lt;/li&gt;
      &lt;li&gt;문법은 Sass가 Stylus와 비슷하고, SCSS는 Less와 비슷하며, Sass와 SCSS는 하나의 컴파일러로 모두 컴파일 가능&lt;/li&gt;
      &lt;li&gt;2006년부터 시작하여 가장 오래된 CSS 확장 언어이며 그만큼 높은 성숙도와 많은 커뮤니티를 가지고 있고 기능도 훌륭&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    본 포스팅은 HEROPY님의 영상과 블로그를 보고 정리한 내용입니다.
    https://heropy.blog/2018/01/31/sass/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Mon, 09 Mar 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/devlog/2020/03/09/sass-01/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/devlog/2020/03/09/sass-01/</guid>
        
        <category>sass</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[MySQL/MariaDB] REPLACE 사용법(콤마제거, 치환하기)</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/mysql/2020-03-08-tip-mysql-01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;replace-콤마제거-치환하기&quot;&gt;REPLACE (콤마제거, 치환하기)&lt;/h1&gt;
&lt;h3 id=&quot;how-to-using-select-replace-with-mysql&quot;&gt;How to Using SELECT REPLACE with MySQL&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;SELECT문 사용시 컬럼에 콤마(,) 또는 치환해야할 문자가 있을 때 콤마를 제거하거나 문자를 치환해서 출력 하기 위해 사용&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;1-select-시-그냥-replace-만을-사용해서-콤마를-제거하는-경우&quot;&gt;1. SELECT 시 그냥 REPLACE 만을 사용해서 콤마를 제거하는 경우&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    ﻿SELECT ﻿REPLACE(컬럼, '컬럼 안에 바꿔야할 문자','바꿔서 출력될 문자') FROM 테이블 
    
    ﻿﻿SELECT ﻿REPLACE(price, ',','') FROM FOODS
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;푸드 테이블의 price컬럼에서 콤마를 제거해서 출력하라&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h2 id=&quot;2-select-시--replace를사용해서-콤마를-제거-후-sum-을-하는-경우&quot;&gt;2. SELECT 시  REPLACE를사용해서 콤마를 제거 후 SUM 을 하는 경우&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    ﻿SELECT SUM(REPLACE(price, ',','')) AS totalPrice FROM FOODS 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;푸드 테이블의 price컬럼에서 콤마를 제거하고 price 컬럼을 모두 더해서 tatalPrice라는 이름으로 출력하라&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 08 Mar 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/tip/2020/03/08/tip-mysql-01/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/tip/2020/03/08/tip-mysql-01/</guid>
        
        <category>mysql</category>
        
        
        <category>tip</category>
        
      </item>
    
      <item>
        <title>[JAVA] Java에서 백분율(퍼센트) 계산하기</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/java/2020-03-07-tip-java-01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;java에서-백분율퍼센트-계산하기&quot;&gt;Java에서 백분율(퍼센트) 계산하기&lt;/h1&gt;
&lt;h3 id=&quot;how-to-calculate-percentage-in-java&quot;&gt;How to calculate percentage in java&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;1-전체값에서-일부값은-몇-퍼센트&quot;&gt;1. 전체값에서 일부값은 몇 퍼센트?&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;일부값 / 전체값 *100&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// 10은 100에서 몇 퍼센트?
System.out.format(&quot;%.2f%%%n&quot;, 10.0 / 100.0 * 100.0);
// 출력 결과: 10.00%


// 33은 100에서 몇 퍼센트?
int x = 33;
int y = 100;
System.out.println( (double) x / (double) y * 100.0 + &quot;%&quot;);
// 출력 결과: 33.0%
// 정수의 경우에는 (double) 로 실수화시키지 않으면
// 0.0 이라는 엉뚱한 값이 나옴
// 맨 끝의 + &quot;%&quot; 이 부분은 공식의 일부가 아니라 퍼센트 기호 출력


// 105는 300의 몇퍼센트?
double x2 = 105.0;
double y2 = 300.0;
System.out.format(&quot;%.2f%%%n&quot;, x2 / y2 * 100.0);
// 출력 결과: 35.00%
// 실수형 변수에 값을 넣어두는 것이 좋음


// 한달 봉급 156만원인 사람이, 음식 값으로 21만원을 쓰면,
// 그 음식값은 한 달 봉급의 몇 퍼센트?
System.out.format(&quot;%.2f%%%n&quot;, 210000.0 / 1560000.0 * 100.0);
// 출력 결과: 13.46%


// 만약 봉급 156만원으로 모두 먹는 데 사용했다면
// 100% 가 나와야겠지요.
System.out.format(&quot;%.2f%%%n&quot;, 1560000.0 / 1560000.0 * 100.0);
// 출력 결과: 100.00%

// 만약 아무것도 먹지 않았면 0% 가 나와야합니다.
System.out.format(&quot;%.2f%%%n&quot;, 0.0 / 1560000.0 * 100.0);
// 출력 결과: 0.00%
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h3 id=&quot;1-전체값의-몇-퍼센트는-얼마&quot;&gt;1. 전체값의 몇 퍼센트는 얼마?&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;전체값 * 퍼센트 /100&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// 100의 10퍼센트는 얼마?
System.out.format(&quot;%.2f%n&quot;, 100.0 * 10.0 / 100.0);
// 출력 결과: 10.00


// 100의 33퍼센트는 얼마?
System.out.format(&quot;%.2f%n&quot;, 100.0 * 33.0 / 100.0);
// 출력 결과: 33.00


// 300의 35퍼센트는 얼마?
System.out.format(&quot;%.2f%n&quot;, 300.0 * 35.0 / 100.0);
// 출력 결과: 105.00


// 156만원의 13.46퍼센트는 얼마?
System.out.format(&quot;%.2f%n&quot;, 1560000.0 * 13.46 / 100.0);
// 출력 결과 (21만원에 가까운 값): 209976.00


// 156만원의 100퍼센트는 얼마?
System.out.format(&quot;%.2f%n&quot;, 1560000.0 * 100.0 / 100.0);
// 출력 결과: 1560000.00


// 156만원의 0퍼센트는 얼마?
System.out.format(&quot;%.2f%n&quot;, 1560000.0 * 0.0 / 100.0);
// 출력 결과: 0.00
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sat, 07 Mar 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/tip/2020/03/07/tip-java-01/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/tip/2020/03/07/tip-java-01/</guid>
        
        <category>java</category>
        
        
        <category>tip</category>
        
      </item>
    
      <item>
        <title>[유닉스] vi 환경 설정</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-06-unix-15.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;환경설정-명령어&quot;&gt;환경설정 명령어&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;1-파일-읽어오기여러-파일-편집하기&quot;&gt;1. 파일 읽어오기/여러 파일 편집하기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;파일 중간에 다른 파일 내용 삽입하거나 작업 중이던 파일을 종료하고 다른 파일로 작업 전환하기 위한 명령키들은 마지막 행 모드에서 실행&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-06-unix-15-01.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;파일 읽어들이기&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;:r 파일명&lt;/li&gt;
      &lt;li&gt;현재 작업 중인 파일에서 다른 파일을 읽어들이면 현재 커서 위치 다음 행에 삽입됨&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;다른 파일 편집하기&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;:e 파일명&lt;/li&gt;
      &lt;li&gt;현재 작업 중인 파일을 종료하고 다른 파일을 편집하려고 할 때 사용&lt;/li&gt;
      &lt;li&gt;:w 명령을 이용하여 현재 작업 중인 파일 저장 후 실행&lt;/li&gt;
      &lt;li&gt;작업 중이 내용 저장하지 않고 다른 파일 편집하려고 할 때는 “:e! 파일명“ 입력&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;여러 파일 편집하기&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;vi 시작할 때 파일명 여러 개 지정&lt;/li&gt;
      &lt;li&gt;지정한 순서대로 파일이 열림&lt;/li&gt;
      &lt;li&gt;편집 후 다음 파일로 이동시 :n 명령키 사용&lt;/li&gt;
      &lt;li&gt;다시 처음 파일로 이동하려면 “:e 파일명” 사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;2-vi에서-쉘-명령-사용하기&quot;&gt;2. vi에서 쉘 명령 사용하기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;vi 작업 도중 디렉토리의 파일 목록 확인, 프로그램 컴파일 등 쉘 명령 실행할 경우&lt;/li&gt;
  &lt;li&gt;vi를 종료하지 않고 쉘 명령 실행 가능&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-06-unix-15-02.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;:! 기능 이용&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;하나의 명령만 실행할 경우 가장 간단한 방법&lt;/li&gt;
      &lt;li&gt;형식 : :! 쉘 명령&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;사용 예 : :! date&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  ~
  ~
  :! date
  2015. 06. 10. (수) 16:24:06 KST
  Press ENTER or type command to continue
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;:sh 기능 이용&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;쉘 명령 여러 개를 실행할 경우&lt;/li&gt;
      &lt;li&gt;vi를 잠시 빠져나가 작업 수행 후 돌아옴&lt;/li&gt;
      &lt;li&gt;vi로 다시 돌아오려면 exit 입력&lt;/li&gt;
      &lt;li&gt;형식 : :sh&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;3-기타-명령&quot;&gt;3. 기타 명령&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-06-unix-15-03.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;화면 다시 출력&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;vi 작업 중 시스템 메시지 출력 등 화면이 정상이 아닐 때 Ctrl+L 명령키 입력하면 메시지들 사라지고 원래 작업 중인 내용만 남음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;행 연결&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;J(대문자 j) 키 사용&lt;/li&gt;
      &lt;li&gt;커서가 위치한 행과 다음 행을 하나의 행으로 만들어줌&lt;/li&gt;
      &lt;li&gt;현재 커서가 unix의 ‘x’위치에 있고, 현재 위치에서 J 명령키 입력&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-06-unix-15-04.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;이전 명령 반복&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;.(점) 명령키&lt;/li&gt;
      &lt;li&gt;바로 앞에 했던 명령을 반복적으로 수행&lt;/li&gt;
      &lt;li&gt;현재 커서가 editor의 ‘e’에 있고, 현재 위치에서 . 명령키 입력&lt;/li&gt;
      &lt;li&gt;바로 전 명령이 J 명령이었으므로 같은 명령을 반복&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-06-unix-15-05.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;대소문자 전환&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;~(틸드) 명령키&lt;/li&gt;
      &lt;li&gt;커서가 위치한 글자를 소문자는 대문자로, 대문자는 소문자로 바꿈&lt;/li&gt;
      &lt;li&gt;현재 커서가 test의 ‘t’에 있고, 현재 위치에서 ~ 명령키 입력&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-06-unix-15-06.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;4-읽기-전용-편집&quot;&gt;4. 읽기 전용 편집&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;파일을 읽기 전용으로 불러와 원본의 손상을 막을 수 있는 기능&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;vi –R 옵션 사용&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ vi –R hosts
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;view 명령 사용&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ view hosts
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;5-데이터-복구&quot;&gt;5. 데이터 복구&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;컴퓨터를 사용하다 갑자기 정전이 되거나 실수로 전원 코드를 뽑게 되어 시스템이 갑자가 다운되었을 때&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;vi 에디터는 실제 파일을 편집하는게 아니라 편집 버퍼에 편집 내용이 복사됨&lt;/li&gt;
      &lt;li&gt;시스템이 갑자기 다운되어도 편집 버퍼는 자동 저장&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;편집하던 파일 복구 방법&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;vi –r [파일 명] : 파일명은 생략 가능, 생략하면 되살릴 수 있는 모든 파일을 보여줌&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ vi –r text
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;vi-환경-설정&quot;&gt;vi 환경 설정&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;1-vi-환경-설정&quot;&gt;1. vi 환경 설정&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;vi 사용할 때 사용자 자신에게 맞는 환경 설정&lt;/li&gt;
  &lt;li&gt;마지막 행 모드에서 실행&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-06-unix-15-07.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/assets/img/unix/2020-03-06-unix-15-08.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;2-행-번호-표시&quot;&gt;2. 행 번호 표시&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;:set nu 명령&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-06-unix-15-09.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;행 번호는 사용자의 편의를 위해 보이는 것, 파일에 저장되지 않음&lt;/li&gt;
      &lt;li&gt;행 번호 없애려면 :set nonu 명령키 사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;3-특수-문자-표시&quot;&gt;3. 특수 문자 표시&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;:set list 명령&lt;/li&gt;
  &lt;li&gt;vi에서 보이지 않는 행의 끝이나 탭 같은 특수 문자들을 보여줌&lt;/li&gt;
  &lt;li&gt;한글(HWP)의 조판 부호 보기 기능과 비슷&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;4-현재-모드-표시&quot;&gt;4. 현재 모드 표시&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;:set showmode 명령&lt;/li&gt;
  &lt;li&gt;vi 작업 도중 명령 모드인지 입력 모드인지 알고자 할 때&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;명령 모드인 경우 아무 표시 없고, 입력 모드인 경우 화면 하단에 “–INSERT–”라고 표시됨&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  ~
  ~
  --INSERT--
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;5-환경-설정-값-표시&quot;&gt;5. 환경 설정 값 표시&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;:set 명령&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;현재 사용 중인 vi의 환경 설정 상태를 보여줌&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  ~
  ~
  :set
  --- Options ---
  background=dark scroll=14
  fileencodings=ucs-bom,utf-8,default,latin1
  Press ENTER or type command to continue
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;6-모든-환경-변수-표시&quot;&gt;6. 모든 환경 변수 표시&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;:set all 명령&lt;/li&gt;
  &lt;li&gt;vi 환경 설정에 사용되는 모든 환경 변수와 현재 설정 값을 보여줌&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;7-관련-파일-exrc&quot;&gt;7. 관련 파일 .exrc&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;vi 편집기의 환경 설정을 등록하여 실행시 계속적으로 지정한 설정을 이용하도록 해주는 파일&lt;/li&gt;
  &lt;li&gt;set 명령과 환경 변수를 이용하여 홈 디렉토리에 .exrc (또는 .vimrc) 안에 적어 놓으면 vi가 실행될 때 기본으로
설정되어 시작하게 됨&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Fri, 06 Mar 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/devlog/2020/03/06/unix-15/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/devlog/2020/03/06/unix-15/</guid>
        
        <category>unix</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[유닉스] 편집기 (vi) - 내용 수정 및 삭제</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-06-unix-14.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;내용-수정-및-삭제&quot;&gt;내용 수정 및 삭제&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;1-내용-수정하기&quot;&gt;1. 내용 수정하기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;한 글자만 수정, 단어별로 수정, 수정할 글자 수 지정해서 수정&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-06-unix-14-01.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;2-내용-삭제취소하기&quot;&gt;2. 내용 삭제/취소하기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;입력 모드에서 입력 중에 틀린 글자 삭제할 때는 Backspace 키나 Delete 키를 이용하면 됨&lt;/li&gt;
  &lt;li&gt;명령 모드에서는 문자를 삭제하거나 행을 삭제하기 위해 별도의 명령키 존재&lt;/li&gt;
  &lt;li&gt;삭제할 문자 수나 행 수를 지정하려면 명령키 앞에 숫자를 지정&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-06-unix-14-02.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;편집-기능&quot;&gt;편집 기능&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;1-복사하기-붙이기-잘라내기&quot;&gt;1. 복사하기, 붙이기, 잘라내기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;소문자 yy 명령키 : 해당 행을 복사&lt;/li&gt;
  &lt;li&gt;커서를 원하는 위치로 이동 후 p 명령키 : 붙이기&lt;/li&gt;
  &lt;li&gt;dd 명령키로 행 삭제 후 p 명령키 입력하면 “잘라내서 붙이기”&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-06-unix-14-03.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;커서 위치에서 1행과 2행 복사하기&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  Hello, World!
  ============
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;1행에서 2yy 명령키 입력 후 2행에서 p 명령키 입력&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  Hello, World!
  ============
  Hello, World!
  ============
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;2-버퍼의-사용&quot;&gt;2. 버퍼의 사용&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;버퍼 : 복사하거나 잘라낸 내용을 저장해두는 임시 저장 공간&lt;/li&gt;
  &lt;li&gt;윈도우의 클립보드와 같은 기능&lt;/li&gt;
  &lt;li&gt;yy 명령키를 사용해 복사할 경우 복사된 내용은 버퍼에 저장&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;언네임드(unnamed) 버퍼&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;이름 붙이지 않은 버퍼&lt;/li&gt;
      &lt;li&gt;한 번에 하나의 내용만 저장&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;네임드(named) 버퍼&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;이름 붙인 버퍼&lt;/li&gt;
      &lt;li&gt;각기 다른 이름을 붙인 버퍼에 별도로 저장할 수 있는 내용을 모두 저장하고 사용 가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;네임드 버퍼 사용&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;버퍼 이름 붙이기 : “(따옴표) + 문자, 또는 ”+숫자(숫자 버퍼라고도 함)&lt;/li&gt;
      &lt;li&gt;네임드 버퍼 : “a, ”b, “c, ……, ”z&lt;/li&gt;
      &lt;li&gt;숫자 버퍼 : “1, ”2, “3, …… ”9&lt;/li&gt;
      &lt;li&gt;네임드 버퍼에 커서 위치한 행 저장 : “ayy, 붙이기 : ”ap&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;네임드 버퍼 사용하여 1행과 2행을 따로 복사하여 붙이기&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  Hello, World!
  ============
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ul&gt;
      &lt;li&gt;커서를 1행에 위치하고 “ayy 입력&lt;/li&gt;
      &lt;li&gt;커서를 2행으로 이동 후 “byy 입력&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;2행 다음에 b 버퍼 먼저 붙이기 하려면, “bp, ”ap를 차례로 입력&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  Hello, World!
  ============
  ============
  Hello, World!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;3-마지막-행-모드에서-복사하기와-잘라내기&quot;&gt;3. 마지막 행 모드에서 복사하기와 잘라내기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;마지막 행 모드에서 행을 복사하고 잘라내기 할 때는 범위를 지정한 후 수행&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;범위 지정하기&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;vi에서 범위 지정은 마지막 행 모드에서만 가능&lt;/li&gt;
      &lt;li&gt;행번호와 특수 문자 사용&lt;/li&gt;
      &lt;li&gt;특수문자 : 현재 커서가 있는 행을 나타내는 .(마침표), 마지막 행을 나타내는 $, %&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-06-unix-14-04.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;
&lt;img src=&quot;/assets/img/unix/2020-03-06-unix-14-05.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;복사하기/잘라내기&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;:은 마지막 행 모드로 이동하기 위한 기호&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-06-unix-14-06.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;4-검색하기&quot;&gt;4. 검색하기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;vi에서 특정 단어를 검색하거나 검색한 단어를 다른 단어로 바꾸기 위한 명령은 마지막 행 모드에서 제공&lt;/li&gt;
  &lt;li&gt;검색하기 위해 마지막 행 모드로 가려면 “/”나 “?”를 입력&lt;/li&gt;
  &lt;li&gt;“/”는 커서의 위치에서 아래 방향으로 검색&lt;/li&gt;
  &lt;li&gt;“?”는 커서의 위치에서 위 방향으로 검색&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-06-unix-14-07.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;5-바꾸기&quot;&gt;5. 바꾸기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;기존의 문자열을 다른 문자열로 바꾸려면 :를 입력해 마지막 행 모드로 이동&lt;/li&gt;
  &lt;li&gt;바꾸기 명령은 파일 전체를 대상으로 할 수도 있고 특정 범위만 지정해 실행할 수도 있음&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-06-unix-14-08.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;문서 전체에서 and를 or로 바꾸기 예제&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;and 패턴을 찾아 or로 바꿀 때 수정할지 여부를 묻는 명령 사용&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  :%s/and/or/gc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;and를 or로 바꿀 때마다 아래와 같은 질문을 함&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  Starry, starry night
  Paint your palette blue and gray
  Look out on a summer’s day
  With eyes that know the darkness in my soul
  Shadows on the hills
  Sketch the trees and the daffodils;
  Catch the breeze and the winter chills
  In colors on the snowy linen land.
  ~
  replace with or(y/n/a/q/l/^E/^Y)?
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;패턴에 대한 옵션의 의미&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-06-unix-14-09.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

</description>
        <pubDate>Fri, 06 Mar 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/devlog/2020/03/06/unix-14/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/devlog/2020/03/06/unix-14/</guid>
        
        <category>unix</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[유닉스] 편집기 (vi)</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-06-unix-13.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;유닉스-편집기의-종류&quot;&gt;유닉스 편집기의 종류&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;1-편집기의-종류&quot;&gt;1. 편집기의 종류&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;행 단위 편집기와 화면 단위 편집기로 구분&lt;/li&gt;
  &lt;li&gt;행 단위 편집기 : 한 번에 한 행씩만 작성하거나 수정&lt;/li&gt;
  &lt;li&gt;화면 단위 편집기 : 전체 내용을 화면 단위로 보면서 커서를 이동하며 작업&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-06-unix-13-01.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;ed&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;유닉스 초기의 표준 편집기&lt;/li&gt;
      &lt;li&gt;사용이 불편해 지금은 거의 사용하지 않음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;ex&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;ed의 발전된 버전&lt;/li&gt;
      &lt;li&gt;행 단위 편집기로 시작하여 화면 단위 편집기로 발전&lt;/li&gt;
      &lt;li&gt;현재는 vi에 내장되어 명령행 명령 모드를 제공&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;sed&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;비대화식 행 단위 편집기&lt;/li&gt;
      &lt;li&gt;조건에 맞는 행에 지정한 편집 명령을 실행, 결과를 화면에 출력&lt;/li&gt;
      &lt;li&gt;크기가 큰 파일에 간단한 편집을 반복 수행할 때 많이 사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;emacs&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;화면 단위 편집기&lt;/li&gt;
      &lt;li&gt;종류가 다양, GNU 이맥스가 유명&lt;/li&gt;
      &lt;li&gt;기본 설치가 되지 않아 별도로 설치해야 함&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;가장 큰 장점 : 파일 편집하면서, 유닉스의 여러 기능들을 그냥 사용할 수 있음&lt;/p&gt;

        &lt;p&gt;예) 편집 도중 이메일 주고받을 수 있고, 쉘 실행, 파일 복사, 삭제 등 작업 가능&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;vi&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;유닉스에서 기본으로 제공되는 화면 편집기&lt;/li&gt;
      &lt;li&gt;ex 편집기의 명령을 그대로 사용 가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;2-모드형과-비모드형-편집기&quot;&gt;2. 모드형과 비모드형 편집기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;윈도우 시스템에서 사용하는 한글 워드는 비모드형 편집기&lt;/li&gt;
  &lt;li&gt;vi는 모드형 편집기&lt;/li&gt;
  &lt;li&gt;비모드형에서 a는 항상 a라는 글자를 의미&lt;/li&gt;
  &lt;li&gt;모드형에서 a는 글자 자체가 되기도 하고 명령을 나타내는 키가 되기도 함&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;vi-동작-모드&quot;&gt;vi 동작 모드&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;1-vi-동작-구조&quot;&gt;1. vi 동작 구조&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;vi에서 편집한 파일은 저장할 파일을 지정하기 전에 하드디스크에 저장되지 않고, 버퍼에만 존재&lt;/li&gt;
  &lt;li&gt;사용자가 파일 저장 명령을 주어야 하드디스크에 저장됨&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-06-unix-13-02.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;2-vi-동작-모드&quot;&gt;2. vi 동작 모드&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;입력 모드 : 실제로 내용을 입력할 수 있는 모드&lt;/li&gt;
  &lt;li&gt;명령 모드, 마지막 행 모드(명령 모드에 포함시키기도 함) : 글자와 행의 삭제, 검색, 저장 등의 기능 수행&lt;/li&gt;
  &lt;li&gt;vi를 시작하면 바로 명령 모드&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-06-unix-13-03.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;vi 명령의 분류&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;원하는 위치로 이동하는 명령&lt;/li&gt;
      &lt;li&gt;입력 모드로 전환하는 명령&lt;/li&gt;
      &lt;li&gt;수정 혹은 삭제 명령&lt;/li&gt;
      &lt;li&gt;복사 및 붙이기&lt;/li&gt;
      &lt;li&gt;기타 명령&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;3-vi-시작과-종료&quot;&gt;3. vi 시작과 종료&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;vi의 기본 기능&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;지정한 파일을 편집&lt;/li&gt;
      &lt;li&gt;파일명을 지정하지 않으면 빈 파일이 열리고 파일명은 저장할 때 지정 가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;형식 : vi [파일명…]&lt;/li&gt;
  &lt;li&gt;사용 예 : vi hello.c&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;4-vi-시작하기&quot;&gt;4. vi 시작하기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;파일명을 지정하거나 지정하지 않을 수도 있음&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-06-unix-13-04.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;5-vi-종료하고-파일-저장하기&quot;&gt;5. vi 종료하고 파일 저장하기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;명령 모드에서 파일 저장과 종료를 동시 수행 : ZZ(Shift+zz), 파일 저장 후 바로 종료함&lt;/li&gt;
  &lt;li&gt;다른 명령키들은 마지막 행 모드에서 실행할 수 있음&lt;/li&gt;
  &lt;li&gt;마지막 행 모드로 가려면 콜론(“:”) 키를 먼저 입력&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-06-unix-13-05.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;6-입력-모드로의-전환&quot;&gt;6. 입력 모드로의 전환&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;vi는 명령 모드에서 시작&lt;/li&gt;
  &lt;li&gt;내용을 입력하거나 편집하려면 명령 모드에서 입력 모드로 전환&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-06-unix-13-06.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;명령키를 사용한 입력 모드 전환&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;명령 모드에서 i 명령키를 입력하면 내용 입력 가능&lt;/li&gt;
      &lt;li&gt;명령 모드에서 o 명령키를 입력하면 현재 커서 위치 다음 행에 글자 입력 가능&lt;/li&gt;
      &lt;li&gt;명령 모드에서 a 명령키를 입력하면 현재 커서 위치 오른쪽에 글자 입력 가능&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;내용 모두 입력한 뒤 명령 모드로 돌아가려면 Esc 키를 누름&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  vi Insert Mode Test
  unix linux vi-editor
  ~
  ~
  ~
  ~
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;7-커서-이동&quot;&gt;7. 커서 이동&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;vi에서 커서 이동은 키보드를 이용&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-06-unix-13-07.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/assets/img/unix/2020-03-06-unix-13-08.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;8-화면-이동&quot;&gt;8. 화면 이동&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;파일 크기가 터미널 화면 크기보다 클 경우 화면 이동&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;화면 이동 명령키&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;Ctrl + f 명령키는 현재 보이는 부분의 아래 부분으로 한 화면 이동&lt;/li&gt;
      &lt;li&gt;Ctrl + b 명령키는 현재 보이는 부분의 윗부분으로 한 화면 이동&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-06-unix-13-09.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;마지막 행 모드에서 커서 이동&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;:을 입력해 마지막 행으로 전환한 뒤 이동하려는 행 번호 입력&lt;/li&gt;
      &lt;li&gt;행 번호 대신 $를 입력하면 파일의 마지막 행으로 이동&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-06-unix-13-10.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

</description>
        <pubDate>Fri, 06 Mar 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/devlog/2020/03/06/unix-13/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/devlog/2020/03/06/unix-13/</guid>
        
        <category>unix</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[Database] Windows(윈도우)에 MySQL 설치방법</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-15.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;dbms&quot;&gt;DBMS&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;1-대표적인-dbms&quot;&gt;1. 대표적인 DBMS&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-15-01.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;2-mysql&quot;&gt;2. MySQL&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;공개 소프트웨어 제공
    &lt;ul&gt;
      &lt;li&gt;Community Edition – GPL (General Public License)&lt;/li&gt;
      &lt;li&gt;상업적인 목적으로 사용시 구매하여야 함&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;기종과 운영체제에 관계없이 사용 가능&lt;/li&gt;
  &lt;li&gt;설치가 쉽고 사용하기 쉬워서 초보자도 빠른 시일 내에 사용법을 익힐 수 있다.&lt;/li&gt;
  &lt;li&gt;대용량 처리도 가능&lt;/li&gt;
  &lt;li&gt;처리 속도가 빠름&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;windows윈도우에-mysql-설치&quot;&gt;Windows(윈도우)에 MySQL 설치&lt;/h1&gt;

&lt;h3 id=&quot;mysql-다운로드&quot;&gt;MySQL 다운로드&lt;/h3&gt;

&lt;p&gt;(A) http://www.mysql.com/downloads 다운로드&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-15-02.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;(B) MySQL Community Edition (GPL) 의 Community (GPL) Downloads 선택&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-15-03.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;(C) MySQL Community Server의 DOWNLOAD 선택&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-15-04.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;(D) MySQL Community Server에 대한 온라인 설명서&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-15-05.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;(E) MySQL Community Server의 플랫폼 (Microsoft Windows) 선택&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-15-06.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;(F) Microsoft Windows 용 MySQL Community Server&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-15-07.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;(G) Windows 32bit 용 MySQL Download 시작 화면&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;32bit 와 64bit 운영체제 확인하기&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;“제어판 &amp;gt; 시스템” 의 시스템 종류에 “xx비트 운영 체제”와 같이 표시되어 있음&lt;/li&gt;
      &lt;li&gt;운영체제가 설치된 드라이브의 Windows 폴더에 “Program Files”와 “Program Files (x86)”과 같이 두 개의 폴더가 있는 경우, 64bit 운영체제 임&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;소프트웨어 실행시 주의 점&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;64bit 운영체제에서 32bit용 소프트웨어 실행에 문제 없음&lt;/li&gt;
      &lt;li&gt;32bit 운영체제에서 64bit용 소프트웨어 실행 불가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;MySQL Installer는 32bit 용이지만, 32bit와 64bit MySQL을 설치한다&lt;/li&gt;
  &lt;li&gt;Web Installer는 설치시 인터넷을 통하여 필요한 파일을 다운로드 함.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-15-08.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;(H) 다른 이름으로 저장 &amp;gt; 저장할 폴더 선택하여 저장&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;파일 이름은 “mysql-installer-community-5.6.25.0.msi”으로 저장 됨&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-15-09.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;mysql-설치하기&quot;&gt;MySQL 설치하기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;저장한 “mysql-installer-community-5.6.25.0.msi”를 더블 클릭하여 실행&lt;/p&gt;

    &lt;p&gt;(A) .NET Framework 4.0이 설치되지 않은 시스템&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;오류 메시지 발생하며 설치가 되지 않음&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-15-10.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;웹브라우저에 http://go.Microsoft.com/fwlink/?Linkid=181012 로 이동&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-15-11.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;.NET Framework 4(웹 설치 관리자) 다운로드
        &lt;ul&gt;
          &lt;li&gt;dotNetFx40_Full_setup.exe 저장됨&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-15-12.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;dotNetFx40_Full_setup.exe 실행&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-15-13.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;.NET Framework 4 설치&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-15-14.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;.NET Framework 4 설치 완료
        &lt;ul&gt;
          &lt;li&gt;컴퓨터 다시 시작
  &lt;img src=&quot;/assets/img/database/2020-03-06-database-15-15.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;.NET Framework 4.0이 설치된 시스템&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;“mysql-installer-community-5.6.25.0.msi” 실행&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-15-16.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;
  &lt;img src=&quot;/assets/img/database/2020-03-06-database-15-17.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;MySQL 설치 초기화 작업 화면&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-15-18.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;Setup Type 선택하기
        &lt;ul&gt;
          &lt;li&gt;“Developer Default” 선택&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-15-19.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;필요사항 체크&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-15-20.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;설치
  &lt;img src=&quot;/assets/img/database/2020-03-06-database-15-21.png&quot; alt=&quot;&quot; /&gt;
  &lt;img src=&quot;/assets/img/database/2020-03-06-database-15-22.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;환경 설정&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-15-23.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;MySQL Server - 환경설정 타입과 네트워크 설정&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-15-24.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;MySQL Server - Root 계정 설정 및 사용자 추가&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-15-25.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;MySQL Server - 윈도우 서비스 등록 설정
        &lt;ul&gt;
          &lt;li&gt;서비스명 등록&lt;/li&gt;
          &lt;li&gt;시스템 시작시 MySQL Server 실행 등록&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-15-26.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;MySQL Server - 선택한 환경 설정 적용하기&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-15-27.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;
  &lt;img src=&quot;/assets/img/database/2020-03-06-database-15-28.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;
  &lt;img src=&quot;/assets/img/database/2020-03-06-database-15-29.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;샘플과 예제 – 서버로 연결 설정&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-15-30.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;샘플과 예제 – 서버 환경 설정에 적용하기&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-15-31.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;환경 설정 완료&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-15-32.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;MySQL 설치 완료&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-15-33.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;mysql-테스트&quot;&gt;MySQL 테스트&lt;/h3&gt;

&lt;p&gt;(A) 설치된 폴더 확인하기&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;실치 폴더 : C:\Program Files\MySQL&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;mysql.exe 가 있는 폴더 : C:\Program Files\MySQL\MySQL Server 5.6\bin&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;MySQL의 모든 실행 파일들이 있는 곳&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;(B) MySQL 실행하기&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;명령어 : mysql –uroot –p&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;패스워드 : 설치시 입력한 패스워드&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-15-34.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;(C) 기본 시스템 데이터베이스 확인하기&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;명령어 : show databases;&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-15-35.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;(D) MySQL 종료하기&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;명령어 : quit&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-15-36.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Fri, 06 Mar 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/devlog/2020/03/06/database-15/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/devlog/2020/03/06/database-15/</guid>
        
        <category>database</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[Database] 순수관계연산자 (3/3)</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-14.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;확장-조인-연산&quot;&gt;확장 조인 연산&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;1-외부조인-outer-join&quot;&gt;1. 외부조인 (Outer Join)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;자연조인의 확장된 형태&lt;/li&gt;
  &lt;li&gt;자연조인시 조인에 실패한 투플을 모두 보여주되, 값이 없는 대응 속성에는 NULL값을 채워서 반환&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;모든 속성을 보여주는 기준 릴레이션의 위치에 따른 분류&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-14-01.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;왼쪽 외부조인&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-14-02.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;질의 1 : 주문내역을 고객 기준으로 작성하되 주문내역이 없는 고객도 표시하시오&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-14-03.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-14-04.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;질의 2 : 주문내역을 기준으로 현황을 파악하되 고객릴레이션에 고객아이디가 없는 주문도 모두 표시하시오.&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-14-05.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;질의 3 : 주문내역이 없는 고객과 주문의 고객아이디가 고객 릴레이션에 없는 경우도 모두 표시하시오&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-14-06.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;2-세미조인-semi-join&quot;&gt;2. 세미조인 (Semi Join)&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;자연조인을 한 후 두 릴레이션 중 한쪽 릴레이션의 결과만 반환&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;기호에서 닫힌 쪽 릴레이션의 투플만 반환&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;세미조인 종류&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-14-07.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;질의 1 : 고객중에서 주문 내역이 있는 고객의 정보를 찾으시오.&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-14-08.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;관계대수의-복합사용-예&quot;&gt;관계대수의 복합사용 예&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;관계대수식은 여러 연산자들을 복합하여 사용하는 경우가 많다
    &lt;ul&gt;
      &lt;li&gt;카디션 프로덕트 단독으로 사용하면 의미 없는 결과를 반환 =&amp;gt; 프로젝트과 셀렉트 연산과 조합&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;연산의 우선 순위
    &lt;ul&gt;
      &lt;li&gt;왼쪽에서 오른쪽으로 순차적으로 처리&lt;/li&gt;
      &lt;li&gt;우선 처리하여야 하는 연산은 ( )를 사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;1-셀렉트--프로젝트--집합-연산&quot;&gt;1. 셀렉트 + 프로젝트 + 집합 연산&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;질의 : 서점의 도서 중 가격이 10,000원 이하인 도서이름과 출판사를 찾으시오&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-14-09.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;질의 : 두 서점의 도서 중 가격이 10,000원 이하인 도서이름과 출판사를 찾으시오&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-14-10.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;2-카디션-프로덕트와-조인을-사용한-연산-비교&quot;&gt;2. 카디션 프로덕트와 조인을 사용한 연산 비교&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;질의 : 홍길동 고객의 거래 내역중, 주문번호와 제품코드, 가격을 추출하시오&lt;/p&gt;

    &lt;p&gt;(1) 카디션 프로덕트를 사용한 연산&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-14-11.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-14-12.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;p&gt;(2)조인을 사용한 연산&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-14-13.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-14-14.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Fri, 06 Mar 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/devlog/2020/03/06/database-14/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/devlog/2020/03/06/database-14/</guid>
        
        <category>database</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[Database] 순수관계연산자 (2/3)</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-13.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;조인연산자-개요&quot;&gt;조인연산자 개요&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;1-조인-join-연산자&quot;&gt;1. 조인 (Join) 연산자&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;이용 시기&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;하나의 릴레이션으로 원하는 데이터를 얻을 수 없어 관계가 있는 여러 릴레이션을 함께 사용하여야 하는 경우&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;조인 속성을 이용해 두 릴레이션을 조합하여 하나의 결과 릴레이션 만듬&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;조인 속성 : 두 릴레이션이 공통으로 가지고 있는 속성&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;조인 연산자 : ▷◁&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-13-01.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;결과 릴레이션&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;조인 속성의 값이 같은 투플만 수평으로 결합&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-13-02.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;셀렉트(σ,Sigma)연산 : σ조건식(릴레이션)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;제한 사항
    &lt;ul&gt;
      &lt;li&gt;두 릴레이션의 조인에 참여하는 속성이 동일한 도메인으로 구성되어야 함&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;조인 연산의 종류&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-13-03.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;조인연산자-개요-1&quot;&gt;조인연산자 개요&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;1-세타조인-theta-join-θ-join&quot;&gt;1. 세타조인 (Theta Join, θ Join)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;조인에 참여하는 두 릴레이션의 속성 값을 비교하여 조건을 만족하는 투플만 반환&lt;/li&gt;
  &lt;li&gt;결과 릴레이션의 차수 = 릴레이션R의 차수 + 릴레이션S의 차수&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;표현법&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-13-04.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;θ 는 비교 연산자( &amp;gt;, ≥, &amp;lt;, ≤, =, ≠ )를 의미&lt;/li&gt;
      &lt;li&gt;r은 R의 속성&lt;/li&gt;
      &lt;li&gt;s는 S의 속성&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;2-동등조인-equi-join&quot;&gt;2. 동등조인 (Equi Join)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;세타조인에서 = 연산자를 사용한 조인&lt;/li&gt;
  &lt;li&gt;일반적인 조인연산은 동등조인을 지칭함&lt;/li&gt;
  &lt;li&gt;내부조인 (Inner Join)이라고도 함&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;표현법&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-13-05.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;질의 – 고객과 고객의 주문 사항을 모두 보이시오&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-13-06.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-13-07.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-13-08.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-13-09.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;결과 릴레이션&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;두 릴레이션에서 조인 속성 값이 같은 투플끼리만 수평으로 연결하여 생성된 새로운 투플로 구성&lt;/li&gt;
          &lt;li&gt;결과 릴레이션 차수 = 고객릴레이션 차수 + 주문릴레이션 차수&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;2-동등조인-equi-join-1&quot;&gt;2. 동등조인 (Equi Join)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;동등조인에서 조인에 참여한 속성이 두 번 나오지 않도록 두 번째 속성을 제거한 결과를 반환&lt;/li&gt;
  &lt;li&gt;연산자 : ▷◁N&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;표현법&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-13-10.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;결과 릴레이션의 차수 = 릴레이션R의 차수 + 릴레이션S의 차수 – 1&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;질의 : 고객과 고객의 주문 사항을 모두 보이시오&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-13-11.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-13-12.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Fri, 06 Mar 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/devlog/2020/03/06/database-13/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/devlog/2020/03/06/database-13/</guid>
        
        <category>database</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[JSTL] &lt; c:if &gt;, &lt; c:choose &gt; 태그 사용법</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/jstl/2020-03-04-tip-jstl-01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;jstl---태그-사용법&quot;&gt;[JSTL] &lt;c:if&gt;, &lt;c:choose&gt; 태그 사용법&lt;/c:choose&gt;&lt;/c:if&gt;&lt;/h1&gt;
&lt;h3 id=&quot;how-to-use-if-else-option-in-jstl&quot;&gt;How to use if-else option in JSTL&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;조건&quot;&gt;조건&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;jsp 페이지  상단에 아래의 코드를 선언 하고 사용한다.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   &amp;lt;%@ taglib uri=&quot;http://java.sun.com/sjp/jstl/core&quot; prefix=&quot;c&quot; %&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;-cif-&quot;&gt;&amp;lt; c:if &amp;gt;&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;jstl에서 조건에 따른 분기를 처리할 수 있는 태그로 &amp;lt; c:if &amp;gt;와 &amp;lt; c:choose &amp;gt;가 있습니다.&lt;/li&gt;
  &lt;li&gt;태그 - test 속성내의 EL 의 결과가 참이면 실행됩니다. else 구문은 없습니다.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;예제&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   &amp;lt;c:set var=&quot;name&quot; value=&quot;홍길동&quot; /&amp;gt;
      &amp;lt;c:if test=&quot;${nae eq '홍길동'}&quot;&amp;gt;
          &amp;lt;c:out value=&quot;${str}&quot; /&amp;gt;
      &amp;lt;/c:if&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ul&gt;
      &lt;li&gt;위의 코드는 변수 name의 값이 “홍길동” 이면 출력합니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&amp;lt; c:if &amp;gt; 태그에 사용될 수 있는 속성은 다음 세 가지 입니다.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;test : 필수 속성으로 속성값으로 EL 비교식을 가집니다.&lt;/li&gt;
      &lt;li&gt;var : 조건 결과를 저장할 변수를 지정합니다.&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;scope : 조건 결과를 저장할 변수의 저장 scope을 지정합니다.&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &amp;lt;c:if test=&quot;${name eq '홍길동'}&quot; var=&quot;nameHong&quot; scope=&quot;session&quot;&amp;gt;
      ....
  &amp;lt;/c:if&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;

        &lt;ul&gt;
          &lt;li&gt;위 코드는 test 속성의 결과를 nameHong 변수 이름으로 session 영역에 저장합니다. 동일 세션의 다른 페이지에서 결과를 찾을 수 있습니다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;test속성에-사용될-비교-연산자&quot;&gt;test속성에 사용될 비교 연산자&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;eq(==) : 문자열 또는 숫자가 같으면 참입니다. null 또는 빈 문자열 인지도 확인할 수 있습니다.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; ﻿&amp;lt;c:if test=&quot;${name == '홍길동'}&quot;&amp;gt;
      
 &amp;lt;c:if test=&quot;${name eq '홍길동'}&quot;&amp;gt;
      
 &amp;lt;c:if test=&quot;${name == null}&quot;&amp;gt;
      
 &amp;lt;c:if test=&quot;${name eq null}&quot;&amp;gt;
      
 &amp;lt;c:if test=&quot;${num == 5}&quot;&amp;gt;
      
 &amp;lt;c:if test=&quot;${num eq 5}&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;ne(!=) : 문자열 또는 숫자가 다르면 참입니다.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &amp;lt;c:if test=&quot;${name != '홍길동'}&quot;&amp;gt;
       
  &amp;lt;c:if test=&quot;${name ne '홍길동'}&quot;&amp;gt;
       
  &amp;lt;c:if test=&quot;${num != 5}&quot;&amp;gt;
       
  &amp;lt;c:if test=&quot;${num ne 5}&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;empty : List 또는 배열이 비어있거나, 문자열이 null 또는 빈 문자열이면 참을 반환합니다. 숫자 0은 eq(==) 로 비교해야 합니다.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   ﻿&amp;lt;c:if test=&quot;${empty name}&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;not empty : List 또는 배열이 비어 있지 않을 경우, 문자열이 값이 있을 경우 참을 반환합니다.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   ﻿&amp;lt;c:if test=&quot;${not empty name}&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h3 id=&quot;논리연산자&quot;&gt;논리연산자&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;비교연산자의 조합으로 논리 연산을 할 수 있는 논리연산자 입니다.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;and (&amp;amp;&amp;amp;) : 모두 참일때 참이 됩니다.&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  ﻿&amp;lt;c:if test=&quot;${a &amp;gt; b and c &amp;lt; d}&quot;&amp;gt;
            
  &amp;lt;c:if test=&quot;${a &amp;gt; b &amp;amp;&amp;amp; c &amp;lt; d}&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;or (II) : 둘중 하나라도 참이면 참이 됩니다.&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  ﻿&amp;lt;c:if test=&quot;${a &amp;gt; b or c &amp;lt; d}&quot;&amp;gt;
            
  &amp;lt;c:if test=&quot;${a &amp;gt; b || c &amp;lt; d}&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;not (!) : 논리를 반전합니다.&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  ﻿&amp;lt;c:if test=&quot;${not a == ''}&quot;&amp;gt;
            
  &amp;lt;c:if test=&quot;${! a == ''}&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;괄호를 사용하여 논리연산의 우선 순위를 지정할 수 있습니다.&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  ﻿&amp;lt;c:if test=&quot;${a &amp;gt; b &amp;amp;&amp;amp; (b &amp;gt; c || d &amp;lt; e)}&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;-cchoose--태그&quot;&gt;&amp;lt; c:choose &amp;gt; 태그&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&amp;lt; c:choose &amp;gt; 태그는 조건에 따른 여러곳으로 분기 가능하고, 조건이 맞은 것이 없을 경우 기본 분기를 제공할 수 있습니다.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &amp;lt;c:choose&amp;gt;
      &amp;lt;c:when test=&quot;${name eq '김철수'}&quot;&amp;gt; 
          ... 
      &amp;lt;/c:when&amp;gt;
       
      &amp;lt;c:when test=&quot;${name eq '박영희'}&quot;&amp;gt; 
          ... 
      &amp;lt;/c:when&amp;gt;
       
      &amp;lt;c:otherwise&amp;gt; ... &amp;lt;/c:otherwise&amp;gt;
  &amp;lt;/c:choose&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ul&gt;
      &lt;li&gt;위 코드는 이름이 “김철수”, “박영희” 일 경우 분기 하고 그 외의 경우에는 &amp;lt; c:otherwise &amp;gt; 로 분기 합니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;참고 : https://offbyone.tistory.com/367&lt;/p&gt;

</description>
        <pubDate>Wed, 04 Mar 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/tip/2020/03/04/tip-jstl-01/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/tip/2020/03/04/tip-jstl-01/</guid>
        
        <category>jstl</category>
        
        
        <category>tip</category>
        
      </item>
    
      <item>
        <title>[자바스크립트] 절대값 구하기[ Math.abs() ] </title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/javascript/2020-03-01-tip-javascript-06.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;자바스크립트-절대값--mathabs-&quot;&gt;자바스크립트 절대값 [ Math.abs() ]&lt;/h1&gt;
&lt;h3 id=&quot;how-to-use-mathabs-in-javascript&quot;&gt;How to use math.abs in javascript&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;사용법&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;빈 객체, 하나 이상의 요소를 가진 배열, 숫자가 아닌 문자열, undefined나 빈 매개변수를 받으면 NaN을 반환합니다. null, 빈 문자열이나 빈 배열을 제공하면 0을 반환합&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; function difference(a, b) {
   return Math.abs(a - b);
 }
    
 console.log(difference(3, 5));
 // expected output: 2
    
 console.log(difference(5, 3));
 // expected output: 2
    
 console.log(difference(1.23456, 7.89012));
 // expected output: 6.6555599999999995
    
    
    
 Math.abs('-1');     // 1
 Math.abs(-2);       // 2
 Math.abs(null);     // 0
 Math.abs('');       // 0
 Math.abs([]);       // 0
 Math.abs([2]);      // 2
 Math.abs([1,2]);    // NaN
 Math.abs({});       // NaN
 Math.abs('string'); // NaN
 Math.abs();         // NaN
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sun, 01 Mar 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/tip/2020/03/01/tip-javascript-06/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/tip/2020/03/01/tip-javascript-06/</guid>
        
        <category>javascript</category>
        
        
        <category>tip</category>
        
      </item>
    
      <item>
        <title>[자바스크립트] 문자열 길이(문자열 수) 확인</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/javascript/2020-03-01-tip-javascript-05.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;자바스크립트-문자열-길이문자열-수-확인&quot;&gt;자바스크립트 문자열 길이(문자열 수) 확인&lt;/h1&gt;
&lt;h3 id=&quot;how-to-check-string-length-in-javascript&quot;&gt;How to check String length in JavaScript&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    // 정말 단순이 변수에 담긴 문자의 길이를 알고 싶을 뿐.
    // length 함수를 사용하면 된다.
    
    let str = &quot;이렇게 쉬운걸 왜 몰랐을까 나는 똥멍청이 입니다.&quot;;
    let testString = str.length;
    console.log(testString);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Sun, 01 Mar 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/tip/2020/03/01/tip-javascript-05/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/tip/2020/03/01/tip-javascript-05/</guid>
        
        <category>javascript</category>
        
        
        <category>tip</category>
        
      </item>
    
      <item>
        <title>[유닉스] 링크, 수정 시각 변경</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-02-29-unix-12.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;파일-링크&quot;&gt;파일 링크&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;1-ln-명령&quot;&gt;1. ln 명령&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;파일의 링크를 생성&lt;/li&gt;
  &lt;li&gt;형식 : ln [옵션] 원본파일명 링크파일명&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;옵션&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;-s : 심볼릭 링크 파일 생성&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;사용 예 : ln test lntest, ln –s test lntest&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;2-하드-링크&quot;&gt;2. 하드 링크&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;하나의 파일에 둘 이상의 다른 이름을 붙일 수 있음&lt;/li&gt;
  &lt;li&gt;파일에 붙인 이름을 하드 링크, 이름이 붙여진 파일을 하드 링크 파일&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;예제&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cat &amp;gt; ln.txt
  This is the first ln test.
  ^D
  $ ls –l ln.txt
  -rw--r--r-- 1 ksshin ksshin 27 6월 12 16:56 ln.txt
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ul&gt;
      &lt;li&gt;파일의 종류는 일반 파일&lt;/li&gt;
      &lt;li&gt;하드 링크 수는 1&lt;/li&gt;
      &lt;li&gt;원본 파일이 한 개이고 파일 이름의 개수가 1이므로 하드 링크 수가 1&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;3-하드-링크-파일&quot;&gt;3. 하드 링크 파일&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;ln 명령 사용하여 기존 파일에 새로운 이름 부여&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ ln ln.txt ln.hd
  $ ls –l ln.*
  -rw--r--r-- 2 ksshin ksshin 27 6월 12 16:56 ln.hd
  -rw--r--r-- 2 ksshin ksshin 27 6월 12 16:56 ln.txt
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ul&gt;
      &lt;li&gt;두 파일 모두 하드 링크 수가 2&lt;/li&gt;
      &lt;li&gt;하나의 파일에 두 개의 이름이 붙여졌으므로 링크 수 증가&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;ln.txt와 ln.hd 파일이 동일한 파일임을 확인 (파일 내용으로 확인)&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cat ln.txt
  This is the first ln test.
  $ cat ln.hd
  This is the first ln test.
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;4-하드-링크와-파일-복사의-차이&quot;&gt;4. 하드 링크와 파일 복사의 차이&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;파일을 복사해도 내용은 같지만 다른 파일임&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;같은 파일인지 알 수 있는 방법은 inode를 확인하는 것&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;하드 링크의 경우 inode 값이 같음&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;ls –i 옵션으로 inode 확인 가능&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ ls –i ln*
  133938 ln.hd 133938 ln.txt
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;파일을 복사한 경우 inode 값이 다름&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;파일 복사한 경우의 하드 링크 수와 inode 값 확인&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cp ln.txt ln1.txt
  $ ls –l ln*
  -rw--r--r-- 1 ksshin ksshin 27 6월 12 17:07 ln1.txt
  -rw--r--r-- 2 ksshin ksshin 27 6월 12 16:56 ln.hd
  -rw--r--r-- 2 ksshin ksshin 27 6월 12 16:56 ln.txt
  $ ls –i ln*
  134032 ln1.txt 133938 ln.hd 133938 ln.txt
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;5-하드-링크-파일과-원본-파일의-변경&quot;&gt;5. 하드 링크 파일과 원본 파일의 변경&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;ln.hd 파일의 내용을 변경하면 ln.txt의 내용도 같이 변경됨&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ ls –i ln.* &amp;gt;&amp;gt; ln.hd
  $ cat ln.txt
  This is the first ln test.
  133938 ln.hd
  133938 ln.txt
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;ln.txt 파일을 삭제한 후 ln.hd 파일의 변화&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ rm ln.txt
  $ ls –l ln.*
  -rw--r--r-- 1 ksshin ksshin 27 6월 12 16:56 ln.hd
  $ cat ln.hd
  This is the first ln test.
  133938 ln.hd
  133938 ln.txt
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ul&gt;
      &lt;li&gt;하드 링크 수가 1로 바뀌고 내용은 변화 없음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;6-심볼릭-링크&quot;&gt;6. 심볼릭 링크&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;윈도우의 바로가기 아이콘과 같음&lt;/li&gt;
  &lt;li&gt;원본 파일에 쉽게 접근하기 위해 생성한 특수 파일&lt;/li&gt;
  &lt;li&gt;파일의 내용은 원본 파일의 경로&lt;/li&gt;
  &lt;li&gt;링크 파일을 복사하거나 내용을 출력하면 모든 작업이 원본 파일에 대해 수행됨&lt;/li&gt;
  &lt;li&gt;원본 파일이 삭제되면 심볼릭 링크 파일이 남아있어도 그 파일을 사용할 수 없음&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;7-심볼릭-링크-파일&quot;&gt;7. 심볼릭 링크 파일&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;ln 명령에 –s 옵션을 사용하여 만듦&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;특징&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;파일 종류 : l, 심볼릭 링크로 표시됨&lt;/li&gt;
      &lt;li&gt;하드 링크 수 : 1, 이름 추가가 아님&lt;/li&gt;
      &lt;li&gt;파일 이름 : 파일 이름 뒤에 원본 파일의 이름이 표시됨 (-&amp;gt;ln.hd)&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;inode 번호 : inode 번호가 다른 별개의 파일임&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ ln –s ln.hd ln.sl
  $ ls –l ln.*
  -rw--r--r-- 1 ksshin ksshin 27 6월 12 16:56 ln.hd
  lrwxrwxrwx 1 ksshin ksshin 5 6월 12 17:25 ln.sl -&amp;gt; ln.hd
  $ ls –i ln.*
  133938 ln.hd 134106 ln.sl
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;8-하드-링크-파일과-심볼릭-링크-파일&quot;&gt;8. 하드 링크 파일과 심볼릭 링크 파일&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;공통점&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;심볼릭 링크 파일을 수정하면 원본이 수정됨&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; $ pwd &amp;gt;&amp;gt; ln.sl
 $ cat ln.hd
 This is the first ln test.
 133938 ln.hd
 133938 ln.txt
 /home/ksshin
 $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;차이점&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;원본 삭제하면 하드 링크는 새로운 이름 사용 가능, 심볼릭 링크는 사용 불가&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;하드 링크는 디렉토리 설정할 수 없지만 심볼릭 링크는 설정 가능&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ rm ln.hd
  $ cat ln.sl
  cat: ln.sl: No such file or directory
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h1 id=&quot;파일-생성-및-수정-시각-변경&quot;&gt;파일 생성 및 수정 시각 변경&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;1-touch-명령&quot;&gt;1. touch 명령&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;빈 파일을 생성하거나 파일 수정 시각을 변경&lt;/li&gt;
  &lt;li&gt;형식 : touch [-acm] [-r ref_file] [-t time] 파일&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;옵션&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;-a : 접근 시간만 변경&lt;/li&gt;
      &lt;li&gt;-c : 지정된 파일이 없는 경우 새로 생성하지 않음&lt;/li&gt;
      &lt;li&gt;-m : 수정 시간만 변경&lt;/li&gt;
      &lt;li&gt;-r ref_file : 시각을 파일에서 읽음&lt;/li&gt;
      &lt;li&gt;-t [[CC]YY]MMDDhhmm[.ss] : 시각을 직접 입력&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;사용 예 : touch test&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;2-파일-생성&quot;&gt;2. 파일 생성&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;지정한 파일이 존재하지 않으면 내용 없는 빈 파일 생성&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;touch 명령 실습을 위해 디렉토리 생성&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; $ mkdir Touch
 $ cd Touch
 $ ls test
 ls: cannot access test: No such file or directory
 $    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;touch 명령 입력&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ touch test
  $ ls –l test
  -rw-rw-r-- 1 ksshin ksshin 0 6월 8 21:18 test
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ul&gt;
      &lt;li&gt;기존에 없던 test 파일 생성, 파일 크기 0으로 내용 없이 파일 정보만 존재&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;여러 파일을 한꺼번에 생성&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    $ touch t1 t2
    $ ls
    t1 t2 test
    $     
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ul&gt;
      &lt;li&gt;생성된 파일의 종류는 일반 파일이므로 vi 에디터를 이용해 내용 편집 가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;touch 명령 이용해 빈 파일 생성하는 이유&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;테스트를 위해 내용에 상관없이 파일만 필요한 경우&lt;/p&gt;

        &lt;p&gt;i. 유닉스의 파일 명령 연습할 때&lt;br /&gt;
   ii. 쉘 특수 문자 테스트를 위해 다양한 이름의 파일 생성&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;유닉스 시스템 관리를 할 때 필요에 의해&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;3-파일-접근-및-수정-시각-변경&quot;&gt;3. 파일 접근 및 수정 시각 변경&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;인자로 지정한 파일이 존재하면 해당 파일의 접근 및 수정 시각 변경&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;4-현재-시각으로-변경하기&quot;&gt;4. 현재 시각으로 변경하기&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;touch 명령을 옵션 없이 사용&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   $ ls –l
   total 4
   -rw-rw-r-- 1 ksshin ksshin 0 6월 8 21:20 t1
   -rw-rw-r-- 1 ksshin ksshin 0 6월 8 21:20 t2
   -rw-rw-r-- 1 ksshin ksshin 0 6월 8 21:18 test
   $ touch t1
   $ ls –l t1
   -rw-rw-r-- 1 ksshin ksshin 0 6월 8 21:35 t1
   $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;5-지정한-시각으로-변경하기&quot;&gt;5. 지정한 시각으로 변경하기&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;-t 옵션 사용&lt;/li&gt;
  &lt;li&gt;시각 표시 형식
    &lt;ul&gt;
      &lt;li&gt;형식 : [[CC]YY]MMDDhhmm[ss]&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;옵션&lt;/p&gt;

        &lt;p&gt;i. CC : 연도의 첫 두 자리&lt;br /&gt;
  ii. YY : 연도의 마지막 두 자리&lt;br /&gt;
  iii. MM : 달(01~12 범위내 지정)&lt;br /&gt;
  iv. DD : 날짜(01~31 범위내 지정)&lt;br /&gt;
  v. hh : 시각(00~23 범위내 지정)&lt;br /&gt;
  vi. mm : 분(00~59 범위내 지정)&lt;br /&gt;
  vii. ss : 초(00~59 범위내 지정)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;CC를 지정하지 않으면 YY 값에 따라 CC를 자동으로 인식&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-02-29-unix-12-01.png&quot; alt=&quot;&quot; /&gt;
   &lt;br /&gt;
   &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;연도를 지정하지 않고 월, 일, 시각만 지정한 예&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ touch –t 05311830 test
  $ ls –l
  total 4
  -rw-rw-r-- 1 ksshin ksshin 0 6월 8 21:20 t1
  -rw-rw-r-- 1 ksshin ksshin 0 6월 8 21:20 t2
  -rw-rw-r-- 1 ksshin ksshin 0 5월 31 18:30 test
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;연도 네 자리를 모두 지정한 예&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   $ touch –t 200501010000 test
   $ ls –l
   total 4
   -rw-rw-r-- 1 ksshin ksshin 0 6월 8 21:20 t1
   -rw-rw-r-- 1 ksshin ksshin 0 6월 8 21:20 t2
   -rw-rw-r-- 1 ksshin ksshin 0 1월 1 2005 test
   $      
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;6-특정-파일-기준으로-변경하기&quot;&gt;6. 특정 파일 기준으로 변경하기&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;특정 파일과 접근, 수정 시각을 일치시키고 싶을 때 –r 옵션 사용&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ touch –r t1 test
  $ ls –l
  total 4
  -rw-rw-r-- 1 ksshin ksshin 0 6월 8 21:20 t1
  -rw-rw-r-- 1 ksshin ksshin 0 6월 8 21:20 t2
  -rw-rw-r-- 1 ksshin ksshin 0 6월 8 21:20 test
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;7-수정-접근-시각-선택-변경하기&quot;&gt;7. 수정, 접근 시각 선택 변경하기&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;수정 시각만 변경하고 싶으면 –m 옵션 사용&lt;/li&gt;
  &lt;li&gt;접근 시각만 변경하고 싶으면 –a 옵션 사용&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;접근 시각만 변경한 경우 ls –ul 옵션을 사용해야 결과 확인 가능&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ touch –a –t 05311830 test
  $ ls –l
  total 4
  -rw-rw-r-- 1 ksshin ksshin 0 6월 8 21:20 t1
  -rw-rw-r-- 1 ksshin ksshin 0 6월 8 21:20 t2
  -rw-rw-r-- 1 ksshin ksshin 0 6월 8 21:18 test
  $ ls –ul
  total 4
  -rw-rw-r-- 1 ksshin ksshin 0 6월 8 21:20 t1
  -rw-rw-r-- 1 ksshin ksshin 0 6월 8 21:20 t2
  -rw-rw-r-- 1 ksshin ksshin 0 5월 31 18:30 test
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sat, 29 Feb 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/devlog/2020/02/29/unix-12/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/devlog/2020/02/29/unix-12/</guid>
        
        <category>unix</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[유닉스] 복사, 삭제, 이동</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-02-29-unix-11.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;파일-복사&quot;&gt;파일 복사&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;1-cp-명령&quot;&gt;1. cp 명령&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;파일이나 디렉토리를 복사&lt;/li&gt;
  &lt;li&gt;형식 : cp [옵션] 파일명1/디렉토리명1 파일명2/디렉토리명2&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;옵션&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;-i : 파일명2가 존재할 경우 덮어쓸 것인지 물어봄&lt;/li&gt;
      &lt;li&gt;-r :디렉토리를 복사할 때 지정&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;사용 예 :&lt;br /&gt; 
   p file1 file2&lt;br /&gt;
   cp f1 f2 f3 dir1&lt;br /&gt;
   cp –r dir1 dir2&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;2-파일을-파일로-복사&quot;&gt;2. 파일을 파일로 복사&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;첫 번째 인자와 두 번째 인자 모두 파일명 사용&lt;/li&gt;
  &lt;li&gt;두 번째 인자의 파일명이 존재하지 않으면 새로 생성됨&lt;/li&gt;
  &lt;li&gt;이미 존재하면 원래의 파일에 덮어 씌워짐&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;/etc 디렉토리에 있는 파일을 현재 디렉토리의 etc_hosts라는 파일로 복사&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cp /etc/hosts etc_hosts
  $ ls
  etc_hosts
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;현재 디렉토리에서 파일 복사&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   $ cp etc_hosts tmp_hosts
   $ ls
   etc_hosts tmp_hosts
   $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;3-파일을-디렉토리로-복사&quot;&gt;3. 파일을 디렉토리로 복사&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;첫 번째 인자는 파일명, 두 번째 인자는 디렉토리명 사용&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;파일을 현재 디렉토리에 복사&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cp /etc/hosts .
  $ ls
  etc_hosts hosts tmp_hosts
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;현재 디렉토리가 아닌 다른 디렉토리로 복사&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ mkdir temp
  $ cp hosts temp
  $ ls temp
  hosts
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;파일명을 바꿔서 복사&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cp hosts temp/hosts1
  $ ls temp
  hosts hosts1
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;4-여러-개의-파일을-디렉토리에-복사&quot;&gt;4. 여러 개의 파일을 디렉토리에 복사&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;첫 번째 인자의 자리에 파일명 여러 개 사용&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;마지막 인자는 반드시 디렉토리명이어야 함&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cp etc_hosts tmp_hosts temp
  $ ls temp
  etc_hosts hosts hosts1 tmp_hosts
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;5--i-옵션-사용&quot;&gt;5. -i 옵션 사용&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;두 번째 인자에 지정한 파일명이 이미 존재하면 겹쳐서 복사할 것인지 물어봄&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;“y”나 “n”으로 대답&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cp –i tmp_hosts hosts
  cp: overwrite hosts? n
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;6-디렉토리를-복사&quot;&gt;6. 디렉토리를 복사&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;-r 옵션 사용하지 않을 경우 오류 발생&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cp temp tmp
  cp: omitting directory ‘temp’
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ul&gt;
      &lt;li&gt;유닉스 버전에 따라 오류 메시지는 다르게 출력됨&lt;/li&gt;
      &lt;li&gt;“cp: temp: is a directory“라는 오류 메시지가 출력되기도 함&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;-r 옵션 사용하여 복사할 경우 디렉토리 내에 있던 파일이나 하위 디렉토리 모두 복사&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cp –r temp tmp
  $ ls –F
  etc_hosts hosts temp/ tmp/ tmp_hosts
  $ ls tmp
  hosts hosts1
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;두 번째 인자인 tmp 디렉토리가 원래 없었으므로 원본 디렉토리와 같은 위치에 새로 생성됨&lt;/li&gt;
  &lt;li&gt;두 번째 인자가 기존에 있던 디렉토리 이름이면 원본 디렉토리는 두 번째 인자로 지정한 디렉토리 아래에 같은 이름으로 복사됨&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h1 id=&quot;파일-삭제&quot;&gt;파일 삭제&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;1-rm-명령&quot;&gt;1. rm 명령&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;파일을 삭제&lt;/li&gt;
  &lt;li&gt;형식 : rm [옵션] 파일명/디렉토리명&lt;/li&gt;
  &lt;li&gt;옵션
    &lt;ul&gt;
      &lt;li&gt;-i : 지정한 파일을 정말 삭제할 것인지 확인&lt;/li&gt;
      &lt;li&gt;-r : 디렉토리를 삭제할 때 지정&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;사용 예 : &lt;br /&gt;
   rm file&lt;br /&gt;
   rm –r dir&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;2-기본-삭제&quot;&gt;2. 기본 삭제&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;인자를 파일로 지정하면 해당파일 삭제&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;유닉스에는 ‘휴지통’ 기능이 없어, 삭제된 파일은 복구할 수 없음&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ rm hosts
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;3--i-옵션을-사용한-파일-삭제&quot;&gt;3. -i 옵션을 사용한 파일 삭제&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;지정한 파일을 정말 삭제할 것인지 물어봄&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;y를 입력하면 삭제되고, n을 입력하면 삭제되지 않음&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ rm –i hosts1
  rm: remove regular file hosts1? y
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;4-디렉토리-삭제&quot;&gt;4. 디렉토리 삭제&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;-r 옵션을 사용하면 디렉토리가 비어 있는지 여부와 상관없이 디렉토리 및 그 아래 모든 파일 삭제&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;-r 옵션 없이 삭제&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ rm tmp
  rm: cannot remove ‘tmp’: Is a directory
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;rmdir 명령으로 삭제&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ rmdir tmp
  rmdir: failed to remove ‘tmp’: Directory not empty
  $ ls tmp
  hosts hosts1 text
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;-r 옵션으로 삭제&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ rm –r tmp
  $ ls –F
  etc_hosts hosts temp/ tmp_hosts
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;-ri 옵션으로 삭제&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   $ rm –ri temp
   rm: descend into directory temp? y
   rm: descend into directory temp/tmp? y
   rm: remove regular file temp/tmp/text1? y
   rm: remove directory temp/tmp? y
   rm: remove regular file temp/hosts1? y
   rm: remove regular file temp/text? y
   rm: remove regular file temp/hosts? y
   rm: remove directory temp? n
   $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h1 id=&quot;파일-이동&quot;&gt;파일 이동&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;1-mvmove-명령&quot;&gt;1. mv(move) 명령&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;파일의 이름을 바꾸거나 다른 디렉토리로 이동&lt;/li&gt;
  &lt;li&gt;형식 : mv [옵션] 파일명1/디렉토리명1 파일명2/디렉토리명2&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;옵션&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;-i : 파일명2/디렉토리명2가 존재하면 덮어쓸 것인지 물어봄&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;사용 예 : &lt;br /&gt;
   mv file1 file2&lt;br /&gt;
   mv file1 dir1&lt;br /&gt;
   mv file1 file2 file3 dir1&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;2-파일을-파일로-이동&quot;&gt;2. 파일을 파일로 이동&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;첫 번째 인자와 두 번째 인자를 모두 파일명으로 지정&lt;/li&gt;
  &lt;li&gt;결과적으로는 이름 변경&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;두 번째 인자로 지정한 파일이 존재하면 내용 덮어씀&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ mv hosts text
  $ ls –F
  etc_hosts temp/ text tmp_hosts
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;3-파일을-디렉토리로-이동&quot;&gt;3. 파일을 디렉토리로 이동&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;두 번째 인자로 디렉토리 지정&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ mv text temp
  $ ls –F
  etc_hosts temp/ tmp_hosts
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;두 번째 인자로 디렉토리명과 파일명을 모두 지정하면 지정한 디렉토리로 파일명 바꿔서 이동&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ mv tmp_hosts temp/hosts
  $ ls –F
  etc_hosts temp/
  $ ls temp
  hosts text
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;4-여러-개의-파일을-디렉토리로-이동&quot;&gt;4. 여러 개의 파일을 디렉토리로 이동&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;첫 번째 인자의 자리에 파일명 여러 개 지정하면 두 번째 인자를 반드시 디렉토리로 해야 함&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;마지막 지정한 디렉토리로 파일이 모두 이동&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   $ mv temp/hosts temp/text .
   $ ls –F
   etc_hosts hosts temp/ text
   $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;5--i-옵션을-사용한-이동&quot;&gt;5. -i 옵션을 사용한 이동&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;두 번째 인자에 지정한 파일명이 기존에 있는 파일일 경우 덮어쓸 것인지 물어봄&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   $ mv –i etc_hosts hosts
   mv: overwrite ‘hosts’? n
   $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;6-디렉토리를-디렉토리로-이동&quot;&gt;6. 디렉토리를 디렉토리로 이동&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;두 인자 모두 디렉토리명으로 지정&lt;/li&gt;
  &lt;li&gt;첫 번째 인자인 디렉토리가 두 번째 인자 디렉토리 아래로 이동&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;두 번째 인자가 새로운 이름이면 디렉토리 이름 변경&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   $ cp –r temp tmp
   $ ls –F
   etc_hosts hosts temp/ text tmp/
   $ mv tmp temp
   $ ls -F
   etc_hosts hosts temp/ text
   $ ls –F temp
   etc_hosts hosts text tmp/
   $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sat, 29 Feb 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/devlog/2020/02/29/unix-11/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/devlog/2020/02/29/unix-11/</guid>
        
        <category>unix</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[유닉스] 파일 내용 보기</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-02-29-unix-10.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;파일-내용-보기&quot;&gt;파일 내용 보기&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;1-cat-concatenate&quot;&gt;1. cat (concatenate)&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;파일 내용을 연속적으로 화면에 출력&lt;/li&gt;
  &lt;li&gt;형식 : cat [옵션] 파일명…&lt;/li&gt;
  &lt;li&gt;옵션
    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;-n : 행번호를 붙여서 출력&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cat /etc/hosts
  127.0.0.1 localhost
  127.0.1.1 ksshin
  ......
  $ cat –n /etc/hosts
  1 127.0.0.1 localhost
  2 127.0.1.1 ksshin
  3 ......
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;2-cat의-다른-기능&quot;&gt;2. cat의 다른 기능&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;표준 입력으로부터 데이터를 입력받아 화면에 출력&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;옵션이나 파일명 없이 cat 명령만 입력&lt;/li&gt;
      &lt;li&gt;문자열 입력 후 엔터(Enter) 키를 치면 화면에 그대로 복사하여 보여줌&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Ctrl + D를 입력하여 종료&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cat
  hello
  hello
  unix
  unix
  ^D
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;표준 입력 대신 파일에 있는 데이터를 화면에 출력&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;리다이렉션 기호 “&amp;lt;” 사용&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;첫 번째 cat 기능과 같이 “&amp;lt;” 생략하고 파일명만 사용&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cat &amp;lt; file1
  unix1
  unix2
  $ cat file1
  unix1
  unix2
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;리다이렉션 기호 “&amp;gt;”를 사용하여 짧은 파일 작성&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;내용을 모두 적은 후 Ctrl + D를 입력하여 종료&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cat &amp;gt; testfile
  unix
  linux
  test
  ^D
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;리다이렉션 기호 “»” 사용하여 이미 존재하는 파일에 내용 추가&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cat &amp;gt;&amp;gt; testfile
  This is the end.
  ^D
  $ cat testfile
  unix
  linux
  test
  This is the end.
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;cat을 이용하여 파일 복사&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cat &amp;lt; testfile &amp;gt; newfile
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;3-more&quot;&gt;3. more&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;파일 내용을 화면 단위로 출력&lt;/li&gt;
  &lt;li&gt;형식 : more [옵션] 파일명…&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;옵션&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;+행 번호 : 출력을 시작할 행번호를 지정&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;화면 단위로 내용을 출력한 뒤 ‘–More–(00%)’를 보여줌&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;스페이스바(SpaceBar) : 다음 화면을 출력&lt;/li&gt;
      &lt;li&gt;엔터(Enter) : 행 단위로 스크롤&lt;/li&gt;
      &lt;li&gt;/문자열 : 해당 문자열을 검색&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;q : more 명령 종료&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ more /etc/group
  root:x:0:
  daemon:x:1:
  bin:x:2:
  sys:x:3:
  ......
  --More--(38%)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;현재 디렉토리의 파일목록이 많아서 한 화면에서 볼 수 없을 때 ls와 more를 파이프로 연결해서 사용&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ ls /etc | more
  acpi
  adduser.conf
  alternatives
  ......
  --More--
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;4-tail&quot;&gt;4. tail&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;파일의 뒷부분 몇 행을 출력&lt;/li&gt;
  &lt;li&gt;형식 : tail [옵션] 파일명&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;옵션&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;-n +행번호 : 지정한 행부터 끝까지 출력&lt;/li&gt;
      &lt;li&gt;-숫자 : 화면에 출력할 행의 수를 지정 (기본값은 10)&lt;/li&gt;
      &lt;li&gt;-f : 파일 출력이 종료되지 않고, 주기적으로 계속 출력&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;“-숫자” 옵션을 이용한 출력&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;파일 뒷부분 5행 출력&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ tail –5 etc_files
  X11
  xdg
  xml
  xul-ext
  zsh_command_not_found
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;“-n +행번호“ 옵션을 이용한 출력&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;210번 라인부터 끝까지 출력&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ tail –n +210 etc_files
  systemd
  terminfo
  ......
  X11
  xdg
  xml
  xul-ext
  zsh_command_not_found
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;-f 옵션을 이용한 출력&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;파일 출력이 종료되지 않고 대기 상태가 됨&lt;/li&gt;
      &lt;li&gt;파일 내용 주기적으로 반복 출력&lt;/li&gt;
      &lt;li&gt;파일 뒷부분에 내용 추가되면 자동 출력하므로 파일의 내용 변화를 확인할 때 사용하면 편리&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;무한 반복되므로 ^C(Ctrl + C)키로 명령 종료&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ tail –f etc_files
  vim
  vtrgb
  wgetrc
  wodim.conf
  wpa_supplicant
  X11
  xdg
  xml
  xul-ext
  zsh_command_not_found
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;5-head&quot;&gt;5. head&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;파일의 앞부분 몇 행을 출력&lt;/li&gt;
  &lt;li&gt;형식 : head [옵션] 파일명&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;옵션 :&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;-숫자 : 화면에 출력할 행의 수를 지정 (기본값은 10)&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ ls /etc &amp;gt; etc_files
  $ head etc_files
  acpi
  adduser.conf
  anacrontab
  apg.conf
  apm
  apparmor
  apparmor.d
  apport
  apt
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;6-wc-word-count&quot;&gt;6. wc (word count)&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;파일에 저장된 라인, 단어, 문자의 개수를 세어서 출력&lt;/li&gt;
  &lt;li&gt;형식 : wc [옵션] 파일명&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;옵션&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;-c : 바이트 수 출력&lt;/li&gt;
      &lt;li&gt;-m : 문자 수&lt;/li&gt;
      &lt;li&gt;-l : 라인 수 출력&lt;/li&gt;
      &lt;li&gt;-w : 단어 수 출력&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;-c : 문자(바이트) 수 출력&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ wc etc_files
  226 226 2171 etc_files
  $        
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;파일이 영어로만 되어 있으면, 바이트 수와 문자 수가 같고, 한글이 포함되어 있으면 바이트 수와 문자 수가 다름&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;파일-내용-보기-1&quot;&gt;파일 내용 보기&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;1-cmp-명령&quot;&gt;1. cmp 명령&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;두 파일의 내용 비교 후 결과 출력&lt;/li&gt;
  &lt;li&gt;diff 명령의 간단한 버전&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;두 파일의 내용이 다른 부분에 대해 첫 번째 위치와 행번호를 보여줌&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;첫 번째 라인 6번째 바이트부터 다르다는 의미&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cat &amp;gt; compare1
  This is a test file.
  ^D
  $ cat &amp;gt; compare2
  This si a test file.
  ^D
  $ cmp compare1 compare2
  compare1 compare2 differ: byte 6, line 1
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;2-comm-명령&quot;&gt;2. comm 명령&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;행별로 정렬된 파일 비교&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;대상 파일이 미리 정렬되어 있어야 함&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cat &amp;gt; file1
  line 1
  line 2
  line 3
  ^D
  $ cat &amp;gt; file2
  line 1
  line 3
  line 4
  ^D
  $ comm file1 file2
  line 1
  line 2
  line 3
  line 4
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ul&gt;
      &lt;li&gt;첫 번째 파일에만 있는 행들이 첫 번째 열(column)에 표시됨&lt;/li&gt;
      &lt;li&gt;두 번째 파일에만 있는 행들이 두 번째 열에 표시됨&lt;/li&gt;
      &lt;li&gt;두 파일에 모두 있는 행들이 세 번째 열에 표시됨&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;13-diff-명령&quot;&gt;13. diff 명령&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;매우 강력하고 유연한 파일 비교 유틸리티&lt;/li&gt;
  &lt;li&gt;대상 파일들을 줄 단위로 차례차례 비교&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;예제 파일 만들기&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cat file1
  line 1
  line 2
  line 4
  $ cat file2
  line 1
  line 2
  line 3
  line 5
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;diff 명령&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ diff file1 file2
  3c3,4
  &amp;lt; line 4
  ------
  &amp;gt; line 3
  &amp;gt; line 5
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ul&gt;
      &lt;li&gt;file1의 3 라인을 file2의 3, 4 라인으로 대체하면 두 파일은 같다는 의미&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;diff 명령 결과의 의미&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;n1 a n3, n4 : 첫 번째 파일의 n1 라인 이후에 두 번째 파일의 n3부터 n4까지의 라인들을 추가하면 두 파일은 서로 같다.&lt;/li&gt;
      &lt;li&gt;n1, n2 d n3 : 첫 번째 파일의 n1부터 n2까지의 라인을 삭제하면 두 번째 파일의 n3 이후와 서로 같다.&lt;/li&gt;
      &lt;li&gt;n1, n2 c n3, n4 : 첫 번째 파일의 n1부터 n2까지의 라인을 두 번째 파일의 n3부터 n4까지의 라인으로 대체하면 두 파일은 서로 같다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 29 Feb 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/devlog/2020/02/29/unix-10/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/devlog/2020/02/29/unix-10/</guid>
        
        <category>unix</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[Database] 순수관계연산자 (1/3)</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-28-database-12.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;순수-관계-연산자-개요&quot;&gt;순수 관계 연산자 개요&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- 릴레이션의 구조와 특성을 이용하는 연산자
- 관계 데이터 모델에서 새로 제시된 연산자
- 릴레이션에 저장되어 있는 데이터를 다양하게 처리하는데 사용
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;순수 관계 연산자의 종류와 의미&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-28-database-12-01.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;순수-관계-연산자의-종류-및-기능&quot;&gt;순수 관계 연산자의 종류 및 기능&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;셀렉트 (Select) 연산자&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;결과 릴레이션 : 릴레이션에서 조건을 만족하는 투플만 선택&lt;/li&gt;
      &lt;li&gt;하나의 릴레이션을 대상으로 연산을 수행하는 단항연산자&lt;/li&gt;
      &lt;li&gt;연산자&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-28-database-12-02.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;수학적 표현법&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-28-database-12-03.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;데이터 언어적 표현법&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-28-database-12-04.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;조건식&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;비교식, 프레디킷 (Predicate)이라고도 함&lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;속성과 상수의 비교나 속성들 간의 비교로 표현&lt;/p&gt;

            &lt;ul&gt;
              &lt;li&gt;속성과 상수의 비교 – 상수의 데이터 타입이 속성의 도메인과 일치해야 함&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-28-database-12-05.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;비교 연산자 ( &amp;gt;, ≥, &amp;lt;, ≤, =, ≠ )와 논리 연산자( ∧, ∨, ¬ )를 이용해 작성&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;논리 연산자 ∧ : AND – 여러 개의 조건을 모두 만족해야함&lt;/li&gt;
          &lt;li&gt;논리 연산자 ∨ : OR – 여러 개의 조건 중 하나만 만족하면 됨&lt;/li&gt;
          &lt;li&gt;논리 연산자 ¬ : NOT – 조건을 만족하지 않은 경우&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;교환적 특징&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-28-database-12-06.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;질의 1 : 등급이 Gold인 고객을 검색하시오&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-28-database-12-07.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-28-database-12-08.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;질의 2 : 고객의 등급이 Gold이고, 적립금이 10000원 이상인 고객을 검색하시오&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-28-database-12-09.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;질의 3 : 고객의 등급이 Gold이거나, 적립금이 10000원 이상인 고객을 모두 검색하시오&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-28-database-12-10.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;프로젝트 (Project) 연산자&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;릴레이션에서 선택한 속성의 값으로 결과 릴레이션을 구성&lt;/li&gt;
      &lt;li&gt;하나의 릴레이션을 대상으로 연산을 수행&lt;/li&gt;
      &lt;li&gt;결과 릴레이션은 해당 릴레이션의 일부 열로만 구성됨 (수직적 부분 집합)&lt;/li&gt;
      &lt;li&gt;연산자&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-28-database-12-11.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;수학적 표현법&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-28-database-12-12.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;데이터 언어적 표현법&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-28-database-12-13.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;질의 1 – 고객의 이름을 검색하시오&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-28-database-12-14.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;질의 2 – 고객별로 적립금의 액수를 파악하시오&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-28-database-12-15.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-28-database-12-16.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;질의 3 – 현재 고객에게 부여된 등급의 종류를 파악하시오&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;주의 사항 : 결과 릴레이션도 릴레이션의 기본 특성을 유지하여야 함&lt;/li&gt;
        &lt;/ul&gt;

        &lt;p&gt;( 릴레이션에는 중복되는 투플이 존재할 수 없다 )&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-28-database-12-17.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;디비전 (Division) 연산자&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;릴레이션의 속성 값이 집합으로 연산을 수행&lt;/li&gt;
      &lt;li&gt;표현법&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-28-database-12-18.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;릴레이션S의 모든 투플과 관련이 있는 릴레이션R의 투플로 결과 릴레이션을 구성&lt;/p&gt;

        &lt;p&gt;. 단, 릴레이션R이 릴레이션S의 모든 속성을 포함하고 있어야 연산이 가능함&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;디비전의 예 - 1&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-28-database-12-19.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;디비전의 예 - 2&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-28-database-12-20.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;디비전의 예 - 3&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-28-database-12-21.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;질의 : Gold 등급의 고객에 대한 정보를 추출하시오.&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-28-database-12-22.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Fri, 28 Feb 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/devlog/2020/02/28/database-12/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/devlog/2020/02/28/database-12/</guid>
        
        <category>database</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[Database] 관계 대수</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-28-database-11.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;관계데이터연산의-개념&quot;&gt;관계데이터연산의 개념&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;데이터 모델 = 데이터 구조 + 연산 + 제약조건&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;데이터 구조 : 3주차 – 관계 데이터 모델&lt;/li&gt;
      &lt;li&gt;제약 조건 : 4주차 1차시 – 관계 데이터 모델의 제약 조건&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;관계 데이터 연산 (Relational Data Operation)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;원하는 데이터를 얻기 위해 릴레이션에 필요한 처리를 요구하는 것&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;질의 (Query) - 데이터에 대한 처리 요구&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;데이터베이스 구성 요소중 데이터 언어의 역할을 함&lt;/li&gt;
      &lt;li&gt;관계 데이터 모델의 연산의 약칭&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;연산 종류&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;관계 대수 : 데이터의 처리 과정을 순서대로 기술&lt;/li&gt;
          &lt;li&gt;관계 해석 : 처리하고자하는 데이터가 무엇인지만 기술&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;관계대수와 관계해석의 특징&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;차이점&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;데이터를 얻기 위한 처리 절차를 자세히 기술하는 정도&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;데이터를 처리하는 기능과 처리를 요구하는 표현&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;관계대수와 관계해석은 능력이 동등&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-28-database-11-01.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;상용화된 관계 데이터베이스에서는 실제로 사용되지 않는 개념적인 언어&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;학습하는 이유&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;새로운 데이터 언어에 대하여 유용성을 검증하는 기준&lt;/li&gt;
          &lt;li&gt;상용화된 데이터 언어를 학습하기 전에 연산의 기본이 되는 관계 데이터 언어를 이해하는 것이 중요함.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;관계-대수&quot;&gt;관계 대수&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;관계 대수의 개념&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;원하는 결과를 얻기 위해 릴레이션의 처리 과정을 순서대로 기술하는 언어&lt;/li&gt;
      &lt;li&gt;절차 언어 (Procedural Language)&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;피연산자 : 릴레이션&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;관계대수는 릴레이션을 연산한다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;관계대수식 (Relational Algebra Expression) : 연산을 수행하기 위한 식&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;단항 연산자&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-28-database-11-02.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
     - 이항 연산자&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-28-database-11-03.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;결과 : 릴레이션&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;릴레이션을 처리하는 연산자들의 모임&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;대표 연산자 8개&lt;/li&gt;
          &lt;li&gt;일반 집합 연산자(Set Operation)와 순수 관계 연산자(Relational Operation)로 분류됨&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;관계 대수 연산자의 종류&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-28-database-11-04.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;
  &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;일반-집합-연산자&quot;&gt;일반 집합 연산자&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;일반집합 연산자 (Set Operation) 개요&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;릴레이션이 투플의 집합이라는 개념을 이용하는 연산자&lt;/p&gt;

        &lt;p&gt;(A) 일반 집합 연산자의 종류와 의미&lt;/p&gt;

        &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-28-database-11-05.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;

        &lt;p&gt;(C) 일반 집합 연산자의 특성&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;2개의 피연산자가 필요함&lt;/p&gt;

            &lt;ul&gt;
              &lt;li&gt;2 개의 릴레이션을 대상으로 연산을 수행&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;두 릴레이션의 합병이 가능하여야 함 (합집합, 교집합, 차집합)&lt;/p&gt;

            &lt;ul&gt;
              &lt;li&gt;
                &lt;p&gt;합병 가능 (Union-Compatible) 조건&lt;/p&gt;

                &lt;p&gt;(a) 두 릴레이션의 차수가 같아야 함&lt;/p&gt;

                &lt;p&gt;(b) 두 릴레이션에서 서로 대응되는 속성의 도메인이 같아야 함&lt;/p&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;

        &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-28-database-11-06.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;
  &lt;br /&gt;&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;일반 집합 연산자의 종류 및 기능&lt;/p&gt;

    &lt;p&gt;(A) 합집합 (Union) 연산자&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;합병 가능한 두 릴레이션 R과 S의 합집합&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;릴레이션 R에 속하거나 릴레이션 S에 속하는 모든 투플로 결과 릴레이션 구성&lt;/li&gt;
        &lt;/ul&gt;

        &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-28-database-11-07.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

        &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-28-database-11-08.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;(B) 교집합 (Intersection) 연산자&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;합병 가능한 두 릴레이션 R과 S의 교집합&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;릴레이션 R과 릴레이션 S에 공통으로 속하는 모든 투플로 결과 릴레이션 구성&lt;/li&gt;
        &lt;/ul&gt;

        &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-28-database-11-09.png&quot; alt=&quot;&quot; /&gt;
    &lt;br /&gt;&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;예 : 고객릴레이션과 사원릴레이션의 교집합&lt;/li&gt;
        &lt;/ul&gt;

        &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-28-database-11-10.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;(C) 차집합 (Difference) 연산자&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;합병 가능한 두 릴레이션 R과 S의 차집합&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;릴레이션 R에는 존재하고 릴레이션 S에는 존재하지 않는 투플로 구성된 릴레이션 반환&lt;/li&gt;
        &lt;/ul&gt;

        &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-28-database-11-11.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;교환적, 결합적 특징이 없음&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;예 : (고객릴레이션 – 사원릴레이션) 과 (사원릴레이션 – 고객릴레이션)&lt;/p&gt;
          &lt;/li&gt;
        &lt;/ul&gt;

        &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-28-database-11-12.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;(D) 카티션 프로덕트 (Cartesian Product) 연산자&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;두 릴레이션 R과 S의 카티션 프로덕트&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;릴레이션 R에 속한 각 투플과 릴레이션 S에 속한 각 투플을 모두 연결하여 만들어진 새로운 투플 생성&lt;/li&gt;
        &lt;/ul&gt;

        &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-28-database-11-13.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

        &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-28-database-11-14.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Fri, 28 Feb 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/devlog/2020/02/28/database-11/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/devlog/2020/02/28/database-11/</guid>
        
        <category>database</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[Database] 관계 데이터 모델의 제약 조건</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-28-database-10.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;데이터-무결성&quot;&gt;데이터 무결성&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;데이터베이스의 장점
    &lt;ul&gt;
      &lt;li&gt;데이터 공유 및 용이한 접근&lt;/li&gt;
      &lt;li&gt;데이터 중복 최소화, 일관성, 무결성, 보안성 유지&lt;/li&gt;
      &lt;li&gt;데이터의 표준화 가능&lt;/li&gt;
      &lt;li&gt;데이터의 저장 공간 절약 및 집중화&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;데이터 무결성&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;데이터베이스에 저장된 데이터의 일관성과 정확성을 유지하는 것&lt;/li&gt;
      &lt;li&gt;일관성과 정확성이 없는 데이터베이스는 정보로서 부적격하다.&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;유지 방법&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;투플의 삽입, 삭제, 수정시 데이터의 제약 조건을 준수하는지 확인하여야 한다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;예 : 쇼핑몰에서 회원이 탈퇴한 경우&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;탈퇴한 회원 정보를 삭제하면, 회원이 구매한 정보에 문제가 발생&lt;/li&gt;
          &lt;li&gt;구매내역까지 삭제하면, 쇼핑몰의 총 매출에 문제가 발생&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;데이터베이스 관리시스템의 데이터 무결성 유지&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;무결성을 위반하는 데이터 저장 거절&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;무결성-제약-조건&quot;&gt;무결성 제약 조건&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;도메인 무결성 제약 조건 (Domain Integrity Constraint)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;도메인 제약(Domain Constraint)&lt;/li&gt;
      &lt;li&gt;릴레이션 내의 투플들이 각 속성의 도메인에 지정된 값만 가져야 한다는 조건&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;예 : 주문 릴레이션의 주문일자 속성&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;날짜 데이터만 사용하여야 함.&lt;/li&gt;
          &lt;li&gt;문자 등의 다른 자료형을 사용하면 안됨&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;구현 방법&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;SQL 문에서 데이터 형식(Type), 널(NULL / NOT NULL), 기본 값(Default), 체크(Check)등을 사용하여 지정 (일반 프로그래밍 언어에서 변수형 선언과 유사)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;개체 무결성 제약조건 (Entity Integrity Constraint)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;기본키 제약 (Primary Key Constraint)라고도 함.&lt;/li&gt;
      &lt;li&gt;기본키의 무결성을 위한 제약 조건&lt;/li&gt;
      &lt;li&gt;기본키의 특징을 유지하기 위한 조건
        &lt;ul&gt;
          &lt;li&gt;NULL 값을 가져서는 안된다.&lt;/li&gt;
          &lt;li&gt;릴레이션 내에 오직 하나의 값만 존재하여야 한다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;관계 데이터 모델의 핵심 개념&lt;/li&gt;
      &lt;li&gt;투플 삽입시 개체 무결성 제약 조건 수행&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-28-database-10-01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-28-database-10-02.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;투플 수정시 개체 무결성 제약 조건 수행&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;삽입 연산과 동일하게 제약에 따라 처리된다.&lt;/li&gt;
          &lt;li&gt;동일한 값으로 수정시 제약을 검색한 후 위배되면 수정이 거부된다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;투플 삭제시 개체 무결성 제약 조건 수행&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;특별한 확인이 필요하지 않으며 즉시 수행된다.&lt;/li&gt;
          &lt;li&gt;단, 참조 무결성 제약 조건에 의하여 다른 릴레이션에서 기본키를 참조하고 있으면, 바로 삭제하지 않는다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;참조 무결성 제약조건 (Referential Integrity Constraint)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;외래키 제약 (Foreign Key Constraint) 라고도 함.&lt;/li&gt;
      &lt;li&gt;릴레이션 간의 참조 관계를 선언하는 제약조건&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;부모(Parent) 릴레이션과 자식(Child) 릴레이션 관계&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;부모 릴레이션 : 참조를 제공하는 릴레이션 (기본키)&lt;/li&gt;
          &lt;li&gt;자식 릴레이션 : 참조를 제공받는 릴레이션 (외래키)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;자식 릴레이션의 값은 부모 릴레이션의 제약을 받는다.&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;자식 릴레이션의 값이 부모 릴레이션의 도메인과 다른 값으로 삽입, 수정될 경우 거부&lt;/li&gt;
          &lt;li&gt;자식 릴레이션에서 참조하고 있는 값을 부모 릴레이션에서 삭제하거나 다른 값으로 변경할 경우 거부&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;투플 삽입시 참조 무결성 제약 조건 수행&lt;/p&gt;

        &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-28-database-10-03.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;
  &lt;br /&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;투플 삭제시 참조 무결성 제약 조건 수행&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;자식 릴레이션에서 투플이 삭제되는 경우 : 부모 릴레이션에는 영향이 없으므로 바로 삭제&lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;부모 릴레이션에서 투플이 삭제되는 경우 : 문제 발생되며 조치 방법&lt;/p&gt;

            &lt;p&gt;(가) 즉시 작업 중지
  (나) 자식 릴레이션의 관련 투플을 삭제
  (다) 자식 릴레이션의 관련 투플을 설정된 다른 값으로 변경
  (라) 자식 릴레이션의 관련 투플을 NULL 값으로 설정&lt;/p&gt;
          &lt;/li&gt;
        &lt;/ul&gt;

        &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-28-database-10-04.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;
  &lt;br /&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;투플 수정시 참조 무결성 제약 조건 수행&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;부모 릴레이션의 투플이 수정되는 경우&lt;/p&gt;

            &lt;p&gt;(가) 삭제 옵션에 따라 처리
  (나) 문제가 없으면 삽입 제약 조건에 따라 처리&lt;/p&gt;
          &lt;/li&gt;
        &lt;/ul&gt;

        &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-28-database-10-05.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;
  &lt;br /&gt;&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;기타 제약 조건&lt;/p&gt;

    &lt;p&gt;(1) 고유성 제약조건 (Unique Constraint)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;키 제약(Key Constraint)라고도 함.&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;키 속성을 유지하기 위한 제약&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;키의 모든 값은 달라야 한다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;단, NULL 값을 허용한다.&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;키는 NULL 값을 허용하지 않는다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Fri, 28 Feb 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/devlog/2020/02/28/database-10/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/devlog/2020/02/28/database-10/</guid>
        
        <category>database</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[자바스크립트] Null check, 빈 값 체크, 공백 체크</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/javascript/2020-02-27-tip-javascript-04.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;자바스크립트로-null-check-빈-값-체크-공백-체크&quot;&gt;자바스크립트로 Null check, 빈 값 체크, 공백 체크&lt;/h1&gt;
&lt;h3 id=&quot;how-do-i-check-for-null-values-in-javascript&quot;&gt;How do I check for null values in JavaScript?&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;데이터타입&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  var value = 1; //  Number 형 1
  console.log(value, typeof value); // 1 number
     
  value = &quot;1&quot; // String 형 1
  console.log(value, typeof value); // 1 string
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;권장하지 않는 방법&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  var value2 = &quot;&quot;
  if( value2 == &quot;&quot;){
    console.log(&quot;비어 있음&quot;);
  }else{
    console.log(&quot;값이 있음&quot;);
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;권장하는 방법&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; var value2 = &quot;&quot;
 if( !value2 ){
   console.log(&quot;비어 있음&quot;);
 }else{
   console.log(&quot;값이 있음&quot;);
 }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ul&gt;
      &lt;li&gt;2 번 처럼 사용하지 말고 3번 처럼  not 연산을 권장함.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;어떤 값이 자료형에 상관없이 빈 값인지 알고 싶을 때&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; // 넘어온 값이 빈값인지 체크합니다. 
 // !value 하면 생기는 논리적 오류를 제거하기 위해  
 // [], {} 도 빈값으로 처리
     
 var isEmpty = function(value){ 
 if( value == &quot;&quot; || value == null || value == undefined || ( value != null &amp;amp;&amp;amp; typeof value == &quot;object&quot; &amp;amp;&amp;amp; !Object.keys(value).length ) ){ 
     return true 
 } else { 
     return false 
 }};
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Thu, 27 Feb 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/tip/2020/02/27/tip-javascript-04/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/tip/2020/02/27/tip-javascript-04/</guid>
        
        <category>javascript</category>
        
        
        <category>tip</category>
        
      </item>
    
      <item>
        <title>[자바스크립트] 왼쪽 숫자 0, 첫자리 0 제거하기(정규식)</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/javascript/2020-02-27-tip-javascript-03.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;왼쪽-숫자-0-첫자리-0-제거하기정규식&quot;&gt;왼쪽 숫자 0, 첫자리 0 제거하기(정규식)&lt;/h1&gt;
&lt;h3 id=&quot;how-to-remove-leading-zeros-from-a-number-in-javascript&quot;&gt;How to remove leading zeros from a number in JavaScript?&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;자바스크립트&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   let number = &quot;0909123&quot;;
   let formatNum = number.replace(/(^0+)/, &quot;&quot;);
    // 909123로 치환됨
   console.log(formatNum);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;자바&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; String testNum = &quot;0909123&quot;;
 String checkNum = testNum.replaceAll(&quot;^0+&quot;, &quot;&quot;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Thu, 27 Feb 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/tip/2020/02/27/tip-javascript-03/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/tip/2020/02/27/tip-javascript-03/</guid>
        
        <category>javascript</category>
        
        
        <category>tip</category>
        
      </item>
    
      <item>
        <title>[유닉스] 디렉토리 이름 변경 및 검색</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-02-26-unix-09.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;디렉토리-이동과-이름-변경&quot;&gt;디렉토리 이동과 이름 변경&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;h4 id=&quot;1-mv&quot;&gt;1. mv&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;디렉토리를 옮기거나 이름을 변경&lt;/li&gt;
  &lt;li&gt;형식 : mv [directory] [target directory]&lt;/li&gt;
  &lt;li&gt;[directory]는 옮기거나 이름을 바꿀 디렉토리, [target directory]는 목적하고자 하는 디렉토리의 이름&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;h4 id=&quot;2-디렉토리-이름-변경&quot;&gt;2. 디렉토리 이름 변경&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;source 디렉토리를 source_file로 이름 변경&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   $ mv source source_file
   $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;h4 id=&quot;3-디렉토리-이동&quot;&gt;3. 디렉토리 이동&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;[target directory]가 존재하지 않을 때&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;디렉토리를 옮기는 기능과 이름을 바꾸는 두 가지 기능&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   $ ls
   document source_file
   $ mv source_file source
   $ ls
   document source
   $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ul&gt;
      &lt;li&gt;현재 작업 디렉토리에 source 디렉토리가 없었으므로, mv 명령에 의해 source_file이 source로 디렉토리 이름이 바뀜&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;[target_directory]가 존재할 때
    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;[directory] 자체를 [target_directory]로 옮기는 기능&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ pwd
  /home/ksshin/Unix
  $ ls
  document source
  $ mkdir backup
  backup document source
  $ mv document backup
  $ ls
  backup source
  $ ls backup
  document
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;backup이라는 디렉토리 생성 후 mv 명령어를 사용&lt;/li&gt;
      &lt;li&gt;document 디렉토리가 backup 디렉토리의 하위 디렉토리로 이동한 것&lt;/li&gt;
      &lt;li&gt;즉, document 디렉토리는 “~/Unix/document”라는 경로에서 “~/Unix/backup/document”로 이동된 것&lt;/li&gt;
      &lt;li&gt;만약 document 디렉토리 내에 doc1, doc2라는 두 개의 서브디렉토리를 가지고 있다면, 서브디렉토리까지 모두 옮겨지게 됨&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h1 id=&quot;파일과-디렉토리-검색&quot;&gt;파일과 디렉토리 검색&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;h4 id=&quot;1-find-명령&quot;&gt;1. find 명령&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;디렉토리에서 원하는 파일을 찾아줌&lt;/li&gt;
  &lt;li&gt;형식 : find [path] [expression]&lt;/li&gt;
  &lt;li&gt;[path]는 검색을 시작할 위치를 지정하는 경로&lt;/li&gt;
  &lt;li&gt;[expression]은 검색 조건과 동작&lt;/li&gt;
  &lt;li&gt;[path]에 지정된 디렉토리에서 시작하여 서브디렉토리까지 검색&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-02-26-unix-09-01.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;h4 id=&quot;2-파일-검색&quot;&gt;2. 파일 검색&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;파일 검색 결과를 화면에 출력하므로 –print 옵션은 생략해도 됨&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ find . -name mynote.txt
./temp/mynote.txt
$
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;h4 id=&quot;3-와일드카드-사용&quot;&gt;3. 와일드카드 사용&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;와일드카드 사용시 작은따옴표로 묶어 주어야 파일명으로 인식&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;현재 디렉토리 내에서 원하는 my로 시작되는 모든 파일을 찾는 명령&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ find . -name ‘my*.*’ -print
  ./temp/mynote.txt
  ./temp/work/prog/myprog.txt
  ./ksshin/Unix/ch2/source/mysource.c
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;h4 id=&quot;4-파일-크기로-검색&quot;&gt;4. 파일 크기로 검색&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;-size 옵션 사용&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;현재 디렉토리 내에서 my로 시작하는 파일 중 2000바이트 이하인 것을 찾는 명령&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ find . -name ‘my*.*’ -print -size -2000c
  ./temp/mynote.txt
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ul&gt;
      &lt;li&gt;-2000c에서 –2000은 2000보다 적은 수&lt;/li&gt;
      &lt;li&gt;“c“는 바이트(byte) 단위로 계산하라는 의미&lt;/li&gt;
      &lt;li&gt;킬로바이트(KB) 단위는 “k”, “-2000c“는 “–2k“와 같은 의미&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;h4 id=&quot;5-비어있는-파일-검색&quot;&gt;5. 비어있는 파일 검색&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;-empty 옵션 사용&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;현재 디렉토리에서 ‘.txt’로 끝나는 비어 있는 파일 검색&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ find . -type f -name ‘*.txt’ -empty
  ./temp/mynote.txt
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;h4 id=&quot;6-찾아낸-파일을-자동으로-삭제&quot;&gt;6. 찾아낸 파일을 자동으로 삭제&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;-exec 옵션 사용&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;비어 있는 파일을 찾아내고 자동 삭제&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ ls temp
  mynote.txt work
  $ find . -type f -name ‘*.txt’ -empty -exec rm -f {} \;
  $ ls temp
  work
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;-exec와 \; 사이에 기술된 부분이 검색된 파일에 적용될 명령&lt;/li&gt;
  &lt;li&gt;삭제하기 전에 파일을 하나씩 확인하고 싶으면 –exec 대신 –ok를 사용&lt;/li&gt;
  &lt;li&gt;이후 물어볼 때 y 입력하면 파일이 삭제됨&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;h4 id=&quot;7-find-결과를-파일로-저장&quot;&gt;7. find 결과를 파일로 저장&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;서브디렉토리가 많을 경우 find 명령은 실행 시간이 오래 걸림&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;find 명령의 실행 결과를 화면에 출력하지 않고 파일로 저장하면 편리&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ find . -name mynote.txt &amp;gt; find_result
$
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;결과 파일 확인&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cat find_result
./temp/mynote.txt
$
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;와일드카드를 사용하여 특정 문자를 포함한 파일 여러 개를 검색할 경우 실행 결과가 보이지 않고 커서만 깜박임.&lt;/li&gt;
  &lt;li&gt;오래 기다리면 프롬프트가 뜨고 명령의 실행이 끝났음을 알려줌&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;h4 id=&quot;8-출력-재지정-리다이렉션-output-redirection&quot;&gt;8. 출력 재지정 (리다이렉션, output redirection)&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;출력의 방향을 바꾸는 것&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;형식 : 명령 1&amp;gt; 파일명, 명령 &amp;gt; 파일명, 명령 » 파일명&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;1은 표준 출력을 나타내는 파일 디스크립터이며 생략할 수 있음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;명령의 결과를 화면에 보여주는 대신 파일로 저장할 때 사용&lt;/li&gt;
  &lt;li&gt;파일이 존재하지 않을 경우 새로 생성&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;파일이 존재할 경우&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;기존 파일의 내용을 없앨 때는 &amp;gt; 기호 사용&lt;/li&gt;
      &lt;li&gt;기존 파일 뒤에 내용을 추가할 때는 » 기호 사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;h4 id=&quot;9-출력-재지정-사용-예&quot;&gt;9. 출력 재지정 사용 예&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;일반 명령의 결과를 파일에 저장&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ date &amp;gt; test
  $ cat test
  2015. 06. 01. (월) 10:11:56 KST
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;편집기를 사용하지 않고 명령어 라인에서 간단한 텍스트 파일 만들기&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cat &amp;gt; list1.txt
  Hi !
  This is the first list.
  ^D
    
    
    
  $ cat &amp;gt; list2.txt
  Hi !
  This is the second list.
  ^D
    
    
  $ cat list1.txt list2.txt &amp;gt; list3.txt
  $ cat list3.txt
  Hi !
  This is the first list.
  Hi !
  This is the second list.
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;파일이 존재할 때 출력 추가&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; $ cat &amp;gt;&amp;gt; list1.txt
 Bye !
 This is the end of the first list.
 ^D
   
   
 $ cat list1.txt
 Hi !
 This is the first list.
 Bye !
 This is the end of the first list.
 $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;h4 id=&quot;10-오류-재지정-error-redirection&quot;&gt;10. 오류 재지정 (error redirection)&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;표준 오류 메시지를 파일에 저장&lt;/li&gt;
  &lt;li&gt;형식 : 명령 2&amp;gt; 파일명&lt;/li&gt;
  &lt;li&gt;2는 표준 오류를 나타내는 파일 디스크립터이며 생략할 수 없음&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;h4 id=&quot;11-오류-재지정-사용-예&quot;&gt;11. 오류 재지정 사용 예&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;ls 명령을 통해 /ttt 디렉토리가 존재하지 않는다는 오류 메시지 화면에 나타남&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ ls
  list1.txt list2.txt list3.txt test
  $ ls /ttt
  ls: cannot access /ttt : No such file or directory
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;출력 재지정 사용해도 오류 메시지는 화면에 출력됨&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ ls &amp;gt; ls.out
  $ ls /ttt &amp;gt; ls.err
  ls: cannot access /ttt : No such file or directory
  $ cat ls.out
  list1.txt
  list2.txt
  list3.txt
  ls.out
  test
  $ cat ls.err
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;오류 재지정을 하면 정상 결과는 화면에 출력, 오류 메시지만 파일로 저장됨&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ ls 2&amp;gt; ls.out
  list1.txt list2.txt list3.txt ls.err ls.out test
  $ ls /ttt 2&amp;gt; ls.err
  $ cat ls.err
  ls: cannot access /ttt : No such file or directory
  $ cat ls.out
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;h4 id=&quot;12-find-결과-오류-메시지-처리&quot;&gt;12. find 결과 오류 메시지 처리&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;결과를 리다이렉션 했어도 화면에 출력되는 내용은 오류 메시지&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cp mynote.txt /tmp
  $ find /tmp –user $LOGNAME &amp;gt; my_tmp_file
  find: ‘/tmp/ssh-BsH53yjociBb’ : Permission denied
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ul&gt;
      &lt;li&gt;find 명령의 올바른 결과는 my_tmp_file 파일에 저장됨&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;오류 메시지만 파일에 저장&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ find /tmp –user $LOGNAME 2&amp;gt; error
  /tmp/mynote.txt
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ul&gt;
      &lt;li&gt;오류 메시지만 error 파일에 저장됨&lt;/li&gt;
      &lt;li&gt;‘2&amp;gt;’에서 두 문자 사이에 공백 있으면 안 됨&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;오류 메시지를 나중에 검토할 필요가 없고 화면에서 지워버리려고 하면, 저장 파일을 /dev/null로 지정&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ find /tmp –user $LOGNAME 2&amp;gt; /dev/null
  /tmp/mynote.txt
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;오류 메시지와 정상적인 검색 결과를 서로 다른 파일에 저장&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ find /tmp –user $LOGNAME 2&amp;gt; error &amp;gt; my_tmp_file
  $ cat error
  find: ‘/tmp/ssh-BsH53yjociBb’ : Permission denied
  $ cat my_tmp_file
  /tmp/mynote.txt
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Wed, 26 Feb 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/devlog/2020/02/26/unix-09/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/devlog/2020/02/26/unix-09/</guid>
        
        <category>unix</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[유닉스] 디렉토리 생성, 삭제</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-02-26-unix-08.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;디렉토리-생성&quot;&gt;디렉토리 생성&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;h4 id=&quot;1-홈-디렉토리&quot;&gt;1. 홈 디렉토리&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;새로운 디렉토리를 생성&lt;/li&gt;
  &lt;li&gt;시스템은 자동으로 “.”과 “..” 엔트리를 만들며, 일반 사용자는 이 두 엔트리를 삭제할 수 없음&lt;/li&gt;
  &lt;li&gt;형식 : mkdir [옵션] 디렉토리명&lt;/li&gt;
  &lt;li&gt;옵션
    &lt;ul&gt;
      &lt;li&gt;-p : 하위 디렉토리를 계층적으로 생성할 때 중간의 디렉토리가 없으면, 생성하면서 전체 디렉토리를 생성&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;h4 id=&quot;2-디렉토리-한-개-생성&quot;&gt;2. 디렉토리 한 개 생성&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;mkdir 다음에 디렉토리 이름을 지정하면 현재 디렉토리 아래에 디렉토리 생성&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;예) mkdir Unix&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;mkdir 다음에 디렉토리 이름을 절대 경로로 지정하면 절대 경로 상에 디렉토리 생성&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;예) mkdir /home/ksshin/Unix/ch2&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ mkdir Unix
  $ ls Unix
  $ ls -a Unix
  . ..
  $ mkdir /home/ksshin/Unix/ch2
  $ ls Unix
  ch3
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;h4 id=&quot;3-디렉토리-여러-개를-동시에-생성&quot;&gt;3. 디렉토리 여러 개를 동시에 생성&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;mkdir 다음에 공백으로 구분되는 이름이 여러 개일 경우 각각을 디렉토리 이름으로 하여 여러 개의 디렉토리 생성&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ mkdir temp dir1
$ ls –l
total 9
drwxr-xr-x 2 ksshin ksshin 4096 30 May 21:12 temp
drwxr-xr-x 2 ksshin ksshin 4096 30 May 21:12 dir1
$
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;홈디렉토리로 이동하지 않고 생성&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;명령어 라인이 길어질 때는 줄 끝에 백슬래시() 문자 사용&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ mkdir /home/ksshin/Unix/ch1 \
  /home/ksshin/Unix/ch2/document \
  /home/ksshin/Unix/ch2/source
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;h4 id=&quot;4-중간-디렉토리-자동-생성&quot;&gt;4. 중간 디렉토리 자동 생성&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;mkdir 명령 다음에 –p 옵션 사용&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;디렉토리 이름으로 지정한 경로 중 중간 단계의 디렉토리가 존재하지 않으면 중간 단계 디렉토리도 자동으로 생성한 뒤 해당 디렉토리 생성&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ mkdir –p temp/work/prog
  $ ls –lR temp
  temp:
  total 1
  drwxr-xr-x 2 ksshin ksshin 4096 30 May 21:12 work
  temp/work:
  total 1
  drwxr-xr-x 2 ksshin ksshin 4096 30 May 21:12 prog
  temp/work/prog:
  total 0
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;h4 id=&quot;5-서브디렉토리-생성-후의-구조&quot;&gt;5. 서브디렉토리 생성 후의 구조&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-02-26-unix-08-01.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;디렉토리-생성-1&quot;&gt;디렉토리 생성&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;h4 id=&quot;1-rmdirremove-directory&quot;&gt;1. rmdir(remove directory)&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;디렉토리를 삭제&lt;/li&gt;
  &lt;li&gt;형식 : rmdir [옵션] 디렉토리명&lt;/li&gt;
  &lt;li&gt;옵션
    &lt;ul&gt;
      &lt;li&gt;-p : 지정한 디렉토리를 삭제한 뒤, 그 디렉토리의 부모 디렉토리가 빈 디렉토리일 경우 부모 디렉토리도 자동으로 삭제&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;사용 예
    &lt;ul&gt;
      &lt;li&gt;rmdir temp&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;h4 id=&quot;2-디렉토리-삭제할-때-규칙&quot;&gt;2. 디렉토리 삭제할 때 규칙&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;비어 있지 않은 디렉토리는 삭제할 수 없다.&lt;/li&gt;
  &lt;li&gt;작업 디렉토리와 루트 디렉토리 사이에 있는 디렉토리는 어떤 것도 지울 수 없다.&lt;/li&gt;
  &lt;li&gt;비어 있지 않은 디렉토리를 한 번에 지우려면 ‘rm –r’ 명령 사용&lt;/li&gt;
  &lt;li&gt;디렉토리를 지울 때마다 사용자에게 질문하게 하려면 ‘rm –ir’ 명령 사용&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;비어 있지 않은 디렉토리를 삭제하려고 하면 오류 메시지 출력&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ rmdir temp
  rmdir: failed to remove ‘temp’ : Directory not empty
  $ &amp;lt;br&amp;gt;&amp;lt;br&amp;gt;             &amp;gt; #### 3. 디렉토리 한 개 삭제
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;rmdir 다음에 디렉토리 이름 지정하면 현재 디렉토리 내에 있는 해당 디렉토리 삭제&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;예) rmdir dir&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;rmdir 다음에 디렉토리 이름을 절대경로로 지정하면 절대 경로 상에 있는 해당 디렉토리 삭제&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;예) rmdir /home/ksshin/test&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;h4 id=&quot;4-디렉토리-여러-개-삭제&quot;&gt;4. 디렉토리 여러 개 삭제&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ rmdir temp/work/prog test
$ cd ~/Unix/ch2
$ rmdir document source
$
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;h4 id=&quot;5-가장-단순한-디렉토리-삭제-방법&quot;&gt;5. 가장 단순한 디렉토리 삭제 방법&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;가장 낮은 곳에 있는 디렉토리 삭제&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cd ~/Unix/ch2
  $ rmdir document source
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;ch1, ch2 디렉토리 삭제&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cd ..
  $ rmdir ch1 ch2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;삭제 후 디렉토리 구조&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-02-26-unix-08-02.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;
  &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;h4 id=&quot;6-가장-단순한-디렉토리-삭제-방법&quot;&gt;6. 가장 단순한 디렉토리 삭제 방법&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;절대 경로명으로 디렉토리 삭제&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ rmdir /home/ksshin/Unix/ch2/document \
  /home/ksshin/Unix/ch2/source \
  /home/ksshin/Unix/ch1 \
  /home/ksshin/Unix/ch2
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;“~” 기호를 사용하여 디렉토리 삭제&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ rmdir ~/Unix/ch2/document \
  ~/Unix/ch2/source \
  ~/Unix/ch1 \
  ~/Unix/ch2
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Wed, 26 Feb 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/devlog/2020/02/26/unix-08/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/devlog/2020/02/26/unix-08/</guid>
        
        <category>unix</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[유닉스] 디렉토리 이동</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-02-25-unix-07.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;현재-디렉토리-확인&quot;&gt;현재 디렉토리 확인&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;홈 디렉토리&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;로그인을 한 후, 사용자가 기본으로 놓이게 되는 디렉토리 위치를 홈 디렉토리(home directory)라고 함&lt;/li&gt;
      &lt;li&gt;시스템 관리자가 계정을 만들 때 정함&lt;/li&gt;
      &lt;li&gt;해당 사용자가 모든 권한을 가짐&lt;/li&gt;
      &lt;li&gt;어느 작업 디렉토리에서든 인수 없이 cd 명령을 입력하면 홈 디렉토리로 이동&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;pwd(print working directory) 명령&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;사용자의 현재 디렉토리 위치를 확인&lt;/li&gt;
      &lt;li&gt;현재 작업 디렉토리의 절대 경로를 출력&lt;/li&gt;
      &lt;li&gt;로그인한 직후의 현재 디렉토리는 사용자의 홈 디렉토리&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;형식 : pwd&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ pwd
  /home/ksshin
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;디렉토리-이동&quot;&gt;디렉토리 이동&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;cd(change directory) 명령&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;현재 작업 디렉토리를 변경&lt;/li&gt;
      &lt;li&gt;형식 : cd [디렉토리명]&lt;/li&gt;
      &lt;li&gt;디렉토리 이름을 주지 않으면 홈 디렉토리로 이동&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;‘..’를 사용하면 부모(상위) 디렉토리로 이동&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cd lecture
  $ pwd
  /home/ksshin/lecture
  $ cd ..
  $ pwd
  /home/ksshin
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;/home/ksshin/lecture 위치에서 /home/ksshin/temp&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;/home/ksshin/lecture 위치에서 /home/ksshin/temp 디렉토리로 이동하는 방법&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;절대 경로명 사용&lt;/p&gt;

            &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cd /home/ksshin/temp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;상대 경로명 사용&lt;/p&gt;

            &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cd ../temp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;/home/ksshin/lecture 위치에서 바로 위의 부모 디렉토리로 이동하는 방법&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;절대 경로명 사용&lt;/p&gt;

            &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cd /home/ksshin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;상대 경로명 사용&lt;/p&gt;

            &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cd ../
  또는
  $ cd ..
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;바로 위가 아니라 그 이전의 부모 디렉토리로 이동하는 방법&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cd ../../
  또는
  $ cd ../..
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;홈 디렉토리로 이동하는 방법&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;cd /home/ksshin&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;절대 경로를 사용해 홈 디렉토리로 이동&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;cd ../home/ksshin&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;상대 경로를 사용해 홈 디렉토리로 이동&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;cd ~&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;홈 디렉토리를 나타내는 특수 기호 ~를 사용해 홈 디렉토리로 이동&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;cd&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;목적지를 지정하지 않고 홈 디렉토리로 이동&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;예)&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cd
  $ pwd
  /home/ksshin
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;디렉토리-파일-목록-확인&quot;&gt;디렉토리 파일 목록 확인&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;ls(list) 명령&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;디렉토리의 내용을 출력&lt;/li&gt;
      &lt;li&gt;형식 : ls [옵션] [파일 또는 디렉토리명]&lt;/li&gt;
      &lt;li&gt;옵션&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-02-25-unix-07-01.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;사용 예&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;ls&lt;/li&gt;
          &lt;li&gt;ls –al /tmp&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;현재 디렉토리 목록 확인&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;디렉토리 이름을 지정하지 않고 ls 명령만 사용&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ ls
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;

        &lt;ul&gt;
          &lt;li&gt;현재 디렉토리에 파일이 없음을 나타냄&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;‘.’으로 시작하는 숨김 파일을 포함한 모든 파일 목록 보여주기&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ ls –a
  . .. .bash_history .bach_rc
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;지정한 디렉토리 목록 확인&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;디렉토리 이름을 지정하면 위치 변경 없이 지정한 디렉토리 아래의 파일 목록 확인 가능&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ ls /
  bin cdrom etc initrd.img sbin
  boot dev home lib usr
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;파일의 종류 표시&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;/가 붙으면 디렉토리, @는 심볼릭 링크 파일, *는 실행 가능한 파일&lt;/p&gt;

            &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ ls –F /
  bin/ cdrom/ etc/ initrd.img@ sbin/
  boot/ dev/ home/ lib/ usr/
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;파일 정보 확인&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;디렉토리 이름 대신 파일 이름 지정하면 해당 파일이 존재하는지 확인 가능&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;파일이 존재하면 파일 이름 출력&lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;파일이 없으면 없다는 메시지 출력&lt;/p&gt;

            &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ ls .profile
  .profile
  $ ls test
  test : No such file or directory
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;상세 정보 보기&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;파일의 상세 정보는 –l 옵션(long) 사용&lt;/li&gt;
      &lt;li&gt;인자가 디렉토리이면 디렉토리가 포함한 파일의 상세한 정보를 출력&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;인자가 파일이면 파일의 상세한 정보 출력&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ ls –l
  total 48
  drwxr-xr-x 2 ksshin ksshin 4096 5월 30 13:20 Desktop
  drwxr-xr-x 2 ksshin ksshin 4096 5월 30 13:20 Documents
  drwxr-xr-x 2 ksshin ksshin 4096 5월 30 13:20 Downloads
  -rwxr—r-- 1 ksshin ksshin 8980 5월 30 13:20 examples.desktop
  drwxr-xr-x 2 ksshin ksshin 4096 5월 30 13:20 Music
  drwxr-xr-x 2 ksshin ksshin 4096 5월 30 13:20 Pictures
  drwxr-xr-x 2 ksshin ksshin 4096 5월 30 13:20 Public
  drwxr-xr-x 2 ksshin ksshin 4096 5월 30 13:20 Templates
  drwxr-xr-x 2 ksshin ksshin 4096 5월 30 13:20 Videos
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-02-25-unix-07-02.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;디렉토리 자체 정보 확인&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;디렉토리의 마지막 수정 시간 등 자체 정보는 –d 옵션으로 확인&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;상세한 내용을 보여주는 –l 옵션과 함께 사용&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ ls –ld /
  drwxr-xr-x root root 4096 5월 30 13:20 /
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;와일드카드&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;다수의 파일을 지정하는데 사용&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-02-25-unix-07-03.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;“p”로 시작하는 모든 파일을 보고자 할 때&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ ls p*
  print_file print_txt ps_tool
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;“c”로 시작하는 세 개의 문자로 된 파일을 보고자 할 때&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ ls
  apropos bin can.mpeg cnn copy.txt corn_head man work
  $ ls c??
  cnn
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;“a”에서부터 “c”까지의 문자로 시작되는 파일을 보고자 할 때&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ ls [a-c]*
  audio_file ac_dc character configure_file
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;“a” 또는 “ch” 패턴이 들어간 파일을 보고자 할 때&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ ls {a,ch}*
  audio_file ac_dc character
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Tue, 25 Feb 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/devlog/2020/02/25/unix-07/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/devlog/2020/02/25/unix-07/</guid>
        
        <category>unix</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[자바스크립트] 문자열 자르기 (split, substring, substr)</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/javascript/2020-02-25-tip-javascript-02.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;문자열-자르기-split-substring-substr&quot;&gt;문자열 자르기 (split, substring, substr)&lt;/h1&gt;
&lt;h3 id=&quot;how-to-divide-string-in-javascript&quot;&gt;How to divide string in Javascript&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;문자열의 일부만 잘라 사용할 경우 사용&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//특정 문자를 기준으로 문자열을 자를려면 split을 사용하면 된다.
    
var string='2020-02-25';
var strArray = string.split('-');
    
console.log(strArray[0]);
console.log(strArray[1]);
console.log(strArray[2]);
    
    
// 다음으로 문자열에서 기준없이 사용하고 싶은 
// 문자열만 골라 가져오고 싶다면 substring함수를 사용하면 된다.
// substring함수는 문자열의 길이를 기준으로 자른다고 표현하기보다 일정 문자열을 반환한다.
// substring(시작인덱스, 종료인덱스);
    
var year=string.substring(0,4) //2013
var month=string.substring(5,7) //06
var day=string.substring(8,10) //11
    
    
//위와 비슷하지만 조금 다른 함수 substr이 있다.
//substr(시작인덱스, 길이)
    
var year=string.substr(0,4) //2013
var month=string.substr(5,2) //06
var day=string.substr(8,2) //11
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Tue, 25 Feb 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/tip/2020/02/25/tip-javascript-02/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/tip/2020/02/25/tip-javascript-02/</guid>
        
        <category>javascript</category>
        
        
        <category>tip</category>
        
      </item>
    
      <item>
        <title>[자바스크립트] 문자를 숫자로 바꾸기(String to int)</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/javascript/2020-02-25-tip-javascript-01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;자바스크립트-문자를-숫자로-바꾸기string-to-int&quot;&gt;자바스크립트 문자를 숫자로 바꾸기(String to int)&lt;/h1&gt;
&lt;h3 id=&quot;how-to-convert-string-to-number-in-javascript&quot;&gt;How to convert String to number in javascript&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;함수를 활용한 예제&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;읽기 좋은 코드와 가장 좋은 방법은 “Number” 함수를 사용하는 것.&lt;/li&gt;
      &lt;li&gt;parseInt 함수를 사용하면 소수점을 포함하는 숫자나 문자열도 정수로 변환됨&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Number 함수는 자바스크립트에서 형변환을 위해 제공하는 함수이기 때문에 가장 의도를 잘 나타내는 코드 작성 가능하다는 장점&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  //parseInt()
  var num = parseInt(&quot;111&quot;)
        
  //parseFloat()
  var num = parseFloat(&quot;111&quot;)
        
  //Number() - 이 방법이 제일 베스트 방법
  var num = Number(&quot;111&quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;비트 연산을 활용한 예제&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;비트 연산을 하게 될 경우 “123.001”과 같이 소수점이 있는 숫자는 모두 정수로 변환됨&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  //Bitwise Bitwise Right Shift
  var num = &quot;111&quot; &amp;gt;&amp;gt;&amp;gt; 0
        
  //Bitwise Right Shift
  var num = &quot;111&quot; &amp;gt;&amp;gt; 0
        
  //Bitwise Left Shift
  var num = &quot;111&quot; &amp;lt;&amp;lt; 0
        
  //Bitwise OR
  var num = 0 | &quot;111&quot;
        
  //Bitwise XOR
  var num = 0 ^ &quot;111&quot;
        
  //Bitwise NOT NOT
  var num = ~~&quot;111&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;연산을 통한 활용&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;더하기, 곱하기, 나누기 등의 연산을 시도하면 자동으로 형변환이됨&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; var num = +&quot;111&quot;
        
 var num = 1 * &quot;111&quot;
        
 var num = &quot;111&quot; / 1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;
&lt;br /&gt;&lt;br /&gt;
참고 : https://programmingsummaries.tistory.com/355&lt;/p&gt;
</description>
        <pubDate>Tue, 25 Feb 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/tip/2020/02/25/tip-javascript-01/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/tip/2020/02/25/tip-javascript-01/</guid>
        
        <category>javascript</category>
        
        
        <category>tip</category>
        
      </item>
    
      <item>
        <title>[Database] 키 (Key)</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-24-database-09.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;키의-개요&quot;&gt;키의 개요&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;키 (Key)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;키 란?&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;릴레이션에서 투플을 구별할 수 있게 하는 유일한 속성 (집합)&lt;/li&gt;
          &lt;li&gt;릴레이션 간의 관계를 맺는데 사용&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;키의 특성&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;한 릴레이션에서 투플의 키는 같은 값을 가질 수 없다 (유일성)&lt;/li&gt;
          &lt;li&gt;최소한의 속성들로만 키를 구성해야 한다 (최소성)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;키의 종류&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;수퍼키 (Super Key)&lt;/li&gt;
          &lt;li&gt;후보키 (Candidate Key)&lt;/li&gt;
          &lt;li&gt;기본키 (Primary Key)&lt;/li&gt;
          &lt;li&gt;대체키 (Alternate Key)&lt;/li&gt;
          &lt;li&gt;외래키 (Foreign Key)&lt;/li&gt;
          &lt;li&gt;대리키 (Surrogate Key)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;키의 종류&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;수퍼키 (Super Key)&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;투플을 유일하게 식별할 수 있는 속성들의 집합 (유일성)&lt;/p&gt;

            &lt;ul&gt;
              &lt;li&gt;하나의 릴레이션에서 키로 지정된 속성의 값은 투플마다 달라야 한다.&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;투플을 유일하게 식별할 수 있는 값이면 모두 수퍼키가 될 수 있다&lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;예 : 사원 명부&lt;/p&gt;

            &lt;ul&gt;
              &lt;li&gt;사번 : 사원별로 유일한 값으로 부여되므로, 투플을 구별할 수 있다&lt;/li&gt;
              &lt;li&gt;직책 : 같은 직책이 존재할 수 있으므로, 투플을 구별할 수 없다&lt;/li&gt;
              &lt;li&gt;이름 : 같은 이름이 존재할 수 있으므로, 투플을 구별할 수 없다&lt;/li&gt;
              &lt;li&gt;생년월일 : 생일이 같을 수 있으므로, 투플을 구별할 수 없다&lt;/li&gt;
              &lt;li&gt;주소 : 주소가 같을 수 있으므로, 투플을 구별할 수 없다&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;사원 명부의 슈퍼 키 : 사번을 포함하는 속성의 집합&lt;/p&gt;

            &lt;ul&gt;
              &lt;li&gt;(사번), (사번, 직책), (사번, 이름), (사번, 생년월일), (사번, 주소),
(사번, 직책, 이름), (사번, 직책, 생년월일), (사번, 직책, 주소),
(사번, 이름, 생년월일), (사번, 이름, 주소), (사번, 생년월일, 주소),
(사번, 직책, 이름, 생년월일), (사번, 직책, 이름, 주소), (사번, 이름, 생년월일, 주소),
(사번, 직책, 생년월일, 주소), (사번, 직책, 이름, 생년월일, 주소)&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;후보키 (Candidate Key)&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;투플을 식별할 수 있는 속성들의 최소 집합 (최소성)&lt;/li&gt;
          &lt;li&gt;하나의 속성으로 구성된 키 : 최소성을 만족하여 후보키로 가장 좋다.&lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;수퍼키 중에서 최소성을 만족하는 키&lt;/p&gt;

            &lt;ul&gt;
              &lt;li&gt;후보키는 유일성과 최소성을 만족하여야 한다.&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;후보키의 특성은 투플이 삽입, 수정되어도 유지되어야 한다.&lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;예 : 사원 릴레이션&lt;/p&gt;

            &lt;ul&gt;
              &lt;li&gt;사번 : 후보키로 가장 좋다.&lt;/li&gt;
              &lt;li&gt;(직책, 이름), (직책, 이름, 생년월일) - 유일성을 만족 못하는 경우 발생하므로 후보키가 될 수 없다.&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;기본키 (Primary Key)&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;후보키 중에서 하나를 선정하여 사용하는 대표키&lt;/p&gt;

            &lt;ul&gt;
              &lt;li&gt;후보키가 하나일 경우 : 기본키&lt;/li&gt;
              &lt;li&gt;후보키가 여러 개 일 경우 : 릴레이션의 특성을 반영하여 하나를 선택&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;기본 키 선정시 주의 사항&lt;/p&gt;

            &lt;ul&gt;
              &lt;li&gt;유일성과 최소성을 만족하여야 한다.&lt;/li&gt;
              &lt;li&gt;NULL 값을 가질 수 있는 속성은 부적합하다.&lt;/li&gt;
              &lt;li&gt;값이 바뀌지 말아야 한다.&lt;/li&gt;
              &lt;li&gt;가장 단순한 후보키를 선택한다.&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;릴레이션 스키마를 표현할 때, 기본키는 속성에 밑줄로 표시한다.&lt;/p&gt;

            &lt;ul&gt;
              &lt;li&gt;릴레이션이름( 속성1, 속성2, … , 속성N )&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;예 : 사원 릴레이션&lt;/p&gt;

            &lt;ul&gt;
              &lt;li&gt;사원( 사번, 직책, 이름, 생년월일, 주소 )&lt;/li&gt;
              &lt;li&gt;사원( 사번, 직책, 이름, 생년월일, 주소 ) : 대부분의 경우, 이름+주소는 기본키로 가능하지만, 투플을 구별할 수 없는 경우가 발생될 수도 있다.&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;

        &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-24-database-09-01.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;
  &lt;br /&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;대체키 (Alternate Key)&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;기본키로 선택되지 못한 후보키&lt;/li&gt;
        &lt;/ul&gt;

        &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-24-database-09-02.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;
  &lt;br /&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;외래키&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;다른 릴레이션의 기본키를 참조하는 속성(집합)&lt;/li&gt;
          &lt;li&gt;관계 데이터 모델의 특징인 릴레이션간의 관계(Relationship)을 표현&lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;특징&lt;/p&gt;

            &lt;ul&gt;
              &lt;li&gt;관계 데이터 모델의 릴레이션 간의 관계를 표현&lt;/li&gt;
              &lt;li&gt;다른 릴레이션의 기본키를 참조하는 속성&lt;/li&gt;
              &lt;li&gt;외래키와 기본키의 도메인은 같아야 한다.&lt;/li&gt;
              &lt;li&gt;NULL 값이 허용되며, 중복되어도 된다.&lt;/li&gt;
              &lt;li&gt;외래키가 기본키의 일부가 될 수 있다.&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;

        &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-24-database-09-03.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;
  &lt;br /&gt;&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;외래키가 참조되는 릴레이션의 기본키가 아닐 경우&lt;/p&gt;

            &lt;ul&gt;
              &lt;li&gt;외래키는 다른 릴레이션에서 하나의 투플을 구별하여야 함&lt;/li&gt;
              &lt;li&gt;참조되는 릴레이션의 투플을 구별할 수 없는 경우가 발생&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;외래키가 자신이 속한 릴레이션의 기본키를 참조하도록 외래키를 정의할 수 있다.&lt;/p&gt;
          &lt;/li&gt;
        &lt;/ul&gt;

        &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-24-database-09-04.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;
  &lt;br /&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;대리키 (Surrogate Key) / 인조키 (Artificial Key)&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;일련번호와 같은 가상의 속성을 만들어 기본키로 사용하는 키&lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;대리키를 사용하는 경우&lt;/p&gt;

            &lt;ul&gt;
              &lt;li&gt;기본키가 유출되어서는 안될 경우&lt;/li&gt;
              &lt;li&gt;여러 개의 속성으로 구성되어 복잡할 경우&lt;/li&gt;
              &lt;li&gt;마땅한 기본키가 없을 경우&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;대리키는 DBMS가 임의로 생성하는 값으로 사용자가 직관적으로 알 수 없다.&lt;/li&gt;
        &lt;/ul&gt;

        &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-24-database-09-05.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;
  &lt;br /&gt;&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Mon, 24 Feb 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/devlog/2020/02/24/database-09/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/devlog/2020/02/24/database-09/</guid>
        
        <category>database</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[Database] 관계 데이터 모델의 기본용어와 릴레이션 구성요소</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-24-database-08.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;관계-데이터-모델의-개요&quot;&gt;관계 데이터 모델의 개요&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;관계 데이터 모델이란?&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;관계 데이터 모델&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;개념적 구조를 논리적 구조로 표현한 모델&lt;/li&gt;
          &lt;li&gt;개체에 관한 데이터를 행과 열로 구성된 데이블(릴레이션)에 저장&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;관계 데이터 모델의 기본 용어&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;릴레이션 (Relation)
        &lt;ul&gt;
          &lt;li&gt;개체에 대한 데이터를 2차원 테이블의 구조로 저장한 것&lt;/li&gt;
          &lt;li&gt;파일 관리 시스템의 파일(File)에 대응&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-24-database-08-01.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;속성 (Attribute)&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;릴레이션의 열&lt;/li&gt;
          &lt;li&gt;파일 관리 시스템 파일의 필드(Field)에 대응&lt;/li&gt;
          &lt;li&gt;예&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-24-database-08-02.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;투플 (Tuple)&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;릴레이션의 행&lt;/li&gt;
          &lt;li&gt;개체 인스턴스&lt;/li&gt;
          &lt;li&gt;파일 관리 시스템의 레코드(Record)에 대응&lt;/li&gt;
          &lt;li&gt;예 : 회사 사원 개체 집합에 5개의 사원 정보가 있을 경우, 5개의 투플 또는 5개의 개체 인스턴스가 있다고 한다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-24-database-08-03.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;도메인 (Domain)&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;하나의 속성이 가질 수 있는 모든 값의 집합&lt;/p&gt;

            &lt;ul&gt;
              &lt;li&gt;예: 회사의 직급 - 대표이사, 전무, 상무, 부장, 차장, 과장, 대리, 사원&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;속성의 특성을 고려한 데이터 타입으로 정의&lt;/li&gt;
          &lt;li&gt;속성 값을 입력 및 수정할 때 적합성의 판단 기준이 됨&lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;도메인을 속성의 특성을 고려한 데이터 타입으로 정의&lt;/p&gt;

            &lt;ul&gt;
              &lt;li&gt;예 : 이름 속성의 도메인 : CHAR(20), 나이 속성의 도메인 : INT&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-24-database-08-04.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;널 (Null)&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;속성 값을 모르거나 적합한 값이 없는 경우 사용되는 값&lt;/li&gt;
          &lt;li&gt;해당되는 값이 없음을 의미&lt;/li&gt;
          &lt;li&gt;숫자 0 이나, 공백 문자와 다름&lt;/li&gt;
          &lt;li&gt;널 값은 DBMS마다 표시하는 기호가 다르다.&lt;/li&gt;
          &lt;li&gt;예
            &lt;ul&gt;
              &lt;li&gt;쇼핑몰의 회원 가입시 직장정보 입력 칸에 입력을 하지 않은 경우&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;차수 (Degree)&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;한 릴레이션에서 속성의 수, 즉 열의 수&lt;/li&gt;
          &lt;li&gt;모든 릴레이션은 최소 1 이상의 차수를 가지고 있다&lt;/li&gt;
          &lt;li&gt;릴레이션의 차수는 변화가 별로 없다&lt;/li&gt;
          &lt;li&gt;예 : 5개의 속성을 가진 릴레이션의 차수는 5이다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;카디널리티 (Cardinality)&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;한 릴레이션에서 투플의 개수, 즉 행의 수&lt;/li&gt;
          &lt;li&gt;카디널리티가 0 (투플이 없는 릴레이션)인 릴레이션도 있다&lt;/li&gt;
          &lt;li&gt;릴레이션의 카디널리티는 자주 변한다&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-24-database-08-05.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;릴레이션의-구성-및-특징&quot;&gt;릴레이션의 구성 및 특징&lt;/h1&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;릴레이션 구성&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;릴레이션 스키마 (Relation Schema) / 릴레이션 내포 (Relation Intension)&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;릴레이션의 이름과 릴레이션에 포함된 속성의 이름으로 정의한 릴레이션의 논리적 구조&lt;/li&gt;
          &lt;li&gt;릴레이션의 논리적 구조&lt;/li&gt;
          &lt;li&gt;릴레이션의 전체구조를 파악할 수 있다&lt;/li&gt;
          &lt;li&gt;자주 바뀌지 않는다.&lt;/li&gt;
          &lt;li&gt;일반적인 표현&lt;/li&gt;
        &lt;/ul&gt;

        &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-24-database-08-06.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;
  &lt;br /&gt;&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;예&lt;/p&gt;

            &lt;ul&gt;
              &lt;li&gt;사원(사번, 직책, 이름, 생년월일)&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;릴레이션 인스턴스 (Relation Instance) / 릴레이션 외연 (Relation Extension)&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;한 시점에 릴레이션에 존재하는 투플의 집합&lt;/li&gt;
          &lt;li&gt;릴레이션 인스턴스에 포함된 투플은 릴레이션 스키마에서 정의하는 각 속성의 실제 값으로 구성&lt;/li&gt;
          &lt;li&gt;DBMS의 데이터 조작어를 이용하여 투플의 삽입, 삭제, 수정, 검색을 수행&lt;/li&gt;
          &lt;li&gt;릴레이션 인스턴스는 자주 바뀐다.&lt;/li&gt;
          &lt;li&gt;간단히 릴레이션이라고 부르기도 한다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-24-database-08-07.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;데이터베이스 스키마와 릴레이션 스키마&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;데이터베이스는 여러 개의 릴레이션으로 구성&lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;데이터베이스 스키마&lt;/p&gt;

            &lt;ul&gt;
              &lt;li&gt;데이터베이스의 전체 구조&lt;/li&gt;
              &lt;li&gt;릴레시션 스키마를 모아 놓은 것&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;데이터베이스 스키마를 설계한다 = 모든 릴레이션 스키마를 정의한다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;데이터베이스 인스턴스와 릴레이션 인스턴스&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;데이터베이스 인스턴스&lt;/p&gt;

            &lt;ul&gt;
              &lt;li&gt;어느 시점에 데이터베이스에 저장된 데이터 내용 전체&lt;/li&gt;
              &lt;li&gt;데이터베이스를 구성하는 모든 릴레이션 인스턴스를 모아 놓은 것&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-24-database-08-08.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;릴레이션의 특징&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;속성의 이름은 중복될 수 없다&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;한 릴레이션의 속성은 다른 이름을 가져야 한다&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;속성은 단일 값을 가진다.&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;여러 개의 값을 가져야만 하는 경우, 투플을 여러 개 만들어, 속성 값이 단일 값이 되도록 나눈다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;한 속성의 값은 해당 도메인의 값만 가질 수 있다&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;속성은 순서를 갖지 않는다&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;속성의 순서가 달라도 스키마는 동일하다.&lt;/li&gt;
          &lt;li&gt;속성의 순서와 상관없이 같은 속성들로 구성되어 있어야 같은 릴레이션이다.&lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;예 : 속성 순서가 다른 두 릴레이션&lt;/p&gt;

            &lt;ul&gt;
              &lt;li&gt;사원(사번, 직책, 이름, 생년월일)&lt;/li&gt;
              &lt;li&gt;사원(사번, 이름, 생년월일, 직책)&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;릴레이션 내의 중복된 투플은 허용되지 않는다&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;동일한 투플은 같은 릴레이션에 존재할 수 없다.&lt;/li&gt;
          &lt;li&gt;모든 투플에는 자신을 식별할 수 있는 속성을 가지고 있으므로, 동일한 투플이 존재하지 않는다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;하나의 릴레이션에서 투플의 순서는 무의미하다.&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;투플의 순서가 빠뀐다고 다른 릴레이션이 될 수 없다.&lt;/li&gt;
          &lt;li&gt;릴레이션에 투플이 삽입된 순서대로 저장된다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Mon, 24 Feb 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/devlog/2020/02/24/database-08/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/devlog/2020/02/24/database-08/</guid>
        
        <category>database</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[Database] 약한 개체와 IE표기법</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-23-database-07.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;약한-개체의-개체타입-식별관계타입-및-식별자&quot;&gt;약한 개체의 개체타입, 식별관계타입 및 식별자&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;약한 개체 타입&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;상위 개체 타입에 종속된 개체 타입&lt;/li&gt;
      &lt;li&gt;이중 직사각형으로 표현&lt;/li&gt;
      &lt;li&gt;예 : 직원의 가족 – 직원 개체 타입이 있어야 가족 개체 타입을 식별할 수 있다.&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-23-database-07-01.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;식별 관계 타입&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;강한 개체 타입과 약한 개체 타입의 관계를 나타냄&lt;/li&gt;
      &lt;li&gt;강한 개체 타입의 기본키를 상속받아 사용함&lt;/li&gt;
      &lt;li&gt;이중 마름모꼴로 표현&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-23-database-07-02.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;식별자 (Discriminator) / 부분키 (Partial key)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;약한 개체 타입은 자신의 기본키만으로 식별이 어려우므로, 상위의 강한 개체 타입의 기본키를 상속받아 결합하여 사용&lt;/li&gt;
      &lt;li&gt;약한 개체 타입은 식별자를 사용하여 개별 개체를 식별할 수 있다.&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-23-database-07-03.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;예&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;직원 개체 타입과 가족 개체 타입은 부양 관계를 가진다.&lt;/li&gt;
      &lt;li&gt;직원 – 자기 자신만으로 존재 가능, 사번을 키로 구분한다.&lt;/li&gt;
      &lt;li&gt;가족 – 어느 직원의 가족인지 알기 위하여 직원의 사번과 가족의 이름으로 식별이 가능하다&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-23-database-07-04.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;약한개체타입, 식별관계타입 및 식별자 정리&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-23-database-07-05.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;약한-개체의-개체타입-식별관계타입-및-식별자-1&quot;&gt;약한 개체의 개체타입, 식별관계타입 및 식별자&lt;/h1&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;IE란()Information Engineering Notation)&lt;/p&gt;

&lt;p&gt;새발 표기법(Crow-feet Notation) : 관계 대응수를 새발 모양의 기호로 표현&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;피터첸 표기법과 IE표기법&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-23-database-07-06.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;개체의 표현&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-23-database-07-07.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;속성의 표현&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-23-database-07-08.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;관계의 표현&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-23-database-07-09.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;관계대응수의 표현&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;1:N 관계 대응수&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-23-database-07-10.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-23-database-07-11.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;1:1 관계 대응수&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-23-database-07-12.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;M:N 관계대응수&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-23-database-07-13.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;참여도의 표현&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;부분 참여
 &lt;img src=&quot;/assets/img/database/2020-02-23-database-07-14.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;전체 참여&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-23-database-07-15.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;강한개체와 약한개체의 표현&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;(강한 개체 : 약한 개체) 관계 대응수 = ( 1 : N )&lt;/li&gt;
      &lt;li&gt;(강한 개체 : 약한 개체) 참여도 = ( 전체 : 부분 )&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-23-database-07-16.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;키와 식별자의 표현&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;기본키&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;속성 이름 앞에 ◆로 표기&lt;/li&gt;
          &lt;li&gt;속성 이름 뒤에 (PK)로 표기&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-23-database-07-17.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;외래키&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;속성의 이름 뒤에 (FK)로 표기&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-23-database-07-18.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Sun, 23 Feb 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/devlog/2020/02/23/database-07/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/devlog/2020/02/23/database-07/</guid>
        
        <category>database</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[유닉스] 디렉토리 계층구조</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-02-22-unix-06.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;디렉토리-계층-구조&quot;&gt;디렉토리 계층 구조&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;디렉토리 계층 구조&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;데이터를 효율적으로 관리하기 위해 시스템을 계층적인 트리 구조로 구성&lt;/li&gt;
      &lt;li&gt;트리 구조 : 모양이 나무를 거꾸로 한 것과 유사&lt;/li&gt;
      &lt;li&gt;파일이 나무의 잎에, 디렉토리가 나뭇가지에 해당&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;루트(root) 디렉토리&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;모든 디렉토리, 파일의 원조 및 시작&lt;/li&gt;
          &lt;li&gt;슬래시(/) 기호로 표시&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;여러 가지 디렉토리&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;상위 디렉토리는 기호 ..으로 표시&lt;/li&gt;
      &lt;li&gt;모든 디렉토리의 최상위는 루트 디렉토리(/)&lt;/li&gt;
      &lt;li&gt;루트 디렉토리 : 상위 디렉토리가 없는 유일한 디렉토리&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;작업 디렉토리(working directory), 현재 디렉토리(current directory)&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;현재 작업을 하고 있는 디렉토리&lt;/li&gt;
          &lt;li&gt;기호 ‘.’로 표시&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;홈 디렉토리&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;기호 틸드(~)로 표시&lt;/li&gt;
      &lt;li&gt;다중 사용자 시스템에서 각 사용자에게 할당된 작업 영역&lt;/li&gt;
      &lt;li&gt;파일의 생성, 삭제를 자유롭게 할 수 있는 디렉토리&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;리눅스의 계층구조 디렉토리&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-02-22-unix-06-01.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;루트(/) 디렉토리&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;리눅스 시스템의 최상위 디렉토리&lt;/li&gt;
      &lt;li&gt;디렉토리 구조의 시작&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;리눅스는 루트(/)를 기준으로 디렉토리를 생성&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cd /
  $ ls
  bin etc lost+found opt run sys var
  boot home media proc sbin tmp
  dev lib mnt root srv usr
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;기본 실행 명령어 디렉토리 (/bin)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;‘binaries’, 리눅스 시스템에서 가장 많이 사용되는 디렉토리 중 하나&lt;/li&gt;
      &lt;li&gt;기본 명령어 파일들이 2진수의 형태로 모여 있는 디렉토리&lt;/li&gt;
      &lt;li&gt;대부분의 일반적인 명령어들 포함&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;시스템 운영 명령어 디렉토리 (/sbin)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;‘system binaries’, 시스템 관리(부팅, 복구, 보수 등)를 위한 명령어들&lt;/li&gt;
      &lt;li&gt;시스템 운영에 필요한 명령어들 포함&lt;/li&gt;
      &lt;li&gt;관리자 계정인 루트(root)만이 사용할 수 있는 명령어들로 구성&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;시스템 설정 파일 디렉토리 (/etc)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;리눅스 시스템에 대한 환경 설정과 관련된 파일 및 디렉토리&lt;/li&gt;
      &lt;li&gt;사용자 관리를 위한 암호 관련 파일, 네트워크 정보를 보유한 파일 등 시스템 관리에 전반적인 파일들 존재&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;부팅 관련 파일 디렉토리 (/boot)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;리눅스 커널이 저장되어 있는 디렉토리&lt;/li&gt;
      &lt;li&gt;각종 리눅스 부트에 필요한 부팅 지원 파일들&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;입출력 장치 연결 마운트 디렉토리 (/mnt)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;‘mount directory’, 각종 입출력 장치와 연결할 때 마운트하게 되면 해당 파일 시스템의 내용이 이 디렉토리에 저장됨&lt;/li&gt;
      &lt;li&gt;가상 머신으로 리눅스 설치시 비어있음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;임시 마운트 디렉토리 (/media)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;CD/DVD 또는 FDD, USB 등이 임시로 마운트되는 역할 수행&lt;/li&gt;
      &lt;li&gt;가상 머신으로 리눅스 설치시 비어있음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;응용 패키지 프로그램 설치 디렉토리 (/usr)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;사용자가 사용할 응용 패키지 프로그램 설치시 사용&lt;/li&gt;
      &lt;li&gt;윈도우 운영체제에서의 [Program Files]와 같은 역할&lt;/li&gt;
      &lt;li&gt;시스템에 사용되는 각종 응용 프로그램들이 설치되는 디렉토리&lt;/li&gt;
      &lt;li&gt;거의 모든 프로그램과 그에 관련된 명령어 및 라이브러리들 포함&lt;/li&gt;
      &lt;li&gt;X 윈도우 시스템 관련 파일들과 리눅스 커널 소스, 각종 C 언어 관련 헤더 파일 등 저장&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;공유 라이브러리 디렉토리 (/lib)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;프로그램들의 각종 라이브러리들 존재, 대부분 공유 라이브러리&lt;/li&gt;
      &lt;li&gt;평소에는 파일 크기를 줄여서 존재, 라이브러리 실행시 풀어서 사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;일반 사용자들의 홈 디렉토리 (/home)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;시스템 계정을 사용하는 사용자들의 홈 디렉토리&lt;/li&gt;
      &lt;li&gt;FTP, www 등과 같은 서비스 디렉토리들 저장&lt;/li&gt;
      &lt;li&gt;시스템에서 사용되지 않고, 원격지 상에서 시스템으로 접속을 시도하는 사용자들을 위한 공간으로 사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;시스템 디바이스 장치 파일 디렉토리 (/dev)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;시스템의 각종 장치들을 사용할 수 있도록 장치 드라이버들 저장&lt;/li&gt;
      &lt;li&gt;리눅스에서는 각종 장치들을 하나의 파일로 취급&lt;/li&gt;
      &lt;li&gt;시스템은 각 장치를 설치하는데 필요한 정보를 이 디렉토리에서 가져옴&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;가상 파일 시스템 디렉토리 (/proc)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;시스템의 각종 프로세스와 프로그램 정보 및 하드웨어적인 정보들 저장&lt;/li&gt;
      &lt;li&gt;물리적인 하드디스크 용량을 사용하지 않고 커널에 의해 메모리에 저장됨&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;가변 자료 저장 디렉토리 (/var)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;시스템에서 사용되는 동적인 파일, 즉 변경되는 파일들 저장&lt;/li&gt;
      &lt;li&gt;각종 시스템 로그 파일, 사용자 로그인에 대한 보안 기록 등&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;임시 파일 저장 디렉토리 (/tmp)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;프로그램 수행 과정에서의 임시 파일들 저장&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;리눅스에 없는 프로그램 추가 설치 디렉토리 (/opt)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;리눅스에서 제공되지 않는 프로그램을 추가로 설치할 경우 사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;복구 프로그램인 fsck에 의해 사용되는 디렉토리 (/lost+found)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;수행 중 파일시스템의 이상 유/무를 진단하고 복구하는 프로그램인 fsck(file system check)에 의해 사용되는 디렉토리&lt;/li&gt;
      &lt;li&gt;일반 사용자 계정으로 로그인한 상태에서는 접근 불가&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;관리자 계정인 root로 접속해야 디렉토리의 내용을 볼 수 있음&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cd /lost+found
  -bash: cd: /lost+found: Permission denied
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;디렉토리-계층-구조-1&quot;&gt;디렉토리 계층 구조&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;디렉토리&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;서로 연관이 있는 파일들을 하나의 그룹으로 만들어서 저장할 수 있도록 구분된 공간을 의미&lt;/li&gt;
      &lt;li&gt;각 디렉토리의 이름은 “/”로 구별&lt;/li&gt;
      &lt;li&gt;특정 파일을 지정할 때는 맨 마지막에 파일이름을 쓴다.&lt;/li&gt;
      &lt;li&gt;파일시스템의 맨 상위 디렉토리를 root 디렉토리&lt;/li&gt;
      &lt;li&gt;root 디렉토리는 “/”로 표기&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;경로명(path name)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;파일이나 디렉토리의 전체 이름&lt;/li&gt;
      &lt;li&gt;디렉토리 계층 구조에 있는 특정 파일이나 디렉토리의 위치를 나타내는 것&lt;/li&gt;
      &lt;li&gt;디렉토리와 디렉토리, 디렉토리와 파일을 구별하는 구별자로 “/”를 사용&lt;/li&gt;
      &lt;li&gt;경로명이 디렉토리 이름으로 끝나는 경우 제일 뒤에 “/”를 붙이거나 붙이지 않을 수 있음&lt;/li&gt;
      &lt;li&gt;절대경로명과 상대경로명이 있음&lt;/li&gt;
      &lt;li&gt;파일 이름이나 디렉토리 지정하는 방법도 절대경로명을 사용하거나 상대경로명을 사용하는 방법&lt;/li&gt;
      &lt;li&gt;파일을 명시할 때, 별도의 경로명을 써주지 않으면 현재 디렉토리를 가리킴&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;절대경로명&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;루트 디렉토리를 기준으로 파일의 위치를 나타낸 것&lt;/li&gt;
      &lt;li&gt;루트 디렉토리부터 시작해서 특정 파일의 위치까지 이동하는데 거치는 모든 디렉토리의 이름 표시&lt;/li&gt;
      &lt;li&gt;항상 “/”로 시작&lt;/li&gt;
      &lt;li&gt;특정 파일을 가리키는 절대경로명은 항상 동일&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;상대경로명&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;현재 디렉토리를 기준으로 파일의 위치를 나타낸 것&lt;/li&gt;
      &lt;li&gt;현재 디렉토리부터 시작해서 하위로 내려가면 디렉토리 이름 추가&lt;/li&gt;
      &lt;li&gt;루트를 향해 올라가면 “..”을 추가&lt;/li&gt;
      &lt;li&gt;“/” 이외의 문자로 시작&lt;/li&gt;
      &lt;li&gt;상대경로명은 현재 디렉토리의 위치에 따라 달라짐&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;탐색 경로&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;명령어를 실행시키면 리눅스는 명령어의 실행 파일이 있는 위치를 찾음&lt;/li&gt;
      &lt;li&gt;탐색 경로 : 명령어를 어디에서 찾아야 할지 명시하는 것&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;명령어가 존재하는 디렉토리가 탐색 경로에 없으면 명령어 이름만으로 실행시킬 수 없음&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;절대 경로명을 다 써주어 실행시키거나&lt;/li&gt;
          &lt;li&gt;현재 작업 디렉토리를 나타내는 “.”을 사용&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;명령 실행시 탐색 경로의 예&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;test 파일의 내용이 다음과 같은 경우&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cat test
  ls
  date
  cat test
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;현재 작업 디렉토리가 탐색 경로에 지정되지 않았으므로 실행되지 않음&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ test
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;현재 작업 디렉토리를 지정한 경우&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ ./test
  Desktop Downloads Music Public Videos
  Documents examples.desktop Pictures Templates
  2015. 06. 01. (월) 13:34:25 KST
  ls
  date
  cat test
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;또는 절대경로명을 다 써줄 수 있음&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ /home/ksshin/test
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;기호로 디렉토리 이동&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;~ : 홈 디렉토리로 이동&lt;/li&gt;
      &lt;li&gt;. : 현재 디렉토리 지정&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Sat, 22 Feb 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/devlog/2020/02/22/unix-06/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/devlog/2020/02/22/unix-06/</guid>
        
        <category>unix</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[유닉스] 파일의 종류</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-02-20-unix-05.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;명령어-구조&quot;&gt;명령어 구조&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;유닉스 파일 시스템&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;파일 시스템이란&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;파일을 저장하는데 쓰이는 수단&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;디스크에 파일을 저장하는 방법. 디스크에서 파일이 구성되는 방식&lt;/p&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;시스템 내의 수많은 파일을 효과적으로 관리하기 위해 디렉토리를 계층적으로 구성&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;디렉토리, 서브디렉토리, 개별 파일&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;유닉스의 파일은, ‘파일 이름’, ‘i-node’, ‘데이터 블록’의 세 가지 요소를 모두 충족해야 함&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-02-20-unix-05-01.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;파일 이름 명명규칙&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;특별한 확장명 없이 이름 사용&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;‘.’으로 시작하는 파일의 경우&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;숨어있는 파일을 의미&lt;/li&gt;
          &lt;li&gt;주로 시스템 파일에 사용&lt;/li&gt;
          &lt;li&gt;ls 명령어에 옵션 ‘-a’를 설정해야 파일의 존재 확인&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;파일 이름은 최대 255자까지 허용&lt;/li&gt;
      &lt;li&gt;루트를 의미하는 ‘/’는 사용 불가&lt;/li&gt;
      &lt;li&gt;파일과 디렉토리 이름에는 알파벳, 숫자, 하이픈(-), 밑줄(_), 점(.) 만을 사용&lt;/li&gt;
      &lt;li&gt;
        &lt;table&gt;
          &lt;tbody&gt;
            &lt;tr&gt;
              &lt;td&gt;파일과 디렉토리 이름에 공백, *, &amp;amp;,&lt;/td&gt;
              &lt;td&gt;, “, ‘, ~, #, $, (, ), \, ;, &amp;lt;, &amp;gt;는 쓰지 않음&lt;/td&gt;
            &lt;/tr&gt;
          &lt;/tbody&gt;
        &lt;/table&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;i-node&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;리눅스가 파일을 생성할 때의 두 가지 절차&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;파일의 데이터를 저장하기 위한 디스크 공간 확보&lt;/li&gt;
          &lt;li&gt;파일에 대한 기본 정보를 저장하는 i-node(index node) 구조 생성&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;리눅스는 i-node를 테이블에 보관&lt;/li&gt;
      &lt;li&gt;각각의 i-node는 i-number(혹은 index number)라고 부름&lt;/li&gt;
      &lt;li&gt;모든 디렉토리는 파일의 이름과 i-number만을 가지고 있음&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;i-node 확인 명령&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;ls –il&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;파일 시스템에서 i-node 확인 명령&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;df –i (df는 디스크 용량 확인 명령)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-02-20-unix-05-02.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;데이터 블록&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;파일을 저장할 때 실제 데이터는 구분없이 디스크에 저장&lt;/li&gt;
      &lt;li&gt;데이터 블록 : 파일들의 실제 데이터가 디스크의 한 곳에 저장되어 있는 것&lt;/li&gt;
      &lt;li&gt;파일들을 구분할 수 있는 부가적인 정보는 i-node에 있음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;슈퍼블록&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;디스크에 저장되는 가장 중요한 정보&lt;/li&gt;
      &lt;li&gt;디스크의 헤드와 실린더 수, i-node 목록의 헤드, 자유 블록에 대한 정보&lt;/li&gt;
      &lt;li&gt;파일 시스템이 마운트될 때 맨 처음 읽는 정보&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;슈퍼블록은 모든 블록 그룹에 똑같은 복사본을 갖도록 시스템이 자동으로 만듦&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;파일 시스템 손상되었을 때 슈퍼블록을 이용하여 복구 가능&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;파일의-종류&quot;&gt;파일의 종류&lt;/h1&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;일반 파일&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;데이터 저장이 목적인 파일&lt;/li&gt;
      &lt;li&gt;사용자가 작성한 문서, 프로그램, 자료&lt;/li&gt;
      &lt;li&gt;텍스트 파일과 바이너리 파일로 나뉨&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;텍스트 파일&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;내용이 아스키(ASCII) 코드로 구성된 파일&lt;/li&gt;
      &lt;li&gt;텍스트 편집기나 cat, more 명령을 이용해 내용을 볼 수 있음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;바이너리 파일&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;내용이 아스키 코드가 아닌 모든 파일&lt;/li&gt;
      &lt;li&gt;실행 파일과 데이터 파일이 있음&lt;/li&gt;
      &lt;li&gt;지정된 응용 프로그램을 이용해야 내용을 볼 수 있음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;디렉토리 파일&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;그 내용이 다른 파일이나 하위 디렉토리의 이름인 특수 파일&lt;/li&gt;
      &lt;li&gt;디렉토리에 포함된 파일들에 대한 위치, 크기, 생성 시간 등의 정보 포함&lt;/li&gt;
      &lt;li&gt;기본적으로 다음 두 파일을 항상 가짐&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-02-20-unix-05-03.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;심볼릭 링크 파일&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;윈도우 시스템의 바로가기 아이콘에 해당하는 파일&lt;/li&gt;
      &lt;li&gt;원본 파일을 가리키는 역할만 함&lt;/li&gt;
      &lt;li&gt;사용 목적 : 불필요한 파일 복사를 줄이고 파일시스템을 보다 기능적으로 사용하기 위해서&lt;/li&gt;
      &lt;li&gt;디렉토리도 파일처럼 링크할 수 있음&lt;/li&gt;
      &lt;li&gt;링크를 삭제할 때는 링크만 삭제, 원본 파일은 그대로 존재&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;링크의 원본 파일을 삭제해도 링크 파일은 그대로 존재&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cd /bin
  $ ls –l ypdomainname
  lrwxrwxrwx 1 root root 8 5월 30 13:20 ypdomainname -&amp;gt;
  hostname
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;장치(디바이스) 파일&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;유닉스 시스템에 부착된 장치들을 관리하기 위한 특수 파일&lt;/li&gt;
      &lt;li&gt;/dev, /devices 디렉토리에 존재&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;문자 장치 특수 파일&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;버퍼가 없는 장치로부터 한 번에 한 문자씩(바이트 단위) 자료를 입출력하는 장치&lt;/li&gt;
          &lt;li&gt;예) 키보드, 모니터, 터미널, 프린터, 플로터, 보조 기억장치&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;블록 장치 특수 파일&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;버퍼기술을 사용해 자료 전송 효율을 높임&lt;/li&gt;
          &lt;li&gt;수십 혹은 수백 바이트 크기의 블록 단위로 데이터를 입출력하는 장치&lt;/li&gt;
          &lt;li&gt;예) HDD, FDD, 테이프 드라이브, 광자기 드라이브&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;파이프 파일&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;네임드 파이프(named pipe)라고 하며, 프로세스간 통신을 수행하기 위해 만들어진 파일&lt;/li&gt;
      &lt;li&gt;한 프로그램의 출력을 중간 파일 없이 다른 파일의 입력으로 바로 보내는 파일&lt;/li&gt;
      &lt;li&gt;
        &lt;table&gt;
          &lt;tbody&gt;
            &lt;tr&gt;
              &lt;td&gt;파이프는 파이프(&lt;/td&gt;
              &lt;td&gt;) 기호 왼쪽 명령어의 출력을 오른쪽 명령어의 입력으로 보냄&lt;/td&gt;
            &lt;/tr&gt;
          &lt;/tbody&gt;
        &lt;/table&gt;
      &lt;/li&gt;
      &lt;li&gt;파이프라인은 하나 이상의 파이프로 구성되며, 파이프에서의 데이터는 선입선출(FIFO : First In First Out) 방식&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-02-20-unix-05-04.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;소켓 파일&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;소켓(socket) : 네트워크의 입출력을 담당하는 API(Application Program Interface)로 두 호스트 컴퓨터 사이의 정보전달&lt;/li&gt;
      &lt;li&gt;물리적으로 연결된 네트워크상에서의 데이터 송수신에 사용할 수 있는 소프트웨어적인 장치&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;소켓 연결 과정&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;1단계 : 소켓 생성&lt;/li&gt;
          &lt;li&gt;2단계 : IP 주소와 포트 번호 할당&lt;/li&gt;
          &lt;li&gt;3단계 : 연결 요청 가능한 상태로 설정&lt;/li&gt;
          &lt;li&gt;4단계 : 연결 요청에 대한 수락&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;파일의 종류 확인&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;file 명령&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;파일의 종류를 알아보는 명령&lt;/li&gt;
          &lt;li&gt;패키지 파일의 경우 버전을 알려줌&lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;형식 : file 파일이름&lt;/p&gt;

            &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ file passwd
  passwd: ascii text
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Thu, 20 Feb 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/devlog/2020/02/20/unix-05/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/devlog/2020/02/20/unix-05/</guid>
        
        <category>unix</category>
        
        
        <category>devlog</category>
        
      </item>
    
  </channel>
</rss>
