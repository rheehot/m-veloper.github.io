<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>m_veloper</title>
    <description></description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 26 Mar 2020 20:32:47 +0900</pubDate>
    <lastBuildDate>Thu, 26 Mar 2020 20:32:47 +0900</lastBuildDate>
    <generator>Jekyll v3.8.6</generator>
    
      <item>
        <title>[JAVA] 자바 날짜 차이구하기</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/java/2020-03-26-tip-java-03.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;자바-날짜-차이구하기&quot;&gt;자바 날짜 차이구하기&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;public void calculateDateBetweenAandB(){

    String dateA = &quot;2019-08-27&quot;;
    String dateB = &quot;2019-09-09&quot;;
 
    // String Type을 Date Type으로 캐스팅하면서 생기는 예외로 인해 여기서 
    예외처리 해주지 않으면 컴파일러에서 에러가 발생해서 컴파일을 할 수 없다.
    
    try{ 
        SimpleDateFormat format = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;);

        // date1, date2 두 날짜를 parse()를 통해 Date형으로 변환.
        Date FirstDate = format.parse(dateA);
        Date SecondDate = format.parse(dateB);
        
        // Date로 변환된 두 날짜를 계산한 뒤 그 리턴값으로 long type 변수를 초기화 하고 있다.
        // 연산결과 -950400000. long type 으로 return 된다.
        long calDate = FirstDate.getTime() - SecondDate.getTime(); 
        
        // Date.getTime() 은 해당날짜를 기준으로1970년 00:00:00 부터 몇 초가 흘렀는지를 반환해준다. 
        // 이제 24*60*60*1000(각 시간값에 따른 차이점) 을 나눠주면 일수가 나온다.
        long calDateDays = calDate / ( 24*60*60*1000); 
 
        calDateDays = Math.abs(calDateDays);//절대값으로 출력
        
        System.out.println(&quot;두 날짜의 날짜 차이: &quot;+calDateDays);
    }
    catch(ParseException e){
            // 예외 처리
    }
    
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Thu, 26 Mar 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/tip/2020/03/26/tip-java-03/</link>
        <guid isPermaLink="true">http://localhost:4000/tip/2020/03/26/tip-java-03/</guid>
        
        <category>java</category>
        
        
        <category>tip</category>
        
      </item>
    
      <item>
        <title>[자바스크립트] 자바스크립트로 문자열 공백 제거하기</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/javascript/2020-03-25-tip-javascript-10.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;자바스크립트로-문자열-공백-제거하기&quot;&gt;자바스크립트로 문자열 공백 제거하기&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;콘솔창에서 확인할 때는 꼭 마우스로 드래그 해서 공백 제거 유무를 눈으로 확인하세요.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  let str = &quot; 바보야, 바 보니? &quot;;
    
  console.log(str);
    
  console.log(str.replace(/(\s*)/g,&quot;&quot;)); // 문자열의 모든 공백 제거
    
  console.log(str.replace(/^\s*/,&quot;&quot;)); // 문자열의 제일 앞에 공백 제거
    
  console.log(str.replace(/\s*$/,&quot;&quot;)); // 문자열의 제일 뒤에 공백 제거
    
  console.log(str.trim());             // 문자열 제일 앞, 제일 뒤 공백 제거 (trim 함수 사용)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 25 Mar 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/tip/2020/03/25/tip-javascript-10/</link>
        <guid isPermaLink="true">http://localhost:4000/tip/2020/03/25/tip-javascript-10/</guid>
        
        <category>javascript</category>
        
        
        <category>tip</category>
        
      </item>
    
      <item>
        <title>[CSS] user agent stylesheet은 무엇일까?</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/css/2020-03-24-tip-css-01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;user-agent-stylesheet&quot;&gt;user agent stylesheet?&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;margin 값을 정해두지 않아 브라우저 임의대로 설정한 것입니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;간혹 css 작업을 하고 결과물을 보는데 생각했던 모습하고 약간 다른 경우가 있습니다.&lt;/p&gt;

&lt;p&gt;제대로 css를 작성한 거 같은데 “개발자 도구”로 살펴보면 이상한 문구와 같이 체크해제가 되지 않습니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/css/2020-03-24-tip-css-01-01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;원래는 각 옵션들을 체크 해제하면서 확인이 가능해야 하는데, “user agent stylesheet” 이란 문구와 함께 css로 설정하지 않은 margin이 들어가 있는 걸 볼 수 있습니다.
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/css/2020-03-24-tip-css-01-02.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;분명 저는 css로 정확히 파란색 사각형 안에 인증번호가 들어가도록 했는데, 결과물은 사뭇 다릅니다.&lt;/p&gt;

&lt;p&gt;위의 이미지와 같이 margin이 들어가 있습니다. 제가 의도한 것도 아닌데 말이죠.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;해결방법&quot;&gt;해결방법&lt;/h1&gt;

&lt;p&gt;간혹 브라우저마다, 혹은 해당 영역이 다르게 보일 수 있습니다.&lt;/p&gt;

&lt;p&gt;저의 경우, 브라우저는 크롬을 사용했지만, 똑같은 메일을 “네이버 메일” 과 “Gmail”에서 열어보면 결과가 다른 걸 확인했었습니다. 네이버는 정상적으로 보였지만 Gmail에서는 위의 그림처럼&lt;/p&gt;

&lt;p&gt;user agent stylesheet 문구와 함께 강제로 margin이 들어가는 현상이 발생했습니다.&lt;/p&gt;

&lt;p&gt;하지만 해결 방법은 의외로 간단합니다.&lt;/p&gt;

&lt;p&gt;작성한 html 태그의 css 작성 코드에 margin이 있는지 없는지 다시 확인해보시기 바랍니다.&lt;/p&gt;

&lt;p&gt;margin이 없는 경우가 대부분일 겁니다. 이때 margin을 입력해 주시면 됩니다.&lt;/p&gt;

&lt;p&gt;내부 스타일 시트(Internal Style Sheet)인 &lt;style&gt;&lt;/style&gt; 안에다가 정의를 하던, Inline Styles로 정의를 하던 margin을 입력해 주면 됩니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Inline Styles로 예를 들어보겠습니다.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &amp;lt;ul class=&quot;slides&quot; style=&quot;margin:0;padding:0&quot;&amp;gt;
    
  &amp;lt;p style='color:#999; font-size: 2rem; font-weight: bold; margin:0; padding:0'&amp;gt;&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Tue, 24 Mar 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/tip/2020/03/24/tip-css-01/</link>
        <guid isPermaLink="true">http://localhost:4000/tip/2020/03/24/tip-css-01/</guid>
        
        <category>css</category>
        
        
        <category>tip</category>
        
      </item>
    
      <item>
        <title>[MySQL/MariaDB] CASE WHEN 사용법</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/mysql/2020-03-23-tip-mysql-05.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;case-when&quot;&gt;CASE WHEN&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;기본 사용법&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  ﻿CASE
      WHEN '조건'
      THEN '대체값'
      WHEN '조건'
      THEN '대체값'
      ELSE 'WHEN 조건에 해당안될경우의 기본값'
  END
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;예:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  ﻿SELECT 
      SUM(
          CASE 
              WHEN test_column = 1 
              THEN test_column + 2 
              ELSE 0 
          END
      ) AS testValue 
  FROM testTable
  WHERE start_no = #{startNo} AND start_dt BETWEEN #{startDt} AND #{endDt}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Mon, 23 Mar 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/tip/2020/03/23/tip-mysql-05/</link>
        <guid isPermaLink="true">http://localhost:4000/tip/2020/03/23/tip-mysql-05/</guid>
        
        <category>mysql</category>
        
        
        <category>tip</category>
        
      </item>
    
      <item>
        <title>[MySQL/MariaDB] 반올림, 자릿수 버리기(ROUND,TRUNCATE)</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/mysql/2020-03-23-tip-mysql-04.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;반올림-자릿수-버리기roundtruncate&quot;&gt;반올림, 자릿수 버리기(ROUND,TRUNCATE)&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;ROUND(숫자,반올림할 자릿수) : 숫자를 반올림할 자릿수 +1 자릿수에서 반올림&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;TRUNCATE(숫자,버릴 자릿수)  : 숫자를 버릴 자릿수 아래로 버림 ※ 반드시 버릴 자릿수를 명시해 주어야 함&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  SELECT ROUND(3456.1234567) FROM DUAL
  // 3456
     
  SELECT ROUND(3456.1234567 ,1) FROM DUAL
  // 3456.1
     
  SELECT ROUND(3456.1234567 ,4) FROM DUAL
  // 3456.1235
     
  SELECT ROUND(3456.1234567 ,-1) FROM DUAL
  // 3460
     
  SELECT ROUND(3456.1234567 ,-2) FROM DUAL
  // 3500
    
    
  SELECT TRUNCATE(3456.1234567 ,1) FROM DUAL;
  // 3456.1
     
  SELECT TRUNCATE(3456.1234567 ,4) FROM DUAL;
  // 3456.1234
     
  SELECT TRUNCATE(3456.1234567 ,-1) FROM DUAL;
  // 3450
     
  SELECT TRUNCATE(3456.1234567 ,-2) FROM DUAL;
  // 3400 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Mon, 23 Mar 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/tip/2020/03/23/tip-mysql-04/</link>
        <guid isPermaLink="true">http://localhost:4000/tip/2020/03/23/tip-mysql-04/</guid>
        
        <category>mysql</category>
        
        
        <category>tip</category>
        
      </item>
    
      <item>
        <title>[MySQL/MariaDB] 최대값 최소값 구하기(MAX, MIN)</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/mysql/2020-03-23-tip-mysql-03.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;최대값-최소값-구하기max-min&quot;&gt;최대값 최소값 구하기(MAX, MIN)&lt;/h1&gt;
&lt;h3 id=&quot;how-to-get-min-and-max-date-in-mysql&quot;&gt;How to get min and max date in MySQL&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;최대값 (MAX) 구하기&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  SELECT MAX (컬럼) FROM 테이블
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;최소값(MIN) 구하기&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  SELECT MIN (컬럼) FROM 테이블
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Mon, 23 Mar 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/tip/2020/03/23/tip-mysql-03/</link>
        <guid isPermaLink="true">http://localhost:4000/tip/2020/03/23/tip-mysql-03/</guid>
        
        <category>mysql</category>
        
        
        <category>tip</category>
        
      </item>
    
      <item>
        <title>[자바스크립트] 제이쿼리(jQuery)로 select box(셀렉트 박스) 값 가져오기</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/javascript/2020-03-23-tip-javascript-09.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;제이쿼리jquery로-select-box셀렉트-박스-값-가져오기&quot;&gt;제이쿼리(jQuery)로 select box(셀렉트 박스) 값 가져오기&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &amp;lt;select id=&quot;myselect&quot; onchange=&quot;selectTest();&quot;&amp;gt;
        &amp;lt;option value=&quot;1&quot;&amp;gt;일번&amp;lt;/option&amp;gt;
        &amp;lt;option value=&quot;2&quot;&amp;gt;이번&amp;lt;/option&amp;gt;
        &amp;lt;option value=&quot;3&quot;&amp;gt;삼번&amp;lt;/option&amp;gt;
        &amp;lt;option value=&quot;4&quot;&amp;gt;사번r&amp;lt;/option&amp;gt;
        &amp;lt;option value=&quot;5&quot;&amp;gt;오번&amp;lt;/option&amp;gt;
    &amp;lt;/select&amp;gt;
    
    &amp;lt;script&amp;gt;
     function selectTest(){
        var testA = $(&quot;#myselect &amp;gt; option:selected&quot;).val(); //선택된 옵션의 value 가져오기
        console.log(testA);
    
        var testB = $( &quot;#myselect option:selected&quot; ).text(); //선택된 옵션의 text 가져오기
        console.log(testB);
     }
    &amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Mon, 23 Mar 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/tip/2020/03/23/tip-javascript-09/</link>
        <guid isPermaLink="true">http://localhost:4000/tip/2020/03/23/tip-javascript-09/</guid>
        
        <category>javascript</category>
        
        
        <category>tip</category>
        
      </item>
    
      <item>
        <title>[Sass/SCSS] 내장 함수(Built-in Functions)</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/sass/2020-03-22-sass-15.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;내장-함수built-in-functions&quot;&gt;내장 함수(Built-in Functions)&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Sass에서 기본적으로 제공하는 내장 함수에는 많은 종류가 있습니다.&lt;/li&gt;
  &lt;li&gt;모두 소개하지 않고, 주관적 경험에 의거해 필요하거나 필요할 수 있는 함수만 정리했습니다.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://sass-lang.com/documentation/modules&quot;&gt;Sass Built-in Functions&lt;/a&gt;에서 모든 내장 함수를 확인할 수 있습니다.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;[]는 선택 가능한 인수(argument)입니다.&lt;/li&gt;
      &lt;li&gt;Zero-based numbering을 사용하지 않습니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;색상rgb--hsl--opacity-함수&quot;&gt;색상(RGB / HSL / Opacity) 함수&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;mix($color1, $color2) : 두 개의 색을 섞습니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;lighten($color, $amount) : 더 밝은색을 만듭니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;darken($color, $amount) : 더 어두운색을 만듭니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;saturate($color, $amount) : 색상의 채도를 올립니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;desaturate($color, $amount) : 색상의 채도를 낮춥니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;grayscale($color) : 색상을 회색으로 변환합니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;invert($color) : 색상을 반전시킵니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;rgba($color, $alpha) : 색상의 투명도를 변경합니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;opacify($color, $amount) / fade-in($color, $amount) : 색상을 더 불투명하게 만듭니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;transparentize($color, $amount) / fade-out($color, $amount) : 색상을 더 투명하게 만듭니다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;문자string-함수&quot;&gt;문자(String) 함수&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;unquote($string) : 문자에서 따옴표를 제거합니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;quote($string) : 문자에 따옴표를 추가합니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;str-insert($string, $insert, $index) : 문자의 index번째에 특정 문자를 삽입합니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;str-index($string, $substring) : 문자에서 특정 문자의 첫 index를 반환합니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;str-slice($string, $start-at, [$end-at]) : 문자에서 특정 문자(몇 번째 글자부터 몇 번째 글자까지)를 추출합니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;to-upper-case($string) : 문자를 대문자를 변환합니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;to-lower-case($string) : 문자를 소문자로 변환합니다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;숫자number-함수&quot;&gt;숫자(Number) 함수&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;percentage($number) : 숫자(단위 무시)를 백분율로 변환합니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;round($number) : 정수로 반올림합니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;ceil($number) : 정수로 올림합니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;floor($number) : 정수로 내림(버림)합니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;abs($number) : 숫자의 절대 값을 반환합니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;min($numbers…) : 숫자 중 최소 값을 찾습니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;max($numbers…) : 숫자 중 최대 값을 찾습니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;random() : 0 부터 1 사이의 난수를 반환합니다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;list-함수&quot;&gt;List 함수&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;모든 List 내장 함수는 기존 List 데이터를 갱신하지 않고 새 List 데이터를 반환합니다.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;모든 List 내장 함수는 Map 데이터에서도 사용할 수 있습니다.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;length($list) : List의 개수를 반환합니다.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;nth($list, $n) : List에서 n번째 값을 반환합니다.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;set-nth($list, $n, $value) : List에서 n번째 값을 다른 값으로 변경합니다.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;join($list1, $list2, [$separator]) : 두 개의 List를 하나로 결합합니다.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;zip($lists…) : 여러 List들을 하나의 다차원 List로 결합합니다.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;index($list, $value) : List에서 특정 값의 index를 반환합니다.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;map-함수&quot;&gt;Map 함수&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;모든 Map 내장 함수는 기존 Map 데이터를 갱신하지 않고 새 Map 데이터를 반환합니다.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;map-get($map, $key) : Map에서 특정 key의 value를 반환합니다.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;map-merge($map1, $map2) : 두 개의 Map을 병합하여 새로운 Map를 만듭니다.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;map-keys($map) : Map에서 모든 key를 List로 반환합니다.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;map-values($map) : Map에서 모든 value를 List로 반환합니다.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;관리introspection-함수&quot;&gt;관리(Introspection) 함수&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;variable-exists(name) : 변수가 현재 범위에 존재하는지 여부를 반환합니다.(인수는 $없이 변수의 이름만 사용합니다.)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;unit($number) : 숫자의 단위를 반환합니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;unitless($number) : 숫자에 단위가 있는지 여부를 반환합니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;comparable($number1, $number2) : 두 개의 숫자가 연산 가능한지 여부를 반환합니다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;참고-자료references&quot;&gt;참고 자료(References)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;http://sass-lang.com/documentation&lt;/li&gt;
  &lt;li&gt;https://sass-guidelin.es/ko/&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    본 포스팅은 HEROPY 님의 영상과 블로그를 보고 공부한 내용을 정리한 것입니다.
    https://heropy.blog/2018/01/31/sass/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Sun, 22 Mar 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/devlog/2020/03/22/sass-15/</link>
        <guid isPermaLink="true">http://localhost:4000/devlog/2020/03/22/sass-15/</guid>
        
        <category>sass</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[Sass/SCSS] 반복문(for,each, while)</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/sass/2020-03-22-sass-14.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;for-함수&quot;&gt;for (함수)&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;@for는 스타일을 반복적으로 출력합니다.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;@for는 through를 사용하는 형식과 to를 사용하는 형식으로 나뉩니다.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  // through
  // 종료 만큼 반복
  @for $변수 from 시작 through 종료 {
    // 반복 내용
  }
    
  // to
  // 종료 직전까지 반복
  @for $변수 from 시작 to 종료 {
    // 반복 내용
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;SCSS:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  // 1부터 3번 반복
  @for $i from 1 through 3 {
    .through:nth-child(#{$i}) {
      width : 20px * $i
    }
  }
    
  // 1부터 3 직전까지만 반복(2번 반복)
  @for $i from 1 to 3 {
    .to:nth-child(#{$i}) {
      width : 20px * $i
    }
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Compiled to:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; .through:nth-child(1) { width: 20px; }
 .through:nth-child(2) { width: 40px; }
 .through:nth-child(3) { width: 60px; }
   
 .to:nth-child(1) { width: 20px; }
 .to:nth-child(2) { width: 40px; }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ul&gt;
      &lt;li&gt;to는 주어진 값 직전까지만 반복해야할 경우 유용할 수 있습니다.&lt;/li&gt;
      &lt;li&gt;그러나 :nth-child()에서 특히 유용하게 사용되는 @for는 일반적으로 through를 사용하길 권장합니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;each&quot;&gt;@each&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;@each는 List와 Map 데이터를 반복할 때 사용합니다.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; @each $변수 in 데이터 {
   // 반복 내용
 }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;SCSS:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; // List Data
 $fruits: (apple, orange, banana, mango);
   
 .fruits {
   @each $fruit in $fruits {
     li.#{$fruit} {
       background: url(&quot;/images/#{$fruit}.png&quot;);
     }
   }
 }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Compiled to:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  .fruits li.apple {
    background: url(&quot;/images/apple.png&quot;);
  }
  .fruits li.orange {
    background: url(&quot;/images/orange.png&quot;);
  }
  .fruits li.banana {
    background: url(&quot;/images/banana.png&quot;);
  }
  .fruits li.mango {
    background: url(&quot;/images/mango.png&quot;);
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;조건에는 논리 연산자 and, or, not을 사용할 수 있습니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;SCSS:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; $fruits: (apple, orange, banana, mango);
   
 .fruits {
   @each $fruit in $fruits {
     $i: index($fruits, $fruit);
     li:nth-child(#{$i}) {
       left: 50px * $i;
     }
   }
 }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Compiled to:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; .fruits li:nth-child(1) {
   left: 50px;
 }
 .fruits li:nth-child(2) {
   left: 100px;
 }
 .fruits li:nth-child(3) {
   left: 150px;
 }
 .fruits li:nth-child(4) {
   left: 200px;
 }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;동시에 여러 개의 List 데이터를 반복 처리할 수도 있습니다.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;단, 각 데이터의 Length가 같아야 합니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;SCSS:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $apple: (apple, korea);
  $orange: (orange, china);
  $banana: (banana, japan);
    
  @each $fruit, $country in $apple, $orange, $banana {
    .box-#{$fruit} {
      background: url(&quot;/images/#{$country}.png&quot;);
    }
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Compiled to:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  .box-apple {
    background: url(&quot;/images/korea.png&quot;);
  }
  .box-orange {
    background: url(&quot;/images/china.png&quot;);
  }
  .box-banana {
    background: url(&quot;/images/japan.png&quot;);
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Map 데이터를 반복할 경우 하나의 데이터에 두 개의 변수가 필요합니다.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  @each $key변수, $value변수 in 데이터 {
    // 반복 내용
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;SCSS:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $fruits-data: (
    apple: korea,
    orange: china,
    banana: japan
  );
    
  @each $fruit, $country in $fruits-data {
    .box-#{$fruit} {
      background: url(&quot;/images/#{$country}.png&quot;);
    }
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Compiled to:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  .box-apple {
    background: url(&quot;/images/korea.png&quot;);
  }
  .box-orange {
    background: url(&quot;/images/china.png&quot;);
  }
  .box-banana {
    background: url(&quot;/images/japan.png&quot;);
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;while&quot;&gt;@while&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;@while은 조건이 false로 평가될 때까지 내용을 반복합니다.&lt;/li&gt;
  &lt;li&gt;잘못된 조건으로 인해 컴파일 중 무한 루프에 빠질 수 있습니다.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;사용을 권장하지 않습니다.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  @while 조건 {
    // 반복 내용
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;SCSS:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $i: 6;
    
  @while $i &amp;gt; 0 {
    .item-#{$i} {
      width: 2px * $i;
    }
    $i: $i - 2;
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Compiled to:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; .item-6 { width: 12px; }
 .item-4 { width: 8px; }
 .item-2 { width: 4px; }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    본 포스팅은 HEROPY 님의 영상과 블로그를 보고 공부한 내용을 정리한 것입니다.
    https://heropy.blog/2018/01/31/sass/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Sun, 22 Mar 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/devlog/2020/03/22/sass-14/</link>
        <guid isPermaLink="true">http://localhost:4000/devlog/2020/03/22/sass-14/</guid>
        
        <category>sass</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[자바스크립트] 제이쿼리(jQuery)로 select box 값 고정하기/ 변경하기</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/javascript/2020-03-21-tip-javascript-08.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;제이쿼리jquery로-select-box-값-고정하기-변경하기&quot;&gt;제이쿼리(jQuery)로 select box 값 고정하기/ 변경하기&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    // value값으로 설정
    $(&quot;#select_id&quot;).val(&quot;1&quot;).prop(&quot;selected&quot;, true);

    // optipn의 순서값으로 설정
    $(&quot;#select_id option:eq(0)&quot;).prop(&quot;selected&quot;, true);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Sat, 21 Mar 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/tip/2020/03/21/tip-javascript-08/</link>
        <guid isPermaLink="true">http://localhost:4000/tip/2020/03/21/tip-javascript-08/</guid>
        
        <category>javascript</category>
        
        
        <category>tip</category>
        
      </item>
    
      <item>
        <title>[유닉스] 포그라운드(foreground), 백그라운드(background)</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-20-unix-21.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;포그라운드foreground-백그라운드background&quot;&gt;포그라운드(foreground), 백그라운드(background)&lt;/h1&gt;

&lt;h3 id=&quot;포그라운드와-백그라운드-작업의-이해&quot;&gt;포그라운드와 백그라운드 작업의 이해&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;쉘은 프로세스를 작업(job) 단위로 관리&lt;/li&gt;
  &lt;li&gt;유닉스는 동시에 여러 작업을 할 수 있는 다중 작업(Multitasking) 운영체제&lt;/li&gt;
  &lt;li&gt;포그라운드(foreground, 전위) 처리와 백그라운드(background, 후위) 처리 방식으로 동작&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;포그라운드-처리&quot;&gt;포그라운드 처리&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;사용자가 입력한 명령이 실행되어 결과가 출력될 때까지 프롬프트가 출력되지 않아 다른 명령을 입력할 수 없어 기다려야 하는 경우&lt;/li&gt;
  &lt;li&gt;사용자가 명령을 입력하면 쉘이 명령을 해석하여 실행한 결과를 화면에 출력&lt;/li&gt;
  &lt;li&gt;사용자는 화면에 출력된 결과를 보고 다시 명령을 입력하여 대화식 작업을 함&lt;/li&gt;
  &lt;li&gt;포그라운드 프로세스 : 포그라운드 처리로 실행되고 있는 프로세스, 포그라운드 작업&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;포그라운드 처리의 예&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ find / -name passwd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ul&gt;
      &lt;li&gt;find 명령이 끝날 때까지 기다려야 함&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;백그라운드-처리&quot;&gt;백그라운드 처리&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;포그라운드 처리 방식은 한 번에 하나의 명령만 실행시키므로 여러 프로세스를 동시에 실행시킬 수 없음&lt;/li&gt;
  &lt;li&gt;백그라운드 처리 방식은 여러 프로세스를 동시에 실행시킬 수 있음&lt;/li&gt;
  &lt;li&gt;명령의 처리가 끝나는 것과 관계없이 곧바로 프롬프트가 출력되어 사용자가 다른 작업을 계속할 수 있음&lt;/li&gt;
  &lt;li&gt;백그라운드 프로세스 : 백그라운드 방식으로 처리되는 프로세스, 백그라운드 작업&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;명령을 백그라운드로 실행하려면 명령의 마지막에 ＆(앰퍼샌드) 기호를 추가&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ find / -name text ＆
  [1] 6715
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;백그라운드 프로세스는 실행 결과와 오류 메시지를 화면에 그대로 출력&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;다른 작업할 때 방해받을 수 있으므로 출력 방향 전환하여 실행 결과를 파일로 저장&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ find / -name passwd &amp;gt; pw.dat ＆
  [2] 6725
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;오류 메시지를 출력 방향 전환하여 파일로 저장&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ find / -name passwd &amp;gt; pw.dat 2&amp;gt; pw.err ＆
  [3] 6726
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;다른 작업을 하는 도중 백그라운드 작업이 종료되면 Enter 키를 입력했을 때 백그라운드 작업 종료 메시지가 출력됨&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;포그라운드와-백그라운드-작업-제어&quot;&gt;포그라운드와 백그라운드 작업 제어&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;작업 제어 : 작업 전환, 실행 중지, 작업 종료&lt;/li&gt;
  &lt;li&gt;작업 전환 : 포그라운드 작업을 백그라운드 작업으로 전환, 백그라운드 작업을 포그라운드 작업으로 전환&lt;/li&gt;
  &lt;li&gt;실행 중지 : 작업을 잠시 중단시키는 것&lt;/li&gt;
  &lt;li&gt;작업 종료 : 프로세스 종료처럼 작업을 종료시키는 것&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;작업-목록-보기&quot;&gt;작업 목록 보기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;jobs 명령
    &lt;ul&gt;
      &lt;li&gt;백그라운드 작업을 모두 보여줌. 특정 작업 번호 지정하면 해당 작업의 정보만 보여줌&lt;/li&gt;
      &lt;li&gt;형식 : jobs [%작업]&lt;/li&gt;
      &lt;li&gt;%작업
        &lt;ul&gt;
          &lt;li&gt;%번호 : 해당 번호의 작업 정보 출력&lt;/li&gt;
          &lt;li&gt;%+ 또는 %% : 작업 순서가 +인 작업 정보 출력&lt;/li&gt;
          &lt;li&gt;%- : 작업 순서가 –인 작업 정보 출력&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;사용 예 : jobs %1, jobs&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ sleep 100＆
  [1] 6751
  $ sleep 200＆
  [2] 6752
  $ jobs
  [1]- Running sleep 100 ＆
  [2]+ Running sleep 200 ＆
  $ jobs %1
  [1]- Running sleep 100 ＆
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-20-unix-21-01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;작업-전환하기&quot;&gt;작업 전환하기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;fg 명령&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;백그라운드 프로세스를 포그라운드 프로세스로 전환&lt;/li&gt;
      &lt;li&gt;사용법 : fg [%작업번호]&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;백그라운드로 수행 중인 작업이 여러 개인 경우 가장 최근에 수행한 작업(보통 + 기호가 붙어 있는 작업)을 포그라운드로 전환&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ jobs
  [3]+ Running sleep 150 ＆
  $ fg
  sleep 150
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;bg 명령&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;포그라운드 프로세스를 백그라운드 프로세스로 전환&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ sleep 150
  ^Z
  [3]+ Stopped sleep 150
  $ bg
  [3]+ sleep 150 ＆
  $ jobs
  [2]- Running sleep 200 ＆
  [3]+ Running sleep 150 ＆
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;작업-종료시키기&quot;&gt;작업 종료시키기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;포그라운드 작업은 Ctrl+C를 입력하면 종료됨
    &lt;ul&gt;
      &lt;li&gt;Ctrl+C는 인터럽트 시그널을 포그라운드 프로세스에 전달&lt;/li&gt;
      &lt;li&gt;프로세스는 인터럽트를 받으면 기본적으로 종료&lt;/li&gt;
      &lt;li&gt;종료시키고자 하는 프로세스의 PID를 다른 터미널에서 찾아 강제로 종료시키는 방법도 있음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;백그라운드 작업은 kill 명령으로 종료&lt;/li&gt;
  &lt;li&gt;kill 명령의 인자로 PID 대신 ‘%작업 번호’도 가능&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;로그아웃-후에도-백그라운드-작업-계속-실행하기&quot;&gt;로그아웃 후에도 백그라운드 작업 계속 실행하기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;nohup 명령&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;로그아웃 후에도 백그라운드 작업을 계속 실행시킴&lt;/li&gt;
      &lt;li&gt;실행 중인 프로세스의 표준 출력과 표준 에러는 ‘nohup.out’이라는 파일을 생성하여 기록,&lt;/li&gt;
      &lt;li&gt;nohup 명령행 뒤에 ‘＆’를 명시해야 함&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;형식 : nohup 명령＆&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ nohup find / -name passwd ＆
  [1] 7050
  $ nohup: ignoring input and appending output to ‘nohup.out’
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;사용자-전환하기&quot;&gt;사용자 전환하기&lt;/h1&gt;

&lt;h3 id=&quot;로그인한-모든-사용자-정보-보기&quot;&gt;로그인한 모든 사용자 정보 보기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;users 명령&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;현재 시스템에 로그인하고 있는 사용자명 출력&lt;/li&gt;
      &lt;li&gt;명령의 결과를 한 행으로 출력&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;형식 : users&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ users
  ksshin ksshin
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;who 명령&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;시스템을 사용하고 있는 사용자의 자세한 정보 출력&lt;/li&gt;
      &lt;li&gt;사용자명, 사용자가 접속한 단말기 번호, 사용자가 로그인한 시간, 외부 컴퓨터 이름이나 IP 주소 등&lt;/li&gt;
      &lt;li&gt;형식 : who [옵션]&lt;/li&gt;
      &lt;li&gt;옵션
        &lt;ul&gt;
          &lt;li&gt;-q : 사용자명만 출력&lt;/li&gt;
          &lt;li&gt;-H : 출력 항목의 제목도 함께 출력&lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;-b : 마지막으로 재부팅한 날짜와 시간 출력&lt;/p&gt;

            &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ who
  ksshin tty1 2015-06-10 14:42
  ksshin :0 2015-06-10 14:38 (:0)
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;w 명령&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;로그인한 사용자 정보와 현재 작업의 정보 출력&lt;/li&gt;
      &lt;li&gt;사용자 정보 외에 시스템 정보도 출력&lt;/li&gt;
      &lt;li&gt;시스템 정보 : 현재 시간, 시스템이 부팅된 후 현재까지 경과된 기간, 로그인하고 있는 사용자 수, 실행 대기 중인 작업의 수&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;사용자 정보 : 사용자명, 단말기 번호, 로그인한 시간, 휴지(idle) 시간, JCPU, PCPU, 실행하고 있는 명령&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;휴지 시간 : 마지막 명령 실행 후부터 현재까지 작업하지 않고 있는 시간&lt;/li&gt;
          &lt;li&gt;JCPU : 로그인한 후 실행했던 전체 프로세스에서 사용한 CPU 시간&lt;/li&gt;
          &lt;li&gt;PCPU : 현재 실행 중인 프로세스가 사용한 CPU 시간&lt;/li&gt;
          &lt;li&gt;what : 현재 실행 중인 명령&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;형식 : w [사용자명]&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ w
  17:05:24 up 1 day, 15:41, 2 users, load average: 0.22, 0.16, 0.15
  USER TTY FROM LOGIN@ IDLE JCPU PCPU WHAT
  ksshin tty1 10 6월 15 4.00s 11.93s 0.09s w
  ksshin :0 :0 10 6월 15 ?xdm? 4:40m 5.36s init --user
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;자신의-정보-보기&quot;&gt;자신의 정보 보기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;who am i 명령&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;로그인 정보 출력&lt;/li&gt;
      &lt;li&gt;who 명령에 인자로 am i를 지정한 것&lt;/li&gt;
      &lt;li&gt;who 명령의 결과 중 자신에 대한 정보만 출력&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;whoami보다 상세한 사용자 정보 확인할 때 사용&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ who am i
  ksshin tty1 2015-06-10 14:42
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;whoami 명령&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;자신의 로그인 사용자명 출력&lt;/li&gt;
      &lt;li&gt;가상콘솔을 사용하거나 여러 계정으로 동시에 로그인하고 있는 경우 현재 시스템을 사용하고 있는 사용자를확인할 때&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;형식 : whoami&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ whoami
  ksshin
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;id 명령&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;현재 사용자의 로그인 ID와 그룹 정보 출력&lt;/li&gt;
      &lt;li&gt;사용자명, uid(사용자를 구분하는 번호), gid(그룹을 구분하는 번호) 정보 출력&lt;/li&gt;
      &lt;li&gt;형식 : id [옵션]&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;옵션 : -a : 모든 그룹 정보 출력&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ id
  uid=1001(user1) gid=1001(user1) groups=1001(user1)
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;사용자-전환하기-1&quot;&gt;사용자 전환하기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;su 명령&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;다른 사용자로 전환&lt;/li&gt;
      &lt;li&gt;전환하려는 사용자의 비밀번호를 알고 있어야 함&lt;/li&gt;
      &lt;li&gt;형식 : su [-] [사용자명]&lt;/li&gt;
      &lt;li&gt;사용 예 : su, su – user1&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;다시 돌아가려면 exit 명령 사용&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ su user1
  Password:
  $ whoami
  user1
  $ pwd
  /home/ksshin
  $ exit
  $ whoami
  ksshin
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;

        &lt;ul&gt;
          &lt;li&gt;사용자가 ksshin에서 user1으로 전환하였지만 현재 디렉토리는 /home/ksshin&lt;/li&gt;
          &lt;li&gt;su 명령만 사용하면, 사용자는 전환되지만 디렉토리는 변하지 않음&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;‘-’ 옵션을 사용하면 사용자의 초기화 파일을 실행시켜 작업 디렉토리도 변경&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ su - user1
  Password:
  $ pwd
  /home/user1
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;su 명령을 사용자 이름 지정 없이 사용하여 root로 전환&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ su
  Password:
  # whoami
  root
  #
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Fri, 20 Mar 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/devlog/2020/03/20/unix-21/</link>
        <guid isPermaLink="true">http://localhost:4000/devlog/2020/03/20/unix-21/</guid>
        
        <category>unix</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[유닉스] 프로세스 관리 명령</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-20-unix-20.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;프로세스-목록-보기&quot;&gt;프로세스 목록 보기&lt;/h1&gt;

&lt;h3 id=&quot;ps-명령&quot;&gt;ps 명령&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;현재 실행 중인 프로세스의 정보를 출력&lt;/li&gt;
  &lt;li&gt;형식 : ps [옵션]&lt;/li&gt;
  &lt;li&gt;옵션
    &lt;ul&gt;
      &lt;li&gt;-e : 시스템에서 실행 중인 모든 프로세스 정보 출력&lt;/li&gt;
      &lt;li&gt;-f : 프로세스에 대한 자세한 정보 출력&lt;/li&gt;
      &lt;li&gt;-u uid : 특정 사용자에 대한 모든 프로세스 출력&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;사용 예 : ps, ps –ef, ps aux&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-20-unix-20-01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;현재-단말기의-프로세스-목록-출력&quot;&gt;현재 단말기의 프로세스 목록 출력&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;ps 명령을 옵션 없이 사용하면 현재 쉘이나 단말기 창에서 실행시킨 사용자 프로세스의 정보 출력&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ ps
  PID TTY TIME CMD
  2570 tty1 00:00:12 bash
  6710 tty1 00:00:00 ps
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;프로세스의-상세-정보-출력&quot;&gt;프로세스의 상세 정보 출력&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;-f 옵션은 프로세스의 상세 정보 출력&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ ps –f
  UID PID PPID C STIME TTY TIME CMD
  ksshin 2570 1189 0 6월 16 tty1 00:00:12 -bash
  ksshin 7174 2570 0 17:42 tty1 00:00:00 ps -f
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-20-unix-20-02.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;h3 id=&quot;전체-프로세스-목록-출력-system-v-계열&quot;&gt;전체 프로세스 목록 출력 (System V 계열)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;-e 옵션은 시스템에서 실행 중인 모든 프로세스 출력&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;TTY 값이 ‘?’인 것은 특정 터미널에서 실행되지 않은 프로세스로, 대부분 데몬&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ ps –e
  PID TTY TIME CMD
  1 ? 00:00:09 init
  2 ? 00:00:00 kthreadd
  3 ? 00:00:26 ksoftirqd/0
  5 ? 00:00:00 kworker/0:0H
  7 ? 00:00:24 rcu_sched
  ......
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;전체 프로세스의 상세 정보 확인은 –e 옵션과 –f 옵션을 함께 사용&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ ps –ef
  UID PID PPID C STIME TTY TIME CMD
  root 1 0 0 6월 16 ? 00:00:09 /sbin/init
  root 2 0 0 6월 16 ? 00:00:00 [kthreadd]
  root 3 2 0 6월 16 ? 00:00:26 [ksoftirqd/0]
  root 5 2 0 6월 16 ? 00:00:00 [kworker/0:0H]
  root 7 2 0 6월 16 ? 00:00:24 [rcu_sched]
  ......
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;전체-프로세스-목록-출력-bsd-계열&quot;&gt;전체 프로세스 목록 출력 (BSD 계열)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;ps aux 명령&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ ps aux | more
  UID PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND
  root 1 0.0 0.3 4572 1804 ? Ss 6월 25 0:14 /sbin/init
  root 2 0.0 0.0 0 0 ? S 6월 25 0:00 [kthread]
  root 3 0.0 0.0 0 0 ? S 6월 25 0:46 [ksoftirqd/0]
  root 5 0.0 0.0 0 0 ? S&amp;lt; 6월 25 0:00 [kworker/0:0H]
  root 7 0.0 0.0 0 0 ? S 6월 25 0:43 [rcu_sched]
  ......
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-20-unix-20-03.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;특정-사용자의-프로세스-목록-출력&quot;&gt;특정 사용자의 프로세스 목록 출력&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;-u 옵션은 특정 사용자가 실행시킨 프로세스의 목록 확인&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ ps –u ksshin
  PID TTY TIME CMD
  1693 ? 00:00:05 gnome-keyring-d
  1695 ? 00:00:05 init
  1767 ? 00:00:00 ssh-agent
  1772 ? 00:00:47 dbus-daemon
  1780 ? 00:00:00 upstart-event-b
  ......
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;특정-프로세스-정보-검색-명령&quot;&gt;특정 프로세스 정보 검색 명령&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;ps 명령 이용&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ ps –ef | grep bash
  ksshin 2570 1189 0 6월 16 tty1 00:00:12 –bash
  ksshin 7205 2570 0 18:01 tty1 00:00:00 grep--color=auto bash
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;pgrep 명령 이용&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;지정한 패턴과 일치하는 프로세스의 정보를 출력&lt;/li&gt;
      &lt;li&gt;형식 : pgrep [옵션] [패턴]&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;사용 예 : pgrep bash, pgrep –l –u ksshin&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ pgrep –l bash
  2570 bash
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-20-unix-20-04.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;프로세스의-종료&quot;&gt;프로세스의 종료&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;응답 없는 프로세스나 불필요한 프로세스를 강제로 종료시키려면 해당 프로세스의 PID를 알아야 함&lt;/li&gt;
  &lt;li&gt;ps –ef 명령으로 프로세스의 PID와 PPID 확인 가능&lt;/li&gt;
  &lt;li&gt;PPID로 부모 프로세스를 종료시켜야 할 때도 있음&lt;/li&gt;
  &lt;li&gt;프로세스 종료시키는 명령 : kill, pkill&lt;/li&gt;
  &lt;li&gt;프로세스에 시그널을 보내 프로세스가 종료되게 함&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;kill-명령-이용해-프로세스-종료&quot;&gt;kill 명령 이용해 프로세스 종료&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;kill 명령
    &lt;ul&gt;
      &lt;li&gt;지정한 시그널을 프로세스에 보냄&lt;/li&gt;
      &lt;li&gt;9번(SIGKILL)은 강제 종료, 15번(SIGTERM)은 프로세스 종료, 2번(SIGINT)은 인터럽트&lt;/li&gt;
      &lt;li&gt;시그널을 지정하지 않으면 15번(SIGTERM) 시그널을 보냄&lt;/li&gt;
      &lt;li&gt;형식 : kill [시그널] PID …&lt;/li&gt;
      &lt;li&gt;시그널
        &lt;ul&gt;
          &lt;li&gt;-9 : 프로세스 강제 종료&lt;/li&gt;
          &lt;li&gt;-15 : 프로세스 종료. 프로세스가 관련 파일을 정리 후 종료. 종료되지 않는 프로세스가 있을 수 있음&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;pkill-명령-이용해-프로세스-종료&quot;&gt;pkill 명령 이용해 프로세스 종료&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;프로세스 번호 대신 프로세스의 명령 이름(CMD)으로 프로세스를 찾아 종료시킴&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ sleep 100&amp;amp;
  [1] 7386
  $ sleep 200&amp;amp;
  [2] 7387
  $ ps –f
  UID PID PPID C STIME TTY TIME CMD
  ksshin 2570 1189 0 6월 16 tty1 00:00:12 -bash
  ksshin 7386 2570 0 17:42 tty1 00:00:00 sleep 100
  ksshin 7387 2570 0 17:42 tty1 00:00:00 sleep 200
  ksshin 7174 2570 0 17:42 tty1 00:00:00 ps -f
  $
    
    
    
  $ pkill sleep
  [1]- Terminated sleep 100
  [2]+ Terminated sleep 200
  $ ps –f
  UID PID PPID C STIME TTY TIME CMD
  ksshin 2570 1189 0 6월 16 tty1 00:00:12 -bash
  ksshin 7393 2570 0 17:42 tty1 00:00:00 ps -f
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;프로세스-관리-도구&quot;&gt;프로세스 관리 도구&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;ps 명령으로는 현재 프로세스 목록을 확인만 할 수 있음&lt;/li&gt;
  &lt;li&gt;이 정보를 가공하여 사용자가 보기 편하게 다양한 기능을 제공하는 도구&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;pstree-명령&quot;&gt;pstree 명령&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;프로세스의 상태를 트리(Tree) 구조로 출력해 주는 명령&lt;/li&gt;
  &lt;li&gt;왼쪽이 부모 프로세스, 오른쪽이 자식 프로세스&lt;/li&gt;
  &lt;li&gt;형식 : pstree [옵션]&lt;/li&gt;
  &lt;li&gt;사용 예 : pstree -h&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-20-unix-20-05.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;top-명령&quot;&gt;top 명령&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;주기적으로 현재 실행 중인 프로세스에 대한 정보 출력&lt;/li&gt;
  &lt;li&gt;자세한 요약 정보를 상단에 출력, 각 프로세스 정보를 하단에 출력&lt;/li&gt;
  &lt;li&gt;형식 : top [옵션]&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-20-unix-20-06.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 20 Mar 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/devlog/2020/03/20/unix-20/</link>
        <guid isPermaLink="true">http://localhost:4000/devlog/2020/03/20/unix-20/</guid>
        
        <category>unix</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[유닉스] 프로세스의 개념과 종류</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-20-unix-19.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;데몬-프로세스&quot;&gt;데몬 프로세스&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;프로세스process란&quot;&gt;프로세스(process)란&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;현재 실행 중인 프로그램&lt;/li&gt;
  &lt;li&gt;프로그램 : 어떤 문제를 해결하기 위해 사용되는 명령어나 유틸리티의 집합&lt;/li&gt;
  &lt;li&gt;프로그램을 실행하면 메모리(RAM, 주기억장치)에 상주. 이 때의 프로그램을 프로세스라고 함&lt;/li&gt;
  &lt;li&gt;시스템 운영에 필요한 기능을 수행하는 시스템 프로세스, 사용자들이 실행시킨 사용자 프로세스&lt;/li&gt;
  &lt;li&gt;사용자의 입력에 관계없이 실행되는 백그라운드(Background) 프로세스, 명령 입력 후 수행종료까지 기다려야 하는
포그라운드(Foreground) 프로세스&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;멀티태스킹multitasking과-작업-전환&quot;&gt;멀티태스킹(Multitasking)과 작업 전환&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;멀티태스킹이란 동시에 하나 이상의 프로그램을 실행하는 것&lt;/li&gt;
  &lt;li&gt;사용자 기준에서는, 다수의 프로그램들을 백그라운드 프로세스로 실행시킨 상태에서 추가로 포그라운드 프로세스로 다른 작업 수행 가능&lt;/li&gt;
  &lt;li&gt;사용자가 실행한 프로세스는 중간에 중지시킬 수 있음&lt;/li&gt;
  &lt;li&gt;백그라운드 프로세스를 포그라운드 프로세스로 전환하거나, 포그라운드 프로세스를 백그라운드 프로세스로 전환 가능&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;부모-프로세스와-자식-프로세스&quot;&gt;부모 프로세스와 자식 프로세스&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;프로세스는 부모-자식 관계가 있음&lt;/li&gt;
  &lt;li&gt;부모 프로세스가 자식 프로세스를 생성, 자식 프로세스는 다른 자식 프로세스를 생성&lt;/li&gt;
  &lt;li&gt;사용자가 실행시키는 명령도 프로세스로 실행됨.&lt;/li&gt;
  &lt;li&gt;사용자 명령은 쉘의 자식 프로세스가 됨&lt;/li&gt;
  &lt;li&gt;프로세스들은 각기 고유한 번호 PID(Process Identification Number)를 가짐&lt;/li&gt;
  &lt;li&gt;부모 프로세스는 고유 번호 PPID (Parent Process Identification Number)를 가짐&lt;/li&gt;
  &lt;li&gt;유닉스 부팅할 때 모든 프로세스의 조상인, PID가 1번인 init 프로세스 실행&lt;/li&gt;
  &lt;li&gt;1번 프로세스가 fork 방식으로 다른 프로세스들 생성&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;프로세스의-생성&quot;&gt;프로세스의 생성&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;하나의 프로세스가 다른 프로세스를 실행하기 위한 시스템 호출 방법 : fork, exec&lt;/li&gt;
  &lt;li&gt;fork
    &lt;ul&gt;
      &lt;li&gt;새로운 프로세스를 위해 메모리를 할당받아 복사본 형태의 프로세스를 실행하는 형태&lt;/li&gt;
      &lt;li&gt;기존의 프로세스는 그대로 실행&lt;/li&gt;
      &lt;li&gt;새롭게 생성된 프로세스는 원래의 프로세스와 똑같은 코드를 기반으로 실행&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;exec
    &lt;ul&gt;
      &lt;li&gt;원래의 프로세스를 새로운 프로세스로 대체하는 형태&lt;/li&gt;
      &lt;li&gt;호출한 프로세스의 메모리에 새로운 프로세스의 코드를 덮어씌워 버림&lt;/li&gt;
      &lt;li&gt;호출된 프로세스만 메모리에 남김&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;프로세스-초기화&quot;&gt;프로세스 초기화&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;프로그램을 사용하여 어떤 작업을 하기 위해서는 프로그램과 데이터가 메모리에 적재되어 있어야 함&lt;/li&gt;
  &lt;li&gt;프로그램과 데이터가 메모리에 적재되어 CPU의 연산 과정을 통해 실행될 수 있는 것을 프로세스라 함&lt;/li&gt;
  &lt;li&gt;메모리의 각 프로세스들은 모두 init 프로세스로부터 상속을 받아 생성됨&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;init-프로세스&quot;&gt;init 프로세스&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;init 프로세스는 PID가 1번인 프로세스임&lt;/li&gt;
  &lt;li&gt;부팅 과정에서 커널이 PID 0번인 swapper 프로세스를 생성하고, swapper 프로세스가 init 프로세스를 생성&lt;/li&gt;
  &lt;li&gt;init 프로세스는 /etc/inittab 파일을 읽어들여 실행됨&lt;/li&gt;
  &lt;li&gt;init 프로세스가 사용자 환경에 필요한 스크립트를 실행시켜 사용자 환경이 구축되고 나면, 로그인 화면이 사용자에게나타남&lt;/li&gt;
  &lt;li&gt;init 프로세스가 하는 일
    &lt;ul&gt;
      &lt;li&gt;파일 시스템의 구조 검사&lt;/li&gt;
      &lt;li&gt;파일 시스템 마운트&lt;/li&gt;
      &lt;li&gt;서버 데몬을 띄움&lt;/li&gt;
      &lt;li&gt;사용자 로그인을 기다림&lt;/li&gt;
      &lt;li&gt;사용자가 로그인하면 사용자를 위한 쉘을 띄움&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;시그널signal&quot;&gt;시그널(Signal)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;‘신호’라는 의미, 프로세스끼리 서로 통신할 때 사용&lt;/li&gt;
  &lt;li&gt;특정 프로세스가 다른 프로세스에게 메시지 보낼 때 시그널 이용&lt;/li&gt;
  &lt;li&gt;사용자가 인터럽트 키를 통해 발생하는 시그널, 프로세스가 발생하는 시그널, 하드웨어가 발생하는 시그널&lt;/li&gt;
  &lt;li&gt;시그널 목록은 ‘kill –l’ 명령으로 확인&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-20-unix-19-01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;데몬daemon&quot;&gt;데몬(daemon)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;주기적이고 지속적으로 서비스 요청을 처리하기 위해 계속 실행되는 프로세스&lt;/li&gt;
  &lt;li&gt;백그라운드로 실행&lt;/li&gt;
  &lt;li&gt;서버 역할을 하는 프로그램들이 해당되고 보통 이름 뒤에 데몬을 뜻하는 d를 붙임&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;데몬-프로세스-실행-방식&quot;&gt;데몬 프로세스 실행 방식&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;standalone 방식
    &lt;ul&gt;
      &lt;li&gt;부팅 시 실행되어 메모리에 계속 상주하면서 클라이언트의 서비스 요청을 처리하는 방식&lt;/li&gt;
      &lt;li&gt;웹, 메일 등 빈번한 요청이 들어오는 서비스&lt;/li&gt;
      &lt;li&gt;프로세스의 상태를 확인하는 ps 명령으로 확인해보면 항상 동작 중임&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;inet 방식
    &lt;ul&gt;
      &lt;li&gt;클라이언트의 서비스 요청이 들어왔을 때 관련 프로세스를 실행시키고 접속 종료 후 자동으로 프로세스 종료시키는 방식&lt;/li&gt;
      &lt;li&gt;자주 사용하지 않는 서비스들에 대한 효율적인 메모리 관리에 유용함&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;프로세스의-종류&quot;&gt;프로세스의 종류&lt;/h1&gt;

&lt;h3 id=&quot;데몬-프로세스-daemon-process&quot;&gt;데몬 프로세스 (daemon process)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;커널에 의해 실행되고 특정 서비스를 제공하기 위해 존재&lt;/li&gt;
  &lt;li&gt;웹 서비스를 제공하기 위해서는 httpd 프로세스가 동작하고 있어야 함&lt;/li&gt;
  &lt;li&gt;httpd를 웹 서버 데몬이라 함&lt;/li&gt;
  &lt;li&gt;평소 대기 상태로 서비스 요청을 기다리다가 서비스 요청이 들어오면 해당 서비스 제공&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;부모-프로세스-parent-process&quot;&gt;부모 프로세스 (parent process)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;다른 프로세스를 만드는 프로세스&lt;/li&gt;
  &lt;li&gt;부팅할 때 실행되는 1번 프로세스를 제외한 모든 프로세스는 부모 프로세스를 가지고 있음&lt;/li&gt;
  &lt;li&gt;PPID(Parent Process ID)를 가짐&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;자식-프로세스-child-process&quot;&gt;자식 프로세스 (child process)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;부모 프로세스에 의해 만들어지는 프로세스&lt;/li&gt;
  &lt;li&gt;할 일이 끝나면 부모 프로세스에게 결과를 돌려주고 종료&lt;/li&gt;
  &lt;li&gt;vi를 실행시키면 쉘이 vi 프로세스 생성&lt;/li&gt;
  &lt;li&gt;쉘이 부모 프로세스, vi가 자식 프로세스&lt;/li&gt;
  &lt;li&gt;사용자가 vi 종료하면 다시 부모 프로세스인 쉘로 돌아감&lt;/li&gt;
  &lt;li&gt;PID(Process ID)를 가짐&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;고아-프로세스-orphan-process&quot;&gt;고아 프로세스 (orphan process)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;자식 프로세스가 아직 실행 중인데 부모 프로세스가 먼저 종료되면 자식 프로세스는 고아 프로세스가 됨&lt;/li&gt;
  &lt;li&gt;1번 프로세스가 새로운 부모 프로세스가 되어 고아 프로세스가 작업을 마치고 종료할 수 있도록 함&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;좀비-프로세스-zombie-process&quot;&gt;좀비 프로세스 (zombie process)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;자식 프로세스가 실행 종료 후에도 프로세스 테이블 목록에 남아있는 경우
    &lt;ul&gt;
      &lt;li&gt;일반적으로, 자식 프로세스가 종료할 때 부모 프로세스에게 종료 정보(exit status) 보내고, 부모 프로세스가 이 정보 받으면 프로세스 테이블 목록에서 자식 프로세스 삭제됨&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;부모 프로세스가 자식 프로세스의 종료 정보를 읽어가기를 기다림&lt;/li&gt;
  &lt;li&gt;프로세스 목록에 defunct 프로세스라고 나오기도 함&lt;/li&gt;
  &lt;li&gt;실제로 실행되고 있지 않지만 동작 중인 프로세스 테이블 목록을 차지&lt;/li&gt;
  &lt;li&gt;부모 프로세스에게 SIGCHILD 시그널을 보내서 부모 프로세스가 자식 프로세스를 정리하게 하거나, 부모 프로세스 자체를 종료시킴&lt;/li&gt;
  &lt;li&gt;부모 프로세스가 종료되면 좀비 프로세스는 고아 프로세스가 됨&lt;/li&gt;
  &lt;li&gt;새로운 부모인 init 프로세스가 자식 프로세스의 종료 정보를 주기적으로 확인, 정리&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 20 Mar 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/devlog/2020/03/20/unix-19/</link>
        <guid isPermaLink="true">http://localhost:4000/devlog/2020/03/20/unix-19/</guid>
        
        <category>unix</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[Database] MySQL 뷰(View)</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020/03/2020-03-20-database-22.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;mysql-뷰view&quot;&gt;MySQL 뷰(View)&lt;/h1&gt;

&lt;h3 id=&quot;뷰-view-개념&quot;&gt;뷰 (View) 개념&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;다른 테이블을 기반으로 만들어진 가상 테이블&lt;/li&gt;
  &lt;li&gt;데이터를 실제로 저장하지 않음&lt;/li&gt;
  &lt;li&gt;논리적으로만 존재하는 테이블&lt;/li&gt;
  &lt;li&gt;일반 테이블과 동일한 방법으로 사용&lt;/li&gt;
  &lt;li&gt;다른 뷰를 기반으로 새로운 뷰를 만들 수 있음&lt;/li&gt;
  &lt;li&gt;뷰를 통해 기본 테이블의 내용을 쉽게 검색할 수 있음&lt;/li&gt;
  &lt;li&gt;기본 테이블의 내용을 변화시키는 작업은 제한적임&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;뷰-생성&quot;&gt;뷰 생성&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;명령어 : CREATE VIEW&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020/03/2020-03-20-database-22-01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;속성리스트 : 뷰를 구성하는 속성의 이름&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;생략 가능 – SELECT 문에서 사용한 속성의 이름을 뷰에서 사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;SELECT 문 : 기본 테이블에 대한 SELECT 문&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;ORDER BY를 사용할 수 없음&lt;/li&gt;
      &lt;li&gt;일반적인 SELECT 문과 동일&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;WITH CHECK OPTION&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;생성한 뷰에 삽입이나 수정 연산을 할 때, SELECT 문에서 제시한 뷰의 정의 조건을 위반하면 수행되지 않도록 하는 제약조건을 제시&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;예제 : Customer 테이블에서 등급이 VIP이거나 Gold 인 고객의 account, name, credit 으로 구성된 뷰를 GoodCustomer 이름으로 생성하고- 뷰의 내용을 검색하시오.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;기본 테이블의 데이터
&lt;img src=&quot;/assets/img/database/2020/03/2020-03-20-database-22-02.png&quot; alt=&quot;&quot; /&gt;
        &lt;ul&gt;
          &lt;li&gt;뷰 생성 명령어 및 테이블 내용 조회
&lt;img src=&quot;/assets/img/database/2020/03/2020-03-20-database-22-03.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
          &lt;li&gt;뷰의 구조 보기
&lt;img src=&quot;/assets/img/database/2020/03/2020-03-20-database-22-04.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
          &lt;li&gt;뷰의 속성리스트가 SELECT 문의 속성리스트와 이름이 동일하므로 지정하지 않고 사용
&lt;img src=&quot;/assets/img/database/2020/03/2020-03-20-database-22-05.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;예제 : GoodCustomer 뷰에서 Credit이 10000 이상인 고객의 account와 credit로 구성된 GoodCustomerBigCredit 뷰를 생성하시오.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020/03/2020-03-20-database-22-06.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/assets/img/database/2020/03/2020-03-20-database-22-07.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;예제 : 주문 테이블에서 고객별 주문 건수로 구성된 뷰를 OrderByCustomer 라는 이름으로 생성하고, 내용을 조회하시오.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;주문 테이블의 데이터 조회
&lt;img src=&quot;/assets/img/database/2020/03/2020-03-20-database-22-08.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
      &lt;li&gt;OrderByCustomer 뷰를 생성하고 조회하기 위한 명령어
&lt;img src=&quot;/assets/img/database/2020/03/2020-03-20-database-22-09.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
      &lt;li&gt;OrderByCustomer 뷰의 데이터 조회
&lt;img src=&quot;/assets/img/database/2020/03/2020-03-20-database-22-10.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
      &lt;li&gt;OrderByCustomer 뷰의 구조
&lt;img src=&quot;/assets/img/database/2020/03/2020-03-20-database-22-11.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;뷰의-활용&quot;&gt;뷰의 활용&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;뷰의 삽입, 수정, 삭제 연산&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;기본 테이블에서 수행됨&lt;/li&gt;
      &lt;li&gt;제한적으로 수행됨&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;변경 불가능한 뷰&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;기본 테이블에 있는 내용이 아니고, 집계 함수로 계산된 내용을 포함하는 뷰&lt;/li&gt;
      &lt;li&gt;DISTINCT 키위드를 포함하여 정의한 뷰&lt;/li&gt;
      &lt;li&gt;GROUP BY 절을 포함하여 정의한 뷰&lt;/li&gt;
      &lt;li&gt;여러 개의 테이블을 조인하여 정의한 뷰 – 변경이 불가능한 경우가 많음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020/03/2020-03-20-database-22-12.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;뷰 삽입 (WITH CHECK OPTION)
    &lt;ul&gt;
      &lt;li&gt;제약 조건 : SELECT 문에서 제시한 정의 조건&lt;/li&gt;
      &lt;li&gt;정의 조건을 위배하면 수행 안 됨&lt;/li&gt;
      &lt;li&gt;예제 : 고객 테이블에서 등급(Grade)이 ‘VIP’ 이거나 ‘Gold’인 고객의 계정과, 이름, 등급을 가진 GoodCustomer4 뷰를 만드시오.
&lt;img src=&quot;/assets/img/database/2020/03/2020-03-20-database-22-13.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/assets/img/database/2020/03/2020-03-20-database-22-14.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;기본 테이블의 데이터가 삭제되거나 변경되면 뷰의 내용도 같이 변경됨
    &lt;ul&gt;
      &lt;li&gt;기본 테이블의 데이터를 삭제하기전 데이터
&lt;img src=&quot;/assets/img/database/2020/03/2020-03-20-database-22-15.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
      &lt;li&gt;customer 테이블의 bank 계정 레코드를 삭제 후
&lt;img src=&quot;/assets/img/database/2020/03/2020-03-20-database-22-16.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;뷰의-장점&quot;&gt;뷰의 장점&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;질의문을 쉽게 작성할 수 있다.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;특정 조건을 만족하는 레코드들로 뷰를 미리 만들어 놓을 경우 ==&amp;gt; 사용자가 WHERE 절에 특정 조건을 넣지 않아도 된다.&lt;/li&gt;
      &lt;li&gt;GROUP BY, 집계함수, 조인 등을 이용해 뷰를 미리 만들 경우 ==&amp;gt; 복잡한 질의문을 만들지 않고 SELECT절과 FROM 절만으로 데이터 검색이 가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;데이터의 보안 유지에 도움이 된다.
    &lt;ul&gt;
      &lt;li&gt;여러 사용자의 요구에 맞는 다양한 뷰를 미리 정의&lt;/li&gt;
      &lt;li&gt;사용자에게 제공된 뷰를 통해서만 데이터에 접근하도록 권한 설정 ==&amp;gt; 뷰에 포함되지 않은 데이터를 사용자로부터 보호할 수 있음.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;데이터를 편리하게 관리할 수 있다.
    &lt;ul&gt;
      &lt;li&gt;제공된 뷰에 포함되지 않은 기본 테이블의 다른 속성은 사용자가 신경 쓸 필요가 없음&lt;/li&gt;
      &lt;li&gt;제공된 뷰와 관련이 없는 다른 테이블의 변화에도 영향을 받지 않음.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;뷰-삭제&quot;&gt;뷰 삭제&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;뷰를 삭제해도 기본 테이블은 영향을 받지 않음&lt;/li&gt;
  &lt;li&gt;명령어 : DROP VIEW 뷰이름 CASCADE ㅣ RESTRICT;&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;삭제할 뷰를 이용해 만들어진 다른 뷰가 존재할 경우 처리 방법&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;RESTRICT : 다른 뷰가 삭제되지 않음&lt;/li&gt;
      &lt;li&gt;CASCADE : 다른 뷰도 같이 삭제&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 20 Mar 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/devlog/2020/03/20/database-22/</link>
        <guid isPermaLink="true">http://localhost:4000/devlog/2020/03/20/database-22/</guid>
        
        <category>database</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[Database] MySQL 일괄 실행, 백업, 복원</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020/03/2020-03-20-database-21.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;일괄-실행-백업-복원&quot;&gt;일괄 실행, 백업, 복원&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;MySQL Server 내에서 사용하는 명령어를 파일에 저장하여 일괄 처리&lt;/li&gt;
  &lt;li&gt;파일의 확장자는 .sql 로 지정&lt;/li&gt;
  &lt;li&gt;모든 명령을 파일에 저장하여 일괄처리함.&lt;/li&gt;
  &lt;li&gt;데이터베이스를 백업한 후 복원하기 위하여 일괄처리함.&lt;/li&gt;
  &lt;li&gt;Windows의 명령 프롬프트 창에서 실행한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;테이블-생성-일괄처리&quot;&gt;테이블 생성 일괄처리&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;편집기를 사용하여 CREATE TABLE 명령을 파일에 저장&lt;/li&gt;
  &lt;li&gt;명령어 : mysql –u계정 –p비밀번호 데이터베이스명 &amp;lt; 일괄처리파일명&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020/03/2020-03-20-database-21-01.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/assets/img/database/2020/03/2020-03-20-database-21-02.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;데이터베이스-백업&quot;&gt;데이터베이스 백업&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;DBMS 내의 데이터 백업은 데이터베이스 별로 한다.&lt;/li&gt;
  &lt;li&gt;테이블 별로 백업 할 수 없다.&lt;/li&gt;
  &lt;li&gt;명령어 : mysqldump –u계정 –p비밀번호 데이터베이스명 &amp;gt; 백업파일명&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020/03/2020-03-20-database-21-03.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/assets/img/database/2020/03/2020-03-20-database-21-04.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;백업된-파일-살펴보기&quot;&gt;백업된 파일 살펴보기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;복원할 데이터베이스에는 복원할 동일한 이름의 테이블이 있어도 된다.
    &lt;ul&gt;
      &lt;li&gt;테이블이 있을 경우, 테이블이 자동 삭제되고 백업된 데이터로 테이블이 생성됨&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020/03/2020-03-20-database-21-05.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;테이블을 사용할 동안 다른 사람의 접근을 제한한다.&lt;/li&gt;
  &lt;li&gt;READ
    &lt;ul&gt;
      &lt;li&gt;LOCK 한 사람이 테이블을 읽을 수 만 있고 기록할 수는 없다.&lt;/li&gt;
      &lt;li&gt;다른 사람은 테이블을 읽거나 쓰기를 할 수 없다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;READ LOCAL
    &lt;ul&gt;
      &lt;li&gt;LOCK한 사람은 읽기만 가능하다.&lt;/li&gt;
      &lt;li&gt;다른 사람은 쓰기와 읽기가 가능하다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;WRITE
    &lt;ul&gt;
      &lt;li&gt;LOCK한 사람만 읽고 쓸수 있다.&lt;/li&gt;
      &lt;li&gt;다른 사람은 읽고 쓰기가 불가능하다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;UNLOCK TABLES
    &lt;ul&gt;
      &lt;li&gt;LOCK 한 테이블을 해제한다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020/03/2020-03-20-database-21-06.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;데이터베이스-복원&quot;&gt;데이터베이스 복원&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;DBMS 내의 데이터 복원은 데이터베이스 별로 한다.&lt;/li&gt;
  &lt;li&gt;테이블 별로 복원할 수 없다.&lt;/li&gt;
  &lt;li&gt;복원할 데이터베이스는 DBMS내에 만들어져 있어야 한다.&lt;/li&gt;
  &lt;li&gt;복원할 때 사용하는 계정은 해당 데이터베이스에 접근할 권한을 가지고 있어야 한다.&lt;/li&gt;
  &lt;li&gt;명령어 : mysql –u계정 –p비밀번호 데이터베이스명 &amp;lt; 백업파일명&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 20 Mar 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/devlog/2020/03/20/database-21/</link>
        <guid isPermaLink="true">http://localhost:4000/devlog/2020/03/20/database-21/</guid>
        
        <category>database</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[Database] MySQL 테이블 이름변경 및 삭제</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020/03/2020-03-20-database-20.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;테이블-이름변경-및-삭제&quot;&gt;테이블 이름변경 및 삭제&lt;/h1&gt;

&lt;h3 id=&quot;테이블-이름변경&quot;&gt;테이블 이름변경&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;명령어 : ALTER TABLE 구_테이블명 RENAME 신_테이블명&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;이름이 변경된 테이블을 참조하는 외래키가 있는 경우&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;외래키 선언 부분에 테이블 이름 변경이 반영됨&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020/03/2020-03-20-database-20-01.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/assets/img/database/2020/03/2020-03-20-database-20-02.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;테이블-삭제&quot;&gt;테이블 삭제&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;명령어 : DROP TABLE 테이블명 [, 테이블명] [ CASCADE ㅣ RESTRICT ];&lt;/li&gt;
  &lt;li&gt;삭제하는 테이블을 참조하는 테이블이 있는 경우
    &lt;ul&gt;
      &lt;li&gt;CASCADE : 같이 삭제&lt;/li&gt;
      &lt;li&gt;RESTRICT : 삭제 취소&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020/03/2020-03-20-database-20-03.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/assets/img/database/2020/03/2020-03-20-database-20-04.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 20 Mar 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/devlog/2020/03/20/database-20/</link>
        <guid isPermaLink="true">http://localhost:4000/devlog/2020/03/20/database-20/</guid>
        
        <category>database</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[Database] MySQL 테이블 변경</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020/03/2020-03-20-database-19.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;mysql-테이블-변경&quot;&gt;MySQL 테이블 변경&lt;/h1&gt;

&lt;h3 id=&quot;alter-table를-사용하여-변경&quot;&gt;ALTER TABLE를 사용하여 변경&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;변경 내용
    &lt;ul&gt;
      &lt;li&gt;새로운 속성 추가&lt;/li&gt;
      &lt;li&gt;기존 속성 삭제&lt;/li&gt;
      &lt;li&gt;기존 속성 수정&lt;/li&gt;
      &lt;li&gt;새로운 제약조건 추가&lt;/li&gt;
      &lt;li&gt;기존 제약조건 삭제&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;alter-table-기본-형식&quot;&gt;ALTER TABLE 기본 형식&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020/03/2020-03-20-database-19-01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;새로운-속성-추가--add-&quot;&gt;새로운 속성 추가 ( ADD )&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020/03/2020-03-20-database-19-02.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/assets/img/database/2020/03/2020-03-20-database-19-03.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/assets/img/database/2020/03/2020-03-20-database-19-04.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/assets/img/database/2020/03/2020-03-20-database-19-05.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/assets/img/database/2020/03/2020-03-20-database-19-06.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;속성-삭제--drop-&quot;&gt;속성 삭제 ( DROP )&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020/03/2020-03-20-database-19-07.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;속성-변경--change--modify-&quot;&gt;속성 변경 ( CHANGE / MODIFY )&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;(1) 속성 수정 (CHANGE)
    &lt;ul&gt;
      &lt;li&gt;속성의 이름과 데이터 타입을 수정함&lt;/li&gt;
      &lt;li&gt;명령어 : ALTER TABLE 테이블명 CHANGE 이전필드명 새로운필드명 데이터타입;
&lt;img src=&quot;/assets/img/database/2020/03/2020-03-20-database-19-08.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/assets/img/database/2020/03/2020-03-20-database-19-09.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;(2) 속성의 데이터타입 수정 (MODIFY)
    &lt;ul&gt;
      &lt;li&gt;속성의 데이터타입만 수정함&lt;/li&gt;
      &lt;li&gt;명령어 : ALTER TABLE 테이블명 MODIFY 필드명 새로운데이터타입;
&lt;img src=&quot;/assets/img/database/2020/03/2020-03-20-database-19-10.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;제약-조건의-추가-및-삭제--add--drop-&quot;&gt;제약 조건의 추가 및 삭제 ( ADD / DROP )&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;(1) 기존의 제약 조건 확인하기
    &lt;ul&gt;
      &lt;li&gt;CREATE TABLE을 사용하여 테이블 생성시 적용된 모든 속성, 제약조건 확인&lt;/li&gt;
      &lt;li&gt;CREATE TABLE의 SQL에서 선언되지 않은 제약조건이름을 확인할 수 있음&lt;/li&gt;
      &lt;li&gt;명령어 : SHOW CREATE TABLE 테이블이름&lt;/li&gt;
      &lt;li&gt;외래키 제약조건 : MySQL 내부에서 사용된 제약조건이름 확인
        &lt;ul&gt;
          &lt;li&gt;제약조건을 삭제하기 위하여 확인한 제약조건이름을 사용하여야 함&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020/03/2020-03-20-database-19-11.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/assets/img/database/2020/03/2020-03-20-database-19-12.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;(2) 기존의 외래키 제약 조건 삭제하기
    &lt;ul&gt;
      &lt;li&gt;“SHOW CREATE TABLE 테이블명” 질의로 확인한 제약조건이름을 사용하여 삭제&lt;/li&gt;
      &lt;li&gt;명령어 : ALTER TABLE 테이블명 DROP FOREIGN KEY 제약조건이름&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020/03/2020-03-20-database-19-13.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/assets/img/database/2020/03/2020-03-20-database-19-14.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;(3) 새로운 외래키 제약 조건 추가
    &lt;ul&gt;
      &lt;li&gt;새로운 외래키 제약 조건을 테이블에 추가하기 위하여 사용&lt;/li&gt;
      &lt;li&gt;명령어 : ALTER TABLE 테이블명 ADD 외래키제약조건
&lt;img src=&quot;/assets/img/database/2020/03/2020-03-20-database-19-15.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/assets/img/database/2020/03/2020-03-20-database-19-16.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;e-테이블-관련-기타-질의&quot;&gt;E. 테이블 관련 기타 질의&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;(1) 데이터베이스내의 모든 테이블 상태 확인하기
    &lt;ul&gt;
      &lt;li&gt;명령어 : SHOW TABLE STATUS FROM 데이터베이스명&lt;/li&gt;
      &lt;li&gt;확인 가능 정보
        &lt;ul&gt;
          &lt;li&gt;레코드 수&lt;/li&gt;
          &lt;li&gt;평균 레코드 길이&lt;/li&gt;
          &lt;li&gt;전체 데이터 길이&lt;/li&gt;
          &lt;li&gt;AUTO_INCREMENT 값&lt;/li&gt;
          &lt;li&gt;생성 날짜&lt;/li&gt;
          &lt;li&gt;사용언어
&lt;img src=&quot;/assets/img/database/2020/03/2020-03-20-database-19-17.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 20 Mar 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/devlog/2020/03/20/database-19/</link>
        <guid isPermaLink="true">http://localhost:4000/devlog/2020/03/20/database-19/</guid>
        
        <category>database</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[Database] 기본키, 대체키, 외래키, 테이블 제약 조건</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020/03/2020-03-19-database-18.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;테이블-생성---키-정의&quot;&gt;테이블 생성 - 키 정의&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;기본키, 대체키, 외래키를 지정
&lt;img src=&quot;/assets/img/database/2020/03/2020-03-19-database-18-01.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;기본키&quot;&gt;기본키&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;PRIMARY KEY를 사용해 지정&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;모든 테이블에 기본키는 반드시 하나만 지정&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;예 : PRIMARY KEY ( account ) &amp;lt;== 고객의 계정(account)를 기본키로 지정&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;여러 개의 속성으로 구성할 수 있음
    &lt;ul&gt;
      &lt;li&gt;예 : CONSTRAINT pk_orderID PRIMARY KEY ( customer, item ) &amp;lt;== 기본키로 pk_orderID가 지정되었고, 기본키의 값은 주문을 한 고객 (customer)과 주문제품 (item)으로 구성됨&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;기본키를 지정하지 않아도 됨&lt;/li&gt;
  &lt;li&gt;기본키는 하나의 투플을 선택할 수 있음&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020/03/2020-03-19-database-18-02.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020/03/2020-03-19-database-18-03.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;대체키&quot;&gt;대체키&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;UNIQUE를 사용해 지정&lt;/li&gt;
  &lt;li&gt;기본키와 같이 각 투플을 유일하게 식별&lt;/li&gt;
  &lt;li&gt;대체키의 값은 테이블 내에서 중복되면 안됨 (유일성)&lt;/li&gt;
  &lt;li&gt;NULL 값을 가질 수 있음 (기본키 : NULL 값을 가질 수 없음)&lt;/li&gt;
  &lt;li&gt;한 데이블에서 여러 개 지정할 수 있음&lt;/li&gt;
  &lt;li&gt;예 : UNIQUE (name) &amp;lt;== 고객이름(name) 속성을 대체키로 지정&lt;/li&gt;
  &lt;li&gt;예 : UNIQUE ( customer, item ) &amp;lt;== 기본키의 값은 주문을 한 고객(customer)과 주문제품 (item)으로 구성됨&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020/03/2020-03-19-database-18-04.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020/03/2020-03-19-database-18-05.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020/03/2020-03-19-database-18-06.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020/03/2020-03-19-database-18-07.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;외래키&quot;&gt;외래키&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;FOREIGN KEY를 사용해 지정&lt;/li&gt;
  &lt;li&gt;참조 테이블을 분명히 밝혀야 함.
    &lt;ul&gt;
      &lt;li&gt;참조 무결성 제약 조건을 유지&lt;/li&gt;
      &lt;li&gt;REFERENCES 다음에 제시&lt;/li&gt;
      &lt;li&gt;예 : FOREIGN KEY ( customer ) REFERENCES Customer( account )&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;참조되는 테이블에서 투플을 삭제하거나 변경시 제약이 따름&lt;/li&gt;
  &lt;li&gt;참조 무결성 제약 조건 옵션&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020/03/2020-03-19-database-18-08.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;참조 무결성 제약 조건 옵션을 선택하지 않은 경우
    &lt;ul&gt;
      &lt;li&gt;ON DELETE NO ACTION 이 자동 선택됨&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;ON DELETE NO ACTION 실행&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020/03/2020-03-19-database-18-09.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020/03/2020-03-19-database-18-10.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020/03/2020-03-19-database-18-11.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;ON DELETE CASCADE 실행&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020/03/2020-03-19-database-18-12.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020/03/2020-03-19-database-18-13.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020/03/2020-03-19-database-18-14.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;ON DELETE SET NULL 실행
&lt;img src=&quot;/assets/img/database/2020/03/2020-03-19-database-18-15.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020/03/2020-03-19-database-18-16.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020/03/2020-03-19-database-18-17.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;ON DELETE SET DEFAULT
    &lt;ul&gt;
      &lt;li&gt;MySQL 에서는 Parser는 인식하지만, 데이블 정의는 거절됨
&lt;img src=&quot;/assets/img/database/2020/03/2020-03-19-database-18-18.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;테이블-생성---제약-조건-정의&quot;&gt;테이블 생성 - 제약 조건 정의&lt;/h1&gt;

&lt;h3 id=&quot;제약-조건-정의&quot;&gt;제약 조건 정의&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;테이블을 정의할 때, 특정 속성에 대하여 제약 조건을 지정할 수 있음&lt;/li&gt;
  &lt;li&gt;CHECK 키워드를 사용&lt;/li&gt;
  &lt;li&gt;지정한 제약 조건을 만족하는 투플만 존재할 수 있음.&lt;/li&gt;
  &lt;li&gt;투플을 삽입하거나 수정할 때, 이 제약조건을 지켜야 함. ==&amp;gt; 데이터의 무결성을 위한 제약 조건을 표현하는 방법&lt;/li&gt;
  &lt;li&gt;예 : CHECK ( 재고량 &amp;gt;= 0 AND 재고량 &amp;lt;= 5000 ) &amp;lt;= 모든 제품의 재고량은 항상 0개 이상이고, 5000개 이하&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;CONSTRAINT 키워드와 함께 고유의 이름을 부여&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;제약 조건을 여러 개 지정할 때 사용&lt;/li&gt;
      &lt;li&gt;제약 조건을 수정하거나 제거할 때 식별하기 쉽다.&lt;/li&gt;
      &lt;li&gt;예 : CONSTRAINT Chk_date CHECK ((sdate&amp;lt;=usedate) AND (usedate&amp;lt;=expdate))&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020/03/2020-03-19-database-18-19.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020/03/2020-03-19-database-18-20.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Thu, 19 Mar 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/devlog/2020/03/19/database-18/</link>
        <guid isPermaLink="true">http://localhost:4000/devlog/2020/03/19/database-18/</guid>
        
        <category>database</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[JSTL] &lt; c:choose &gt;&lt; c:when &gt; 다중(중복, 여러번) 사용 하기 (&lt; c:choose &gt;&lt; c:when &gt;안에 &lt; c:choose &gt;&lt;c:when &gt;)</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/jstl/2020-03-18-tip-jstl-02.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;-cchoose--cwhen--다중중복-여러번-사용-하기--cchoose--cwhen-안에--cchoose-&quot;&gt;&amp;lt; c:choose &amp;gt;&amp;lt; c:when &amp;gt; 다중(중복, 여러번) 사용 하기 (&amp;lt; c:choose &amp;gt;&amp;lt; c:when &amp;gt;안에 &amp;lt; c:choose &amp;gt;&lt;c:when&gt;)&lt;/c:when&gt;&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&amp;lt; c:choose &amp;gt;&amp;lt; c:when &amp;gt; 을 사용하는데, 그 조건 안에 또 다른 조건을 줘야할 경우가 생김.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &amp;lt;c:choose&amp;gt;
    &amp;lt;c:when&amp;gt;
      &amp;lt;c:if&amp;gt; 실행 &amp;lt;/c:if&amp;gt;
      &amp;lt;c:if&amp;gt; 실행 &amp;lt;/c:if&amp;gt;
    &amp;lt;/c:when&amp;gt;
     &amp;lt;c:otherwise&amp;gt;
          실행
     &amp;lt;/c:otherwise&amp;gt;
  &amp;lt;/c:choose&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ul&gt;
      &lt;li&gt;위와 같이 생각을 하고 코드를 작성했더니 에러가 발생.&lt;/li&gt;
      &lt;li&gt;위 코드와 같이 생각하는 사람이 많을거라 판단됨.&lt;/li&gt;
      &lt;li&gt;위 코드처럼 생각하신분 링크 : https://okky.kr/article/432948&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;다중일경우는-choose문-단일조건이면-if문&quot;&gt;다중일경우는 choose문. 단일조건이면 if문&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;다중일경우는 choose문. 단일조건이면 if문&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &amp;lt;c:choose&amp;gt;
      &amp;lt;c:when&amp;gt;
          &amp;lt;c:choose&amp;gt;
                &amp;lt;c:when&amp;gt; 실행 &amp;lt;/c:when&amp;gt;
                &amp;lt;c:when&amp;gt; 실행 &amp;lt;/c:when&amp;gt;
                &amp;lt;c:otherwise&amp;gt; 실행 &amp;lt;/c:otherwise&amp;gt;
          &amp;lt;/c:choose&amp;gt;
      &amp;lt;/c:when&amp;gt;
      &amp;lt;c:otherwise&amp;gt;
            &amp;lt;c:if&amp;gt;단일 조건 실행&amp;lt;/c:if&amp;gt;
      &amp;lt;/c:otherwise&amp;gt;
  &amp;lt;/c:choose&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Wed, 18 Mar 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/tip/2020/03/18/tip-jstl-02/</link>
        <guid isPermaLink="true">http://localhost:4000/tip/2020/03/18/tip-jstl-02/</guid>
        
        <category>jstl</category>
        
        
        <category>tip</category>
        
      </item>
    
      <item>
        <title>[JAVA] 자바 날짜 구하기(특정 월의 첫째 날짜, 마지막 날짜)</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/java/2020-03-18-tip-java-02.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;자바-날짜-구하기&quot;&gt;자바 날짜 구하기&lt;/h1&gt;
&lt;h3 id=&quot;how-to-get-first-day-or-last-day-of-month-in-java&quot;&gt;How to get first day or last day of month in Java&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Calendar 의 getActualMaximum 함수를 이용&lt;/li&gt;
  &lt;li&gt;getMaximum 는 Calender 자체가 최대로 가질수 있는 값.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;getActualMaximum 는 실제로 날짜가 셋팅 된 Calender 가 가질수 있는 값&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  import java.text.SimpleDateFormat;
  import java.util.Calendar;
     
  public class MaximumOfMonth {
      public static void main(String[] args) {
     
          int year = 2020;
          int month = 1;
          int day = 1;
     
          SimpleDateFormat dateFormat = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;);
     
          Calendar cal = Calendar.getInstance();
     
          cal.set(year, month-1, day); //월은 -1해줘야 해당월로 인식
     
          System.out.println(dateFormat.format(cal.getTime()));
     
          System.out.println(&quot;해당년도: &quot;+cal.get(Calendar.YEAR));
          System.out.println(&quot;해당월: &quot;+(cal.get(Calendar.MONTH)+1)); //보여줄때 +1로 하여 사람기준으로 설정
          System.out.println(&quot;첫번째 일: &quot;+cal.getMinimum(Calendar.DAY_OF_MONTH));
     
          System.out.println(&quot;마지막 일(현재 날짜 기준 최대수): &quot;+cal.getActualMaximum(Calendar.DAY_OF_MONTH)); //기본적으로 이걸 사용
          System.out.println(&quot;마지막 일(Calender이 가진 최대수): &quot;+cal.getMaximum(Calendar.DAY_OF_MONTH));
      }
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 18 Mar 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/tip/2020/03/18/tip-java-02/</link>
        <guid isPermaLink="true">http://localhost:4000/tip/2020/03/18/tip-java-02/</guid>
        
        <category>java</category>
        
        
        <category>tip</category>
        
      </item>
    
      <item>
        <title>[Sass/SCSS] 조건문(if)</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/sass/2020-03-17-sass-13.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;if-함수&quot;&gt;if (함수)&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;조건의 값(true, false)에 따라 두 개의 표현식 중 하나만 반환.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Operators/Conditional_Operator&quot;&gt;조건부 삼항 연산자(conditional ternary operator)&lt;/a&gt;와 비슷합니다&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;조건의 값이 true이면 표현식1을, 조건의 값이 false이면 표현식2를 실행합니다.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  if(조건, 표현식1, 표현식2)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;SCSS:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $width: 555px;
  div {
    width: if($width &amp;gt; 300px, $width, null);
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Compiled to:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  div {
    width: 555px;
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;위와 같이 함수는 @include 같은 별도의 지시어 없이 사용하기 때문에 내가 지정한 함수와 내장 함수(Built-in Functions)의 이름이 충돌할 수 있습니다.
따라서 내가 지정한 함수에는 별도의 접두어를 붙여주는 것이 좋습니다&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;if-지시어&quot;&gt;@if (지시어)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;@if 지시어는 조건에 따른 분기 처리가 가능하며, if 문(if statements)과 유사합니다.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;같이 사용할 수 있는 지시어는 @else, if가 있습니다.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  // @if
  @if (조건) {
    /* 조건이 참일 때 구문 */
  }
    
  // @if @else
  @if (조건) {
    /* 조건이 참일 때 구문 */
  } @else {
    /* 조건이 거짓일 때 구문 */
  }
    
  // @if @else if
  @if (조건1) {
    /* 조건1이 참일 때 구문 */
  } @else if (조건2) {
    /* 조건2가 참일 때 구문 */
  } @else {
    /* 모두 거짓일 때 구문 */
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;조건에 ()는 생략이 가능하기 때문에, () 없이 작성하는 방법이 좀 더 편리할 수 있습니다.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $bg: true;
  div {
    @if $bg {
      background: url(&quot;/images/a.jpg&quot;);
    }
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;SCSS:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $color: orange;
  div {
    @if $color == strawberry {
      color: #FE2E2E;
    } @else if $color == orange {
      color: #FE9A2E;
    } @else if $color == banana {
      color: #FFFF00;
    } @else {
      color: #2A1B0A;
    }
  } 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Compiled to:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  div {
    color: #FE9A2E;
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;조건에는 논리 연산자 and, or, not을 사용할 수 있습니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;SCSS:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  @function limitSize($size) {
    @if $size &amp;gt;= 0 and $size &amp;lt;= 200px {
      @return 200px;
    } @else {
      @return 800px;
    }
  }
    
  div {
    width: limitSize(180px);
    height: limitSize(340px);
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Compiled to:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  div {
    width: 200px;
    height: 800px;
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;좀 더 복잡하지만 실용적이게 사용 가능&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Sass의 내장 함수 unitless()는 숫자에 단위가 있는지 여부를 반환합니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;SCSS:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  @mixin pCenter($w, $h, $p: absolute) {
    @if
      $p == absolute
      or $p == fixed
      or not $p == relative
      or not $p == static
    {
      width: if(unitless($w), #{$w}px, $w);
      height: if(unitless($h), #{$h}px, $h);
      position: $p;
      top: 0;
      bottom: 0;
      left: 0;
      right: 0;
      margin: auto;
    }
  }
    
  .box1 {
    @include pCenter(10px, 20px);
  }
  .box2 {
    @include pCenter(50, 50, fixed);
  }
  .box3 {
    @include pCenter(100, 200, relative);
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Compiled to:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  .box1 {
    width: 10px;
    height: 20px;
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    margin: auto;
  }
    
  .box2 {
    width: 50px;
    height: 50px;
    position: fixed;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    margin: auto;
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    본 포스팅은 HEROPY 님의 영상과 블로그를 보고 공부한 내용을 정리한 것입니다.
    https://heropy.blog/2018/01/31/sass/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Tue, 17 Mar 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/devlog/2020/03/17/sass-13/</link>
        <guid isPermaLink="true">http://localhost:4000/devlog/2020/03/17/sass-13/</guid>
        
        <category>sass</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[Sass/SCSS] 함수(Functions)</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/sass/2020-03-17-sass-12.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;함수functions&quot;&gt;함수(Functions)&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;자신의 함수를 정의하여 사용할 수 있습니다.&lt;/li&gt;
  &lt;li&gt;함수와 Mixins은 거의 유사하지만 반환되는 내용이 다릅니다.
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;반환-값의-차이&quot;&gt;반환 값의 차이&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;@Mixin :&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;지정한 스타일(Style)을 반환&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  // Mixins
  @mixin 믹스인이름($매개변수) {
    스타일;
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;함수(Functions):&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;연산된(Computed) 특정 값을 @return 지시어를 통해 반환&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  // Functions
  @function 함수이름($매개변수) {
    @return 값
  } 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;사용하는-방법의-차이&quot;&gt;사용하는 방법의 차이&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;@Mixin :&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;@include 지시어를 사용&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  // Mixin
  @include 믹스인이름(인수);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;함수(Functions):&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;수이름으로 바로 사용&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  // Functions
  함수이름(인수)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;SCSS:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $max-width: 980px;
    
  @function columns($number: 1, $columns: 12) {
    @return $max-width * ($number / $columns)
  }
    
  .box_group {
    width: $max-width;
    
    .box1 {
      width: columns();  // 1
    }
    .box2 {
      width: columns(8);
    }
    .box3 {
      width: columns(3);
    }
  }  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Compiled to:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;.box_group {
  /* 총 너비 */
  width: 980px;
}
.box_group .box1 {
  /* 총 너비의 약 8.3% */
  width: 81.66667px;
}
.box_group .box2 {
  /* 총 너비의 약 66.7% */
  width: 653.33333px;
}
.box_group .box3 {
  /* 총 너비의 25% */
  width: 245px;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;위와 같이 함수는 @include 같은 별도의 지시어 없이 사용하기 때문에 내가 지정한 함수와 내장 함수(Built-in Functions)의 이름이 충돌할 수 있습니다.
따라서 내가 지정한 함수에는 별도의 접두어를 붙여주는 것이 좋습니다&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;내장-함수&quot;&gt;내장 함수&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;응용 프로그램에 내장되어 있으며 최종 사용자가 액세스 할 수 있는 기능.&lt;/li&gt;
  &lt;li&gt;예를 들어, 대부분의 스프레드 시트 응용 프로그램은 행이나 열의 모든 셀을 추가하는 내장 SUM 함수를 지원합니다.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;예를 들어, 색의 빨강 성분을 가져오는 내장 함수로 이미 red()가 있습니다.
같은 이름을 사용하여 함수를 정의하면 이름이 충돌하기 때문에 별도의 접두어를 붙여 extract-red() 같은 이름을 만들 수 있습니다.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// 내가 정의한 함수
@function extract-red($color) {
  // 내장 함수
  @return rgb(red($color), 0, 0);
}
  
div {
  color: extract-red(#D55A93);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ul&gt;
      &lt;li&gt;혹은 모든 내장 함수의 이름을 다 알고 있을 수 없기 때문에 특별한 이름을 접두어로 사용할 수도 있습니다.
my-custom-func-red()&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    본 포스팅은 HEROPY 님의 영상과 블로그를 보고 공부한 내용을 정리한 것입니다.
    https://heropy.blog/2018/01/31/sass/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Tue, 17 Mar 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/devlog/2020/03/17/sass-12/</link>
        <guid isPermaLink="true">http://localhost:4000/devlog/2020/03/17/sass-12/</guid>
        
        <category>sass</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[Sass/SCSS] 확장(Extend) -  @extend</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/sass/2020-03-16-sass-11.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;sassscss-확장extend----extend&quot;&gt;Sass(SCSS) 확장(Extend) -  @extend&lt;/h1&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;특정 선택자가 다른 선택자의 모든 스타일을 가져야하는 경우가 종종 있습니다.&lt;/li&gt;
  &lt;li&gt;이럴 경우 선택자의 확장 기능을 사용할 수 있습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;extend&quot;&gt;@extend&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@extend 선택자;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;SCSS:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  .btn {
    padding: 10px;
    margin: 10px;
    background: blue;
  }
    
  .btn-danger {
    @extend .btn;
    background: red;
  }  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Compiled to:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; .btn, .btn-danger {
   padding: 10px;
   margin: 10px;
   background: blue;
 }
   
 .btn-danger {
   background: red;
 }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ul&gt;
      &lt;li&gt;컴파일된 결과가 마음에 드시나요?&lt;/li&gt;
      &lt;li&gt;결과를 보면 ,로 구분하는 다중 선택자(Multiple Selector)가 만들어졌습니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;사실 @extend는 다음과 같은 문제를 고려해야 합니다.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;내 현재 선택자(위 예제의 .btn-danger)가 어디에 첨부될 것인가?&lt;/li&gt;
      &lt;li&gt;원치 않는 부작용이 초래될 수도 있는가?&lt;/li&gt;
      &lt;li&gt;이 한 번의 확장으로 얼마나 큰 CSS가 생성되는가?&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;결과적으로 확장(Extend) 기능은 무해하거나 혹은 유익할 수도 있지만 그만큼 부작용을 가지고 있을 수 있습니다.
따라서 확장은 사용을 권장하지 않으며, 위에서 살펴본 Mixin을 대체 기능으로 사용하세요.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;사용을 권장하지 않는 이유에 대해서 좀 더 자세한 정보를 원하면 &lt;a href=&quot;https://sass-guidelin.es/ko/#extend&quot;&gt;Sass Guidelines Extend&lt;/a&gt;를 참고하세요.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    본 포스팅은 HEROPY 님의 영상과 블로그를 보고 공부한 내용을 정리한 것입니다.
    https://heropy.blog/2018/01/31/sass/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Mon, 16 Mar 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/devlog/2020/03/16/sass-11/</link>
        <guid isPermaLink="true">http://localhost:4000/devlog/2020/03/16/sass-11/</guid>
        
        <category>sass</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[MySQL/MariaDB] JOIN에서 ON 과 WHERE의 차이점</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/mysql/2020-03-16-tip-mysql-02.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;mysql-join에서-on-과-where의-차이점&quot;&gt;MySQL JOIN에서 ON 과 WHERE의 차이점&lt;/h1&gt;
&lt;h3 id=&quot;what-is-the-difference-between-on-and-where-in-a-join-statement&quot;&gt;what is the difference between “ON” and “WHERE” in a JOIN statement?&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;SQL의 JOIN에서 ON과 WHERE의 차이점은 JOIN하는 범위가 다르다&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;아래 test1, test2 테이블을 참조.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/mysql/2020-03-16-tip-mysql-02-01.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;예제1&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  ﻿SELECT
   *
  FROM test1 AS a 
  LEFT JOIN test2 AS b
  ON (a.aa = b.aa)
  WHERE b.cc = 7;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;

        &lt;ul&gt;
          &lt;li&gt;위의 경우는 a와 b 테이블의 OUTER JOIN을 수행한 후에 b.cc = 7인 데이터들을 추출&lt;/li&gt;
          &lt;li&gt;따라서 위의 의 결과는 b.cc = 7인 데이터만 존재&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;예제1 결과 :&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/mysql/2020-03-16-tip-mysql-02-02.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;예제2&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  ﻿SELECT 
  *
  FROM test1 AS a 
  LEFT JOIN test2 AS b
  ON (a.aa = b.aa AND b.cc = 7);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;

        &lt;ul&gt;
          &lt;li&gt;위의 경우는 (a 테이블)과 (b 테이블 중 b.cc = 7인 경우)를 OUTER JOIN 한 결과가 나온다.&lt;/li&gt;
          &lt;li&gt;따라서 위의 결과는 b.cc = 7이 아닌 데이터도 존재&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;예제2 결과 :&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/mysql/2020-03-16-tip-mysql-02-03.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;한마디로 ON과 WHERE의 경우는 JOIN을 할 대상(범위)이 달라진다는 것이다.&lt;/p&gt;

    &lt;p&gt;이 점을 이용해서 LEFT OUTER JOIN으로 차집합을 구현할 수 있다.&lt;/p&gt;

    &lt;p&gt;오라클이나 MSSQL과 같은 경우는 EXCEPT 혹은 MINUS 등을 사용하면 되겠지만,&lt;/p&gt;

    &lt;p&gt;MySQL은 버전에 따라 지원하는 경우도 있고 아닌 경우도 있다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;test1 테이블의 데이터 중 test2 테이블에 있는 데이터를 제외하고 가져오고 싶은 경우.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  ﻿SELECT *
  FROM test1 AS a 
  LEFT JOIN test2 AS b
  ON (a.aa = b.aa)
  WHERE b.aa IS NULL;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;위의 경우 JOIN하는 column을 기준으로 1, 2는 test2 테이블에도 있으니 제외하고, 3, 6만을 가져오고 싶은 경우이다.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;결과 : 
  &lt;img src=&quot;/assets/img/mysql/2020-03-16-tip-mysql-02-04.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;WHERE절 이전까지 실행했을 경우&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  SELECT *
  FROM test1 AS a 
  LEFT JOIN test2 AS b
  ON (a.aa = b.aa);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ul&gt;
      &lt;li&gt;여기에서 test2 테이블에 존재하지 않아서 test2 테이블의 column이 null인 부분만을 가지고 오게 된다.&lt;/li&gt;
      &lt;li&gt;WHERE절을 달아주면!! 차집합이 된다는 것이다.&lt;/li&gt;
      &lt;li&gt;결과 : 
  &lt;img src=&quot;/assets/img/mysql/2020-03-16-tip-mysql-02-05.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;참고 : https://blog.leocat.kr/notes/2017/07/28/sql-join-on-vs-where
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Mon, 16 Mar 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/tip/2020/03/16/tip-mysql-02/</link>
        <guid isPermaLink="true">http://localhost:4000/tip/2020/03/16/tip-mysql-02/</guid>
        
        <category>mysql</category>
        
        
        <category>tip</category>
        
      </item>
    
      <item>
        <title>[자바스크립트] 자동 실행 함수 (window.onload, $(document).ready())</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/javascript/2020-03-16-tip-javascript-07.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;자동-실행-함수-windowonload-documentready&quot;&gt;자동 실행 함수 (window.onload, $(document).ready())&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;window.onload 와 $(document).ready() 중에 어느 한 쪽이 좋다고 할 수 없다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;아래와 같은 특징들을 파악하여 경우에 따라 적절히 골라서 쓰자.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;windowonload&quot;&gt;window.onload&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;window.onload 는 페이지의 모든 요소들이 로드된 이후에 호출.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;window.onload 는 한 페이지에 하나의 함수만 호출.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Javascript에서 페이지가 로드되면 자동으로 실행되는 함수를 구현할 때엔 전역 콜백함수인 window.onload 함수를 사용.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  window.onload = function () {
      console.log(&quot;실행&quot;);
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;documentready&quot;&gt;$(document).ready()&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;jQuery는 자바스크립트의 window.onload 함수의 문제점을 해결하기 위해 $(document).ready() 함수를 제공&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;$(document).ready() 는 DOM 요소들만 모두 로드되면 호출.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;외부 리소스 및 이미지 로딩과 상관없이 DOM만 로드되면 바로 실행된다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;중복 사용해도 순서대로 모두 실행된다.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $(document).ready(function(){
       console.log(&quot;실행&quot;);
  });
    
  or 생략하면..
    
  $().ready(function(){
       console.log(&quot;실행&quot;);
  });
    
  or 더 생략하면..
    
  $(function(){
       console.log(&quot;실행&quot;);
  });
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Mon, 16 Mar 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/tip/2020/03/16/tip-javascript-07/</link>
        <guid isPermaLink="true">http://localhost:4000/tip/2020/03/16/tip-javascript-07/</guid>
        
        <category>javascript</category>
        
        
        <category>tip</category>
        
      </item>
    
      <item>
        <title>[fuji/후지필름] x100v 어댑터링, 후드 사용법 과 ND필터 끼우기</title>
        <description>&lt;p&gt;&lt;img src=&quot;https://1.bp.blogspot.com/-LedfoXqEt4s/XmzujoDX2QI/AAAAAAAAAJU/KqJnJnd6AncliZm_P7UQgPeQaDzzy6Z4wCLcBGAsYHQ/s1600/x100v%2B%25EC%2596%25B4%25EB%258C%2591%25ED%2584%25B0%25EB%25A7%2581%2B%252B%2B%25ED%259B%2584%25EB%2593%259C%2BND%25ED%2595%2584%25ED%2584%25B0%2B%25EC%2582%25AC%25EC%259A%25A9%25EB%25B2%2595%2B%25EB%25B3%25B5%25EC%2582%25AC.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;x100v-어댑터링--후드--nd필터-사용법&quot;&gt;x100v 어댑터링 + 후드 + ND필터 사용법&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;구입처&quot;&gt;구입처&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://smartstore.naver.com/cscamera&quot;&gt;디지털창신&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://1.bp.blogspot.com/-h3Rx4waFS4w/XmztLe0dMDI/AAAAAAAAAJE/Hsm4NfUE9TcEQZqlg24uaeDAr72Z5tfMwCLcBGAsYHQ/s1600/SE-1356d291-047d-48e8-8cfb-ff52601d97c8.jpg&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://1.bp.blogspot.com/-JEDcGXb0e5g/Xmzio4hOA5I/AAAAAAAAAH0/pt2T_cKPzzsGlRirvCX2we9U3kTVUPcNACLcBGAsYHQ/s1600/01.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;어댑터링+후드 세트 입니다.

ND필터는 49mm 입니다.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://1.bp.blogspot.com/-BtREBRKXvFg/XmzioAirV1I/AAAAAAAAAHw/9h3EQjzWvWgDs6HoHS4nJY2dl4GPRFxSQCLcBGAsYHQ/s1600/02.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;어댑터 링과 후드는 이렇게 생겼습니다.

실버 구매하신 분들은 실버로 사세요~
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://1.bp.blogspot.com/-t2d1Ka15nDo/XmzimguqUAI/AAAAAAAAAHs/EGbOlChoO9EB0yo8MkFWLX-hWy0R31TrACLcBGAsYHQ/s1600/03.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;nd필터란&quot;&gt;ND필터란?&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;색에 대해 중립적 성질을 갖는 차광 필터. 
특정한 파장 범위 내에서 각 파장에 대해 비슷한 정도로 빛의 투과량을 감소시켜 
색 균형을 알맞게 해주는 필터이다. 
실제 사용되는 ND 필터는 재질에 따라 가시광선 대역의 각 파장에 대해 
투과 특성이 다소 다르지만, 
이 필터를 부착함으로써 투과량을 감소시켜  느린 셔터로 동적인 느낌이나 
특수한 효과를 내고 싶을 때나 
낮에 저녁 무렵의 효과를 내기 위해 사용된다.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;사용 방법에 따라 차이는 있지만, 저는 낮에 사진촬영을 많이 하기 때문에
빛량이 너무 풍부한 낮에 촬영시 좀 빛이 균등한 사진을 찍고싶어서 사용합니다.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://1.bp.blogspot.com/-4uYa7EYgkhA/XmzipmZ92GI/AAAAAAAAAH8/wRvLLZTZY2Y30xbn9zzThXam6QBqQCuAQCLcBGAsYHQ/s1600/04.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;새제품이라 조심히 어댑터링을 끼울 곳을 찾았지만 못찾고 검색해서 알았습니다.

렌즈 맨 앞 부분의 동그란 링을 왼쪽으로 돌려서 분리 시킵니다.

살짝 힘을 주는데 안돌아가서 렌즈 부러지는거 아닌가 한 10분 고민했어요.

조금더 힘을 주니까 돌아가더라구요.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;​
&lt;img src=&quot;https://1.bp.blogspot.com/-ZZYB1bWgzpc/Xmziqd6Bh7I/AAAAAAAAAIA/21kaZORkVQQo8xVQKhUybUieF6MQFa6VgCLcBGAsYHQ/s1600/05.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;이렇게 앞 부분을 잡아서 왼쪽으로 돌려줍니다.

렌즈 고장나는거 아니니까 적당히 힘을줘서 돌려주세요.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://1.bp.blogspot.com/-cfPyEtW-20Y/XmzjTmPEQHI/AAAAAAAAAIk/C2RXtRvnxb8WAVMMbGMm_M4GM4lWFUOfwCEwYBhgL/s1600/06.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;분리된 모습입니다. 진짜 한 10분 고민 했습니다...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://1.bp.blogspot.com/-uuOrsofQmQk/XmzjUHx_HCI/AAAAAAAAAIc/oA7Pt3KQoiYWJVvMSxpHTacxteXLHePDACEwYBhgL/s1600/07.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;결합 순서는

어댑터링 - 필터 후드 순서 입니다.

어댑터링을 끼울 때 헷갈리실텐데

넓은 쪽이 앞을 보게 끼우셔야 해요.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://1.bp.blogspot.com/-n7WsilzcXpE/XmzjW74VG3I/AAAAAAAAAIg/ppYqE4Mnv7MTLl87xRc76znuLfHyzC_kQCEwYBhgL/s1600/09.jpg&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;x100v-unboxing-바로-보기&quot;&gt;&lt;a href=&quot;https://m-veloper.github.io/devlog/2020/03/14/review-goods-fuji-x100v-01/&quot;&gt;x100v Unboxing 바로 보기&lt;/a&gt;&lt;/h3&gt;

</description>
        <pubDate>Sat, 14 Mar 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/review/2020/03/14/review-goods-fuji-x100v-02/</link>
        <guid isPermaLink="true">http://localhost:4000/review/2020/03/14/review-goods-fuji-x100v-02/</guid>
        
        <category>goods</category>
        
        
        <category>review</category>
        
      </item>
    
      <item>
        <title>[fuji/후지필름] x100v Black Unboxing / 언박싱(개봉기)</title>
        <description>&lt;p&gt;&lt;img src=&quot;https://1.bp.blogspot.com/-9ZFQMisEtTE/XmycM_navEI/AAAAAAAAAHQ/jkF6vYJdEV0ijLBmLpy45yd97JbuiASFgCEwYBhgL/s1600/2020-03-14-review-goods-fuji-x100v.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;x100v-black-unboxing&quot;&gt;x100v Black Unboxing&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;스펙&quot;&gt;﻿스펙&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;가격 : 1,699,000원&lt;/li&gt;
  &lt;li&gt;종류 : 디지털카메라(똑딱이)&lt;/li&gt;
  &lt;li&gt;26.1MP X-Trans CMOS4&lt;/li&gt;
  &lt;li&gt;14bit RAW&lt;/li&gt;
  &lt;li&gt;23mm F2 (환산 35mm) 렌즈 (6 군 8 매, 비구면 렌즈 2 매)&lt;/li&gt;
  &lt;li&gt;4 스톱 ND 필터&lt;/li&gt;
  &lt;li&gt;조리개 F2-16, 1 / 3EV 단계 9매 조리개 날개&lt;/li&gt;
  &lt;li&gt;최단 촬영 거리 10cm&lt;/li&gt;
  &lt;li&gt;컨버터 렌즈 대응&lt;/li&gt;
  &lt;li&gt;디지털 텔레 컨버터 환산 50mm, 70mm&lt;/li&gt;
  &lt;li&gt;ISO160-12800(1 / 3EV 단계) 확장 ISO 80-51200 지원&lt;/li&gt;
  &lt;li&gt;렌즈 셔터&lt;/li&gt;
  &lt;li&gt;기계식 30 초 -1/4000 초, 전자식 30 초 -1 / 32000 초&lt;/li&gt;
  &lt;li&gt;11fps 연사 JPEG 38매, RAW 17매, 8fps로 JPEG 76매, RAW 18매&lt;/li&gt;
  &lt;li&gt;전자 셔터 연사 30fps, 1.25 배 크롭, JPEG 29ao, RAW 17매&lt;/li&gt;
  &lt;li&gt;콘트라스트 -2EV 위상차 -5EV의 저휘도 AF&lt;/li&gt;
  &lt;li&gt;시야율 95 %, 배율 0.52 배 OVF&lt;/li&gt;
  &lt;li&gt;0.5 인치, 369 만 화소 유기 EL, 배율 0.66 배 EVF&lt;/li&gt;
  &lt;li&gt;3 인치 3 : 2,162 만 화소&lt;/li&gt;
  &lt;li&gt;DCI4K 29.97p (10 분), 4K 29.97p ( 10 분) 전체 HD 59.97p (15 분)&lt;/li&gt;
  &lt;li&gt;필름 시뮬레이션은 17 종&lt;/li&gt;
  &lt;li&gt;배터리 NP-W126S, 배터리 수명 EVF 350 장, OVF 420 장&lt;/li&gt;
  &lt;li&gt;크기 74.8 x 128.0 x 53.3mm&lt;/li&gt;
  &lt;li&gt;무게 478g (배터리 및 SD 카드 포함), 428g (배터리 및 메모리 카드 제외)
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;img src=&quot;https://1.bp.blogspot.com/-KaDcosDJMVA/XmycHgbMaHI/AAAAAAAAAG4/D4HJBrO4cMEWCnAEbX8sNjQ4JM0wYKxgACEwYBhgL/s1600/2020-03-14-review-goods-fuji-x100v-01.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;                ﻿   배송은 회사로 받았는데, 박스 크기 무엇..?
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://1.bp.blogspot.com/-yytqsqaFU2Y/XmycHhPZj5I/AAAAAAAAAHA/BfdCGQ8JrQQuQIST6ghHeg6TMMkgCe7hACEwYBhgL/s1600/2020-03-14-review-goods-fuji-x100v-02.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://1.bp.blogspot.com/-rJAMAajKBH8/XmycHZRjqxI/AAAAAAAAAHI/w8Q9bQKnPZ04X7aw3R1oYYDgyN7A758GwCEwYBhgL/s1600/2020-03-14-review-goods-fuji-x100v-03.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;                    ﻿빨리 퇴근하고 집에서 제대로 언박싱!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://1.bp.blogspot.com/-zuBS4BTwgps/XmycI8sE9LI/AAAAAAAAAG4/9mNagla2nV0HUZO4dwVx_RGZuBnOW3gYwCEwYBhgL/s1600/2020-03-14-review-goods-fuji-x100v-04.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;기본-구성품&quot;&gt;기본 구성품&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;x100v 본체&lt;/li&gt;
  &lt;li&gt;배터리 2개 (출시 이벤트 1+1)&lt;/li&gt;
  &lt;li&gt;c type 케이블&lt;/li&gt;
  &lt;li&gt;어깨 스트랩&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;설명서&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;              참고로 기간내에 정품 등록하면 케이스 및 AS 1년 연장 가능.
                
              그리고 충격적인건 충전기가 없습니다.
                
              따로 구매 하시거나, c type 케이블로 충전하셔야 합니다.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;사은품&quot;&gt;사은품&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://fuji-enj.com/&quot;&gt;즐거운카메라&lt;/a&gt; 에서 구입&lt;/li&gt;
  &lt;li&gt;﻿카메라 청소도구&lt;/li&gt;
  &lt;li&gt;액정 보호 필름&lt;/li&gt;
  &lt;li&gt;바디 보호 필름&lt;/li&gt;
  &lt;li&gt;64기가 메모리&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;충전기&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;                솔직히 충전기까지 사은품 준거는 깜짝 놀랐어요.
                  
                이걸 돈주고 사야하나 했는데... 사은품으로 똬!!
                  
                참고로 사은품은 사은품 입니다.
                  
                공식 홈페이지 안줍니다.
                  
                너무 사은품의 퀄리티는 논하지는 맙시다. 주는게 어디여
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://1.bp.blogspot.com/-nT3pUtyJsps/XmycJp51s9I/AAAAAAAAAHI/_WrxoAhNUs8OCVp4q7wLKnk2LrlnqUDnQCEwYBhgL/s1600/2020-03-14-review-goods-fuji-x100v-05.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;                x100 시리즈를 잘 모르시는 분들이 있어서 말씀드리지만
                
                정확히 디지털 카메라(똑딱이) 입니다.
                
                렌즈를 교체 하거나 할 수 있는, dslr, 또는 미러리스가 아닙니다.
                
                다만 박혀있는 렌즈에 어댑터링과 컨버터 렌즈를 따로 구매해서
                
                추가로 이어 붙이는 형식으로
                
                광각, 망원(최대 50mm) 으로 사용할 수 있습니다.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://1.bp.blogspot.com/-ZW81id-krNI/XmycJ2oiNyI/AAAAAAAAAHQ/WXpCgPdpjfEn_PPrJDuyuuuXpJL01POewCEwYBhgL/s1600/2020-03-14-review-goods-fuji-x100v-06.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://1.bp.blogspot.com/-x1juzkIAuoI/XmycKbcOHFI/AAAAAAAAAG8/05GF0xitQxIX4CZJmMAU--VS6EkWeN5BQCEwYBhgL/s1600/2020-03-14-review-goods-fuji-x100v-07.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;                        lcd 화면을 최대로 뺀 모습니다.
                        
                        돌아가거나 하지는 않습니다.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://1.bp.blogspot.com/-0RbP_cYQN3E/XmycLJcko-I/AAAAAAAAAHA/v9_A8fFwJQMCteUIDRDhbEnb0HfomKCjgCEwYBhgL/s1600/2020-03-14-review-goods-fuji-x100v-08.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://1.bp.blogspot.com/-MHSzEtYmTz4/XmycLm2SkOI/AAAAAAAAAHE/4NoshjF-DJEZIGJDudUbiT46Vc0PnAyhQCEwYBhgL/s1600/2020-03-14-review-goods-fuji-x100v-09.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;필름시뮬레이션-클래식-네가티브&quot;&gt;﻿필름시뮬레이션 (클래식 네가티브)&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    오로지, 이 필름 색감이 좋아서
    
    캐논 풀프레임을 팔아버리고
    
    후지로 갈아탔습니다.
    
    따로 추가 보정 없이 카메라의 색감만으로 찍은 사진입니다
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://1.bp.blogspot.com/-VfVKptH99_A/XmycL4SjaJI/AAAAAAAAAHI/kvaK_n7Lwm4K72Ahdw_Y4G4zaj1NqLqMwCEwYBhgL/s1600/2020-03-14-review-goods-fuji-x100v-10.JPG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://1.bp.blogspot.com/-6RiWf3Z9Uew/XmycM5yu33I/AAAAAAAAAHM/3gmjue-LPb4M990tSvpgnYV34zvbZHCfQCEwYBhgL/s1600/2020-03-14-review-goods-fuji-x100v-11.JPG&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://m-veloper.github.io//review/2020/03/14/review-goods-fuji-x100v-02/&quot;&gt;x100v 어댑터링 사용법&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sat, 14 Mar 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/review/2020/03/14/review-goods-fuji-x100v-01/</link>
        <guid isPermaLink="true">http://localhost:4000/review/2020/03/14/review-goods-fuji-x100v-01/</guid>
        
        <category>goods</category>
        
        
        <category>review</category>
        
      </item>
    
      <item>
        <title>[유닉스] 기본 접근 권한 설정</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-13-unix-18.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;umask-명령을-이용한-기본-접근-권한-설정&quot;&gt;umask 명령을 이용한 기본 접근 권한 설정&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;기본-접근-권한&quot;&gt;기본 접근 권한&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;파일이나 디렉토리를 생성할 때 부여되는 접근 권한&lt;/li&gt;
  &lt;li&gt;일반 파일 생성시 소유자는 읽기와 쓰기 권한, 그룹과 기타 사용자는 읽기 권한 부여&lt;/li&gt;
  &lt;li&gt;디렉토리 생성시 소유자는 읽기, 쓰기, 실행 권한, 그룹과 기타 사용자는 읽기와 실행 권한 부여&lt;/li&gt;
  &lt;li&gt;유닉스 시스템에 설정된 기본값에 따라 부여됨.&lt;/li&gt;
  &lt;li&gt;설정된 값을 바꾸면 파일이 생성될 때 부여되는 접근 권한도 바꿀 수 있음&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;파일-생성-후-기본-접근-권한-확인&quot;&gt;파일 생성 후 기본 접근 권한 확인&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;파일 소유자와 그룹은 읽기, 쓰기 권한, 기타 사용자는 읽기 권한이 설정되어 있음&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ touch test1
  $ ls –l
  total 4
  -rw-rw-r-- 1 ksshin ksshin 0 6월 14 17:19 test1
  -rw-r--r-- 1 ksshin ksshin 221 6월 5 22:12 text
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;기본-접근-권한-설정&quot;&gt;기본 접근 권한 설정&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;umask 명령으로 실행&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;umask 명령&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;기본 접근 권한을 출력하거나 변경&lt;/li&gt;
      &lt;li&gt;형식 : umask [마스크 값]&lt;/li&gt;
      &lt;li&gt;사용 예 : umask 022, umask&lt;/li&gt;
      &lt;li&gt;인자로 주어지는 마스크 값은 파일이나 디렉토리 생성시 부여하지 않을 권한을 지정&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;인자 없이 umask 명령만 사용하면 설정된 기본 마스크 값을 보여줌&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ umask 077
  $ touch test2
  $ ls –l
  total 4
  -rw-rw-r-- 1 ksshin ksshin 0 6월 14 17:19 test1
  -rw------- 1 ksshin ksshin 0 6월 14 17:31 test2
  -rw-r--r-- 1 ksshin ksshin 221 6월 5 22:12 text
  $ umask
  077
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;

        &lt;ul&gt;
          &lt;li&gt;마스크 값을 077로 지정했을 때 소유자는 모든 권한이 부여되어야 하는데, test2 파일의 소유자에게 실행 권한이
  없는 이유 : 일반 파일이 가질 수 있는 최대 접근 권한이 666(rw-rw-rw-)이기 때문&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-13-unix-18-01.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;마스크-값&quot;&gt;마스크 값&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;마스크-값-1&quot;&gt;마스크 값&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;파일이나 디렉토리 생성시 부여하지 않을 권한을 지정하는 값&lt;/li&gt;
  &lt;li&gt;파일이 생성될 때마다 적용됨&lt;/li&gt;
  &lt;li&gt;마스크 값이 ‘1’인 경우에 대응하는 권한은 제외됨&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-13-unix-18-02.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;마스크-값-이용하여-접근-권한-계산&quot;&gt;마스크 값 이용하여 접근 권한 계산&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;일반 파일이 가질 수 있는 최대 접근 권한은 666(rw-rw-rw-)&lt;/li&gt;
  &lt;li&gt;현재 마스크 값이 002라면 666과 002를 마스킹한 결과는 664&lt;/li&gt;
  &lt;li&gt;마스크 값이 002일 때 일반 파일 생성하면 기본 접근 권한이 664가 됨&lt;/li&gt;
  &lt;li&gt;디렉토리가 가질 수 있는 최대 접근 권한 777&lt;/li&gt;
  &lt;li&gt;002를 마스킹하면 기본 접근 권한 775가 됨&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-13-unix-18-03.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;간단한-마스크-값-계산&quot;&gt;간단한 마스크 값 계산&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;최대 접근 권한에서 마스크 값을 빼는 것&lt;/li&gt;
  &lt;li&gt;일반 파일 : 666 – 002 = 664&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-13-unix-18-04.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;마스크-값의-의미&quot;&gt;마스크 값의 의미&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;유닉스의 기본 마스크 값은 022&lt;/li&gt;
  &lt;li&gt;사용자의 필요에 따라 적절히 변경해 자신의 파일과 디렉토리 보호&lt;/li&gt;
  &lt;li&gt;많이 사용되는 마스크 값은 022와 077&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-13-unix-18-05.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;기본-접근-권한-변경의-예&quot;&gt;기본 접근 권한 변경의 예&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;기본 접근 권한 확인&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ umask
  0022
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;파일과 디렉토리를 생성해 권한 확인&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ mkdir tmp
  $ touch test
  $ ls -l
  total 8
  -rw-r--r-- 1 ksshin ksshin 0 6월 14 19:35 test
  -rw-r--r-- 1 ksshin ksshin 221 6월 5 22:12 text
  drwxr-xr-x 2 ksshin ksshin 4096 6월 14 19:35 tmp
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;기본 접근 권한 변경 : 기타 사용자의 권한을 없애도록 변경&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ umask 027
  $ umask
  0027
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;umask로 마스크 값을 변경할 때 주의할 점&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;파일과 디렉토리에 모두 적용해 보아야 함&lt;/li&gt;
      &lt;li&gt;파일에는 적당하지만 디렉토리에 적당하지 않을 경우 발생&lt;/li&gt;
      &lt;li&gt;예, 마스크 값이 026일 경우 파일은 640으로 적합, 디렉토리는 751로 기타 사용자의 접근 권한이 이상해짐&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;변경된 접근 권한 적용 확인&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ mkdir tmp2
  $ touch test2
  $ ls -l
  total 12
  -rw-r--r-- 1 ksshin ksshin 0 6월 14 19:35 test
  -rw-r----- 1 ksshin ksshin 0 6월 14 19:44 test2
  -rw-r--r-- 1 ksshin ksshin 221 6월 5 22:12 text
  drwxr-xr-x 2 ksshin ksshin 4096 6월 14 19:35 tmp
  drwxr-x--- 2 ksshin ksshin 4096 6월 14 19:44 tmp2
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;소유자-변경&quot;&gt;소유자 변경&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;chown 명령&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;파일이나 디렉토리의 소유자 변경&lt;/li&gt;
      &lt;li&gt;오직 슈퍼유저만이 파일이나 디렉토리의 사용자 변경할 수 있음&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;형식 : chown [option] owner filenames&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ chown user1 test
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;그룹-변경&quot;&gt;그룹 변경&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;chgrp 명령&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;파일이나 디렉토리가 속한 그룹 변경&lt;/li&gt;
      &lt;li&gt;지정하는 그룹은 반드시 소유자가 들어 있는 그룹 중 하나라야 함. 즉, 사용자의 주 그룹이나 부 그룹 중 하나라야함.&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;user1이라는 사용자가 test 파일을 소유하고 있고 속한 그룹이 user이며, staff 그룹에도 속한다고 할 때 다음과 같이 변경 가능&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ chgrp staff test
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 13 Mar 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/devlog/2020/03/13/unix-18/</link>
        <guid isPermaLink="true">http://localhost:4000/devlog/2020/03/13/unix-18/</guid>
        
        <category>unix</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[유닉스] 접근 권한 변경</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-13-unix-17.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;기호를-이용한-파일-접근-권한-변경&quot;&gt;기호를 이용한 파일 접근 권한 변경&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;chmod-명령&quot;&gt;chmod 명령&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;파일의 사용 권한 변경&lt;/li&gt;
  &lt;li&gt;형식 : chmod [옵션] 권한모드 파일/디렉토리명&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;옵션&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;-R : 하위 디렉토리까지 모두 변경&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;두 가지 동작 모드&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;기호 모드 : 접근 권한을 변경하기 위해 문자와 기호를 이용해 권한을 표시&lt;/li&gt;
      &lt;li&gt;숫자 모드 : 접근 권한을 변경하기 위해 8진수를 사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;기호-모드를-이용한-권한-변경&quot;&gt;기호 모드를 이용한 권한 변경&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;기호 모드에서는 카테고리와 권한을 모두 문자로 표현&lt;/li&gt;
  &lt;li&gt;기호 모드는 세 가지 항목으로 구성&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-13-unix-17-01.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;사용자 카테고리 : 소유자, 그룹, 기타 사용자를 나타내는 문자로 표기&lt;/li&gt;
  &lt;li&gt;연산자 : 권한 부여나 권한 제거를 나타내는 기호로 표기&lt;/li&gt;
  &lt;li&gt;권한 : 읽기, 쓰기, 실행을 나타내는 문자를 사용&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-13-unix-17-02.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;권한-변경의-예&quot;&gt;권한 변경의 예&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;u+w : 소유자(u)에게 쓰기(w) 권한 설정(+)&lt;/li&gt;
  &lt;li&gt;u-x : 소유자(u)의 실행(x) 권한 제거(-)&lt;/li&gt;
  &lt;li&gt;g+w : 그룹(g)에게 쓰기(w) 권한 설정(+)&lt;/li&gt;
  &lt;li&gt;o-r : 기타 사용자(o)의 읽기(r) 권한 제거(-)&lt;/li&gt;
  &lt;li&gt;g+wx : 그룹(g)에게 쓰기(w)와 실행(x) 권한 설정(+)&lt;/li&gt;
  &lt;li&gt;+wx : 모든 사용자에게 쓰기(w)와 실행(x) 권한 설정(+)&lt;/li&gt;
  &lt;li&gt;a+rwx : 모든 사용자(a)에게 읽기(r), 쓰기(w), 실행(x) 권한 설정(+)&lt;/li&gt;
  &lt;li&gt;u=rwx : 소유자(u)에게 읽기(r), 쓰기(w), 실행(x) 권한 설정(=)&lt;/li&gt;
  &lt;li&gt;go+w : 그룹(g)과 기타 사용자(o)에게 쓰기(w) 권한 설정(+)&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;u+x, go+w : 소유자(u)에게 실행(x) 권한을 부여하고(+) 그룹(g)과 기타 사용자(o)에게 쓰기(w) 권한 설정(+)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;text라는 파일의 그룹에게 쓰기 권한 추가 (g+w)&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ ls –l text
  -rw-r--r-- 1 ksshin ksshin 221 6월 5 22:12 text
  $ chmod g+w text
  $ ls –l text
  -rw-rw-r-- 1 ksshin ksshin 221 6월 5 22:12 text
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;그룹에 대한 쓰기 권한 제거 (g-w)&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ chmod g-w text
  $ ls –l text
  -rw-r--r-- 1 ksshin ksshin 221 6월 5 22:12 text
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;그룹과 기타 사용자에게 쓰기 권한 부여 (go+w)&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ chmod go+w text
  $ ls –l text
  -rw-rw-rw- 1 ksshin ksshin 221 6월 5 22:12 text
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;사용자와 그룹의 권한을 같게 하기 (o=g)&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ chmod o=g text
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;모두에게 실행 권한 부여 (a+x)&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ chmod a+x text
  $ ls –l text
  -rwxrwxrwx 1 ksshin ksshin 221 6월 5 22:12 text
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;숫자를-이용한-파일-접근-권한-변경&quot;&gt;숫자를 이용한 파일 접근 권한 변경&lt;/h1&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;기호-모드와-숫자-모드의-비교&quot;&gt;기호 모드와 숫자 모드의 비교&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;소유자나 그룹, 기타 사용자별로 특정 권한을 부여하거나 제거할 때는 기호 모드가 편리&lt;/li&gt;
  &lt;li&gt;전체적으로 권한을 조정할 때는 문자의 조합이 복잡해짐&lt;/li&gt;
  &lt;li&gt;숫자 모드로 사용하면, 소유자, 그룹, 기타 사용자의 권한을 한번에 원하는대로 변경할 수 있어 편리함&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;8진수로-환산하기&quot;&gt;8진수로 환산하기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;숫자 모드에서는 카테고리와 권한을 모두 숫자로 표현&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-13-unix-17-03.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;권한 묶음(rwx)을 8진수로 표현&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;읽기, 쓰기, 실행 권한 각각에 대해 권한 있으면 1, 없으면 0으로 환산&lt;/li&gt;
      &lt;li&gt;각 자리수별로 8진수로 환산 후 세 숫자의 합을 계산&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;접근-권한-표기와-8진수-숫자의-대응-관계&quot;&gt;접근 권한 표기와 8진수 숫자의 대응 관계&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;7, 6, 5, 4, 0의 형태가 자주 사용되고, 1, 2, 3은 거의 사용되지 않음&lt;/li&gt;
  &lt;li&gt;소유자 권한, 그룹 권한, 기타 사용자 권한을 각각 8진수로 계산하면 전체 접근 권한을 나타내는 숫자 세 개가 나옴&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-13-unix-17-04.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;숫자 모드로 표현한 접근 권한의 대표적인 형태&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;chmod 명령의 숫자 모드에서 사용하는 형태&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-13-unix-17-05.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;숫자-모드를-이용한-접근-권한-변경&quot;&gt;숫자 모드를 이용한 접근 권한 변경&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;8진수 3자리를 사용&lt;/li&gt;
  &lt;li&gt;숫자의 각 위치가 사용자 카테고리를 표시하므로, 사용자 카테고리를 따로 지정할 필요 없음&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-13-unix-17-05.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Fri, 13 Mar 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/devlog/2020/03/13/unix-17/</link>
        <guid isPermaLink="true">http://localhost:4000/devlog/2020/03/13/unix-17/</guid>
        
        <category>unix</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[유닉스] 파일의 속성</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-13-unix-16.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;파일의-속성&quot;&gt;파일의 속성&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;파일-접근-권한의-개요&quot;&gt;파일 접근 권한의 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;다중 사용자 시스템인 유닉스에서 다른 사용자의 파일을 마음대로 사용할 수 없도록 하는 보안 기능 제공&lt;/li&gt;
  &lt;li&gt;사용자가 자신의 파일에 접근 권한 부여&lt;/li&gt;
  &lt;li&gt;부여된 권한만큼만 파일 사용 가능&lt;/li&gt;
  &lt;li&gt;접근 권한은 파일이 가지고 있는 속성 중 하나&lt;/li&gt;
  &lt;li&gt;권한 대상 : 파일의 사용자(소유자), 소유자가 속한 그룹, 그 밖의 사용자&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-13-unix-16-01.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;파일-모드&quot;&gt;파일 모드&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;숫자로 표현한 권한
&lt;img src=&quot;/assets/img/unix/2020-03-13-unix-16-02.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;파일의-속성-1&quot;&gt;파일의 속성&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;파일의 속성을 알기 위해 ‘ls –l’ 명령 사용&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ ls –l
  total 1
  -rw-r--r-- 1 ksshin ksshin 221 6월 5 22:12 text
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-13-unix-16-03.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;파일 종류&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;파일 속성의 첫 번째 항목&lt;/li&gt;
      &lt;li&gt;-는 일반 파일, d는 디렉토리 파일, l은 심볼릭 링크 파일 등&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;파일의 종류를 알려주는 명령 : file&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;i) 형식 : file 파일명&lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;ii) 사용 예 : file /etc/hosts&lt;/p&gt;

            &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ file test Unix
  test: ASCII text
  Unix: directory
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;파일 접근 권한&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;파일의 소유자와 그룹, 기타 사용자들이 파일에 대해 가지고 있는 접근 권한을 표시&lt;/li&gt;
      &lt;li&gt;접근 권한은 파일 소유자가 chmod 명령을 사용해 변경 가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;하드 링크 수&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;하나의 file에 연결된 파일 이름의 개수&lt;/li&gt;
      &lt;li&gt;하드 링크는 한 파일에 여러 개의 파일명을 가질 수 있도록 하는 기능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;파일 소유자의 사용자 이름&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;유닉스에서는 모든 파일에 소유자가 있음&lt;/li&gt;
      &lt;li&gt;시스템 관련된 파일들은 대부분 루트 계정이 소유자&lt;/li&gt;
      &lt;li&gt;일반 파일들은 해당 파일을 생성한 사용자가 소유자&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;파일이 속한 그룹 이름&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;사용자는 기본적으로 하나 이상의 그룹에 속해 있음&lt;/li&gt;
      &lt;li&gt;‘ls –l’ 명령의 결과에서 나온 그룹명은 파일이 속한 그룹 이름&lt;/li&gt;
      &lt;li&gt;사용자가 속한 그룹은 시스템 관리자가 사용자 등록시 결정&lt;/li&gt;
      &lt;li&gt;사용자가 임의로 자신의 그룹을 바꿀 수 없고 시스템 관리자에게 변경 요청&lt;/li&gt;
      &lt;li&gt;그룹이 정의된 파일은 /etc/group으로 시스템 관리자만 수정 가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;파일 크기&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;파일의 크기를 바이트 단위로 알려줌&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;파일의 마지막 수정 일시&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;파일이 마지막으로 수정된 날짜와 시각을 표시&lt;/li&gt;
      &lt;li&gt;연도가 표시되지 않으면 올해를 의미&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;파일의-접근-권한&quot;&gt;파일의 접근 권한&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;개요&quot;&gt;개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;접근 권한은 사용자의 파일을 보호하는 가장 기본적인 보안 기능&lt;/li&gt;
  &lt;li&gt;접근 권한을 부여하기 위해 사용자를 세 카테고리로 구분&lt;/li&gt;
  &lt;li&gt;세 카테고리 : 파일의 소유자, 파일이 속한 그룹, 기타 사용자&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-13-unix-16-04.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;소유자&quot;&gt;소유자&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;파일을 생성한 사용자가 파일의 소유자임&lt;/li&gt;
  &lt;li&gt;파일의 소유자나 시스템 관리자가 명령을 이용하여 소유자 변경 가능&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;그룹&quot;&gt;그룹&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;파일과 동일한 그룹에 속한 사용자들&lt;/li&gt;
  &lt;li&gt;보통은 파일을 생성한 사용자의 기본 그룹으로 지정&lt;/li&gt;
  &lt;li&gt;root가 명령을 이용해 강제로 변경 가능&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;기타-사용자&quot;&gt;기타 사용자&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;소유자나 그룹 카테고리에 속하지 않은 사용자&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;접근-권한의-종류&quot;&gt;접근 권한의 종류&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;읽기 권한, 쓰기 권한, 실행 권한 세 가지로 구성&lt;/li&gt;
  &lt;li&gt;파일과 디렉토리에 대해 다른 의미로 해석됨&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-13-unix-16-05.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;접근-권한-표기&quot;&gt;접근 권한 표기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;사용자 카테고리별로 누가 파일을 읽고 쓰고 실행할 수 있는지를 문자로 표현한 것&lt;/li&gt;
  &lt;li&gt;사용자 카테고리별로 세가지 권한의 부여 여부를 rwx 세 문자를 이용해 그 순서대로 표시&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;해당 권한이 없을 경우 –로 표기&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ ls –l
  total 1
  -rw-r--r-- 1 ksshin ksshin 221 6월 5 22:12 text
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-13-unix-16-06.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;소유자의 권한은 rw-, 그룹의 권한은 가운데의 r–, 기타 사용자의 권한은 마지막의 r–&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-13-unix-16-07.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Fri, 13 Mar 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/devlog/2020/03/13/unix-16/</link>
        <guid isPermaLink="true">http://localhost:4000/devlog/2020/03/13/unix-16/</guid>
        
        <category>unix</category>
        
        
        <category>devlog</category>
        
      </item>
    
  </channel>
</rss>
