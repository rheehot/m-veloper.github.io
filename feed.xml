<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>m_veloper</title>
    <description></description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 18 Feb 2020 22:45:01 +0900</pubDate>
    <lastBuildDate>Tue, 18 Feb 2020 22:45:01 +0900</lastBuildDate>
    <generator>Jekyll v3.8.6</generator>
    
      <item>
        <title>[유닉스] 명령어</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-02-18-unix-03.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;사용자-계정-관리&quot;&gt;사용자 계정 관리&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;시스템 관리자 또는 슈퍼유저(superuser)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;유닉스 시스템은 여러 사용자가 하나의 시스템을 사용하는 다중 사용자 시스템이므로 전체 시스템을 관리하는 시스템 관리자 필요&lt;/li&gt;
      &lt;li&gt;root 계정을 사용하여 로그인&lt;/li&gt;
      &lt;li&gt;사용자 계정을 추가, 삭제, 사용자 패스워드 변경&lt;/li&gt;
      &lt;li&gt;소프트웨어 설치, 로그 파일 검사 등 전체 시스템 관리와 유지보수&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;일반 사용자가 슈퍼유저로 로그인 : su 명령어 사용하여 root 계정으로 로그인&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ su [사용자명]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;사용자 계정 등록&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;로그인 ID : 영문 소문자를 사용하여 8자까지 가능&lt;/li&gt;
      &lt;li&gt;비밀번호 : 최소 하나 이상의 숫자와 알파벳을 사용하여 최소 6자 이상을 허용&lt;/li&gt;
      &lt;li&gt;로그인 ID와 초기 비밀번호는 시스템 관리자가 지정&lt;/li&gt;
      &lt;li&gt;비밀번호는 사용자가 변경 가능(passwd 명령)&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;사용자 계정 추가&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  # useradd [옵션] [사용자명]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;

        &lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-02-18-unix-03-01.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;
  &lt;br /&gt;&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;그룹 추가, 삭제&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;사용자는 하나 이상의 그룹에 속하게 됨&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;그룹 추가&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   # groupadd 그룹명
         
   /etc/group 파일에 해당 그룹에 대한 정보가 추가됨
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;그룹 삭제&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  # groupdel 그룹명
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;쉘 프롬프트&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;로그인이 성공하면 시스템은 사용자의 입력을 기다림&lt;/li&gt;
      &lt;li&gt;대기 상태는 프롬프트와 커서로 표시&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;프롬프트&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &quot;#&quot; : 현재 로그인한 사용자가 시스템 관리자(root)임을 나타냄
  &quot;$&quot; : 본(Bourne) 쉘 또는 콘(Korn) 쉘에서 사용
  &quot;%&quot; : C 쉘에서 사용
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;프롬프트 모양은 변경 가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;쉘&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;명령어 해석기(command processor)&lt;/li&gt;
      &lt;li&gt;사용자가 입력하는 명령을 읽고 해석하는 프로그램&lt;/li&gt;
      &lt;li&gt;‘스크립트(script)’라는 프로그램을 해석&lt;/li&gt;
      &lt;li&gt;Bourne 쉘을 기본으로 사용, C 쉘, Korn 쉘, Bash 쉘&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;홈 디렉토리&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;유닉스 시스템에서 사용자가 로그인한 직후의 디렉토리가 사용자의 홈 디렉토리&lt;/li&gt;
      &lt;li&gt;사용자는 홈 디렉토리 아래에 자신이 원하는 파일이나 디렉토리를 생성하여 작업&lt;/li&gt;
      &lt;li&gt;사용자의 홈 디렉토리는 사용자 계정 등록할 때 결정&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;명령행 편집 방법&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;유닉스, 리눅스는 대문자와 소문자를 구별함&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;문자 지우기&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  ← 키나 Delete 키를 사용
  유닉스 종류에 따라 기본값 설정이 다름
  ← 키 눌렀는데 “^H”만 나오면 Delete 키가 기본값으로 설정된 경우, Delete 키나 Ctrl + ? 키로 지울 수 있음
  Delete 키 눌렀는데 “^?”가 나오면 ← 키가 기본값으로 설정된 경우
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;단어 지우기&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  Ctrl + W 키를 사용하여 단어 삭제
  단어는 공백으로 구분
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;문장 지우기&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  Ctrl + U 키를 사용하여 해당 행의 내용을 모두 삭제
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;로그아웃&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;작업 후 로그아웃(logout)을 하여 세션(session)을 종료&lt;/li&gt;
      &lt;li&gt;exit, logout 명령 사용&lt;/li&gt;
      &lt;li&gt;Ctrl + D 키는 강제 종료. 파일의 끝이라는 신호를 보내게 되므로 쉘을 끝내고 로그아웃됨&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Tue, 18 Feb 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/2020/02/18/unix-03/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/2020/02/18/unix-03/</guid>
        
        <category>unix</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[유닉스] 특징 및 구조</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-02-18-unix-02.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;유닉스의-특징&quot;&gt;유닉스의 특징&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;단순성&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;운영체제 자체를 단순화시켜 최소한의 필요한 기능만 제공&lt;/li&gt;
      &lt;li&gt;자원에 관한 일관성 있는 관점 제공, 주변 장치를 파일과 같은 형식으로 사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;이식성과 확장성&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;고급 언어인 C로 작성되어 다양한 플랫폼에 이식하여 사용 가능&lt;/li&gt;
      &lt;li&gt;각 기능이 모듈화되어 있어 새 기능 추가시 모듈만 추가하면 됨&lt;/li&gt;
      &lt;li&gt;주요 유닉스 계열의 운영체제
 – 안드로이드(Adroid) OS
 – iOS
 – 맥(Mac) OS X
 – 리눅스(Linux)
 – BSD 유닉스(Unix)
 – 시스템 V
 – Sun 솔라리스(Solaris)
 – IBM AIX
 – HP HP-UX
 – Cray 유니코스(Unicos)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;개방성&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;소스 코드 공개&lt;/li&gt;
      &lt;li&gt;대학에서 유닉스를 기반으로 여러 가지 유용한 소프트웨어 개발, 보급&lt;/li&gt;
      &lt;li&gt;유닉스의 양적, 질적인 면에서 폭발적 성장을 촉진하는 원동력&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;대화형 시스템&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;명령어 기반 사용자 인터페이스 이용&lt;/li&gt;
      &lt;li&gt;유닉스가 이해할 수 있는 ‘명령’을 사람이 입력, 유닉스는 명령 처리 결과를 화면에 출력&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;다중 사용자 시스템, 다중 작업용 시스템&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;여러 사용자가 컴퓨터에 동시에 접속하여 사용할 수 있는 운영체제&lt;/li&gt;
      &lt;li&gt;사용자들은 직렬 회선(Serial Cable)으로 연결된 단말기를 통해 유닉스에 접속&lt;/li&gt;
      &lt;li&gt;한 대의 컴퓨터에서 여러 작업을 동시에 수행&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;쉘 스크립트&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;유닉스 명령어나 유틸리티 등을 사용하여 프로그램을 작성하여 사용&lt;/li&gt;
      &lt;li&gt;큰 작업을 수행할 때 기존의 작은 프로그램들을 적절히 결합하여 수행하는 방식&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;다양한 부가 기능 제공&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;ftp, telnet, www 등 다양한 네트워크 관련 응용 프로그램 제공&lt;/li&gt;
      &lt;li&gt;웹 서버, DB 서버, 메일 서버, 뉴스 서버, 네임 서버 등 네트워크 서버 기능 지원&lt;/li&gt;
      &lt;li&gt;프로그래밍 및 디버깅 도구, 문서 편집 도구, 출력 관련 도구 제공&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;유닉스-리눅스의-활용-분야&quot;&gt;유닉스, 리눅스의 활용 분야&lt;/h1&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;서버&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;웹 서버, DB 서버, 파일 서버, 메일 서버, 뉴스 서버, 네임 서버, 클러스터링 등&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;임베디드 시스템&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;통신 단말기 : 휴대폰, PDA, PMP, 무선 IP 공유기, IPTV 셋탑박스, 인터넷폰 등&lt;/li&gt;
      &lt;li&gt;네트워크 장비 : 스위치, 방화벽, 게이트웨이 등&lt;/li&gt;
      &lt;li&gt;가전 제품 : DVD Player, MP3 Player 등&lt;/li&gt;
      &lt;li&gt;생산 설비 : 홈오토메이션, 공장 자동화, 산업용 로봇 등&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;유닉스-시스템의-구조&quot;&gt;유닉스 시스템의 구조&lt;/h1&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;유닉스 시스템의 구조&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;구성요소 : 하드웨어, 커널, 쉘 및 라이브러리, 사용자 및 응용 프로그램&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-02-18-unix-02-01.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;커널&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;운영체제의 핵심&lt;/li&gt;
      &lt;li&gt;하드웨어를 운영 관리&lt;/li&gt;
      &lt;li&gt;프로세스 관리 (Process management)
 – 여러 개의 응용 프로그램들이 동시에 수행되는 것처럼 실행될 수 있도록 프로세스 스케줄링&lt;/li&gt;
      &lt;li&gt;파일 관리 (File management)
 – 디스크 상에 파일 시스템을 구성하여 파일을 관리&lt;/li&gt;
      &lt;li&gt;메모리 관리 (Memory management)
 – 메인 메모리가 효과적으로 사용될 수 있도록 관리&lt;/li&gt;
      &lt;li&gt;통신 관리 (Communication management)
 – 네트워크를 통해 정보를 주고 받을 수 있도록 관리&lt;/li&gt;
      &lt;li&gt;주변 장치 관리 (Device management)
 – 모니터, 키보드, 마우스와 같은 장치를 사용할 수 있도록 관리&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;시스템 호출(system call)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;커널이 제공하는 서비스에 대한 프로그래밍 인터페이스 역할&lt;/li&gt;
      &lt;li&gt;시스템 호출에 기반하여 공통적인 함수들의 모음인 라이브러리 존재&lt;/li&gt;
      &lt;li&gt;응용 프로그램은 필요시 시스템 호출과 라이브러리를 자유롭게 사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;쉘&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;사용자와 커널 사이의 중간자 역할&lt;/li&gt;
      &lt;li&gt;사용자가 입력한 명령을 해석하여 커널에 전달&lt;/li&gt;
      &lt;li&gt;커널이 명령 수행 결과를 돌려주면 사용자에게 전달&lt;/li&gt;
      &lt;li&gt;본 쉘(sh, Bourne Shell), C 쉘(csh, C Shell), 콘 쉘(kch, Korn Shell), 배시 쉘(bash, Bourne Again Shell)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;사용자 및 응용 프로그램, 유틸리티&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;사용자가 개발한 프로그램, 응용 프로그램&lt;/li&gt;
      &lt;li&gt;각종 개발 도구, 문서 편집 도구, 네트워크 관련 도구&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Tue, 18 Feb 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/2020/02/18/unix-02/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/2020/02/18/unix-02/</guid>
        
        <category>unix</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[유닉스] 역사와 발전</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-02-18-unix-01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;유닉스와-리눅스의-탄생&quot;&gt;유닉스와 리눅스의 탄생&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;운영체제란&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;컴퓨터 시스템을 제어하는 프로그램들의 집합&lt;/li&gt;
      &lt;li&gt;하드웨어와 사용자 또는 응용 프로그램 사이에 위치&lt;/li&gt;
      &lt;li&gt;하드웨어와 사용자 또는 응용 프로그램이 쉽고 편리하게 컴퓨터 시스템을 이용할 수 있도록 컴퓨터 시스템을 제어하고 관리&lt;/li&gt;
      &lt;li&gt;초기 운영체제는 단일 사용자 형태&lt;/li&gt;
      &lt;li&gt;유닉스를 시작으로 다중 사용자, 다중 작업 운영체제로 발전&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;유닉스(UNIX)의 탄생&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;1969년 벨연구소의 켄 톰슨(Ken Thompson)과 데니스 리치(Dennis Ritchie)가 개발&lt;/li&gt;
      &lt;li&gt;1973년 어셈블리 언어에서 C 언어로 변경&lt;/li&gt;
      &lt;li&gt;대학을 중심으로 유닉스를 많이 이용하여 무료로 제공&lt;/li&gt;
      &lt;li&gt;AT&amp;amp;T가 벨연구소를 인수하게 되면서 유닉스를 상용으로 공급&lt;/li&gt;
      &lt;li&gt;AT&amp;amp;T 유닉스 버전과 BSD(Berkeley Software Distribution) UNIX 버전 발표&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;리눅스(Linux)의 탄생&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;1991년 핀란드 헬싱키 대학의 리누스 토발즈(Linus Torvalds)가 개발&lt;/li&gt;
      &lt;li&gt;PC에서도 사용할 수 있는 UNIX와 같은 운영체제 개발&lt;/li&gt;
      &lt;li&gt;뉴스그룹 구성원들과 전세게 네티즌들에게 리눅스 커널(kernel) 부분의 소스 파일을 공개하여 아이디어를 공유, 문제점 개선 등으로 만들어짐&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;유닉스와-리눅스의-탄생-1&quot;&gt;유닉스와 리눅스의 탄생&lt;/h1&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;유닉스의 발전 과정&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-02-18-unix-01-01.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;유닉스의 종류&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;시스템 V&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;AT&amp;amp;T 벨연구소에서 개발한 UNIX&lt;/li&gt;
          &lt;li&gt;상업 제품으로, IBM의 AIX, Sun(2009년 Oracle에 합병됨)의 Solaris, HP의 HP-UX&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;BSD 유닉스&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;버클리 대학교에서 발전됨&lt;/li&gt;
          &lt;li&gt;메모리 관리 기능 향상&lt;/li&gt;
          &lt;li&gt;TCP/IP, 소켓(Socket) 등 네트워킹 기능 추가&lt;/li&gt;
          &lt;li&gt;HP나 Sun Microsystems 같은 회사에서 많이 사용&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;솔라리스
        &lt;ul&gt;
          &lt;li&gt;Sun 사에 의해 출시됨&lt;/li&gt;
          &lt;li&gt;Sparc CPU 전용 운영체제에서 인텔용 솔라리스도 출시&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;리눅스&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;레드햇(RedHat) 사의 레드햇(RedHat)과 페도라(Fedora), 캐노니컬(Canonical) 사의 우분투(Ubuntu), 그리고, 데비안(Debian), CentOS 등&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;맥 OS
        &lt;ul&gt;
          &lt;li&gt;1984년 애플 컴퓨터의 매킨토시 컴퓨터용 운영체제로 개발&lt;/li&gt;
          &lt;li&gt;NexTSTEP 운영체제와 BSD 유닉스 기반으로 맥 OS X (맥 오에스 텐으로 발음함) 개발&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;모바일 기기용 운영체제&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;안드로이드 : 리눅스 기반, 소스 코드 공개&lt;/li&gt;
          &lt;li&gt;iOS : 맥 OS X 기반, 소스 코드 비공개, 애플사의 모바일 기기(iphone, iPad, iPod)에서 사용&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;리눅스 커널&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;커널은 리눅스 운영체제의 핵심이 되는 부분&lt;/li&gt;
      &lt;li&gt;커널의 버전
 – 안정 버전(Stable Version)과 개발 버전(Development Version)으로 구분
 – 안정 버전 : 개발 완료된 코드로 구성된 버전
 – 개발 버전 : 현재 개발 중인 버전, 상대적으로 불안정&lt;/li&gt;
      &lt;li&gt;파일 이름에서 커널 표시
 – 파일 이름 : linux-3.7.1.tar
 – ‘3’은 주 버전 (Major Version)
 – ‘7’은 부 버전 (Minor Version)
 – ‘1’은 패치 버전 (Patch Version)
 – ‘linux-3.7.1.xx’의 경우 ‘xx’는 사소한 개정이 있을 경우&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;배포판(Distribution)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;커널을 기반으로 GNU 프로젝트의 라이브러리와 도구들을 패키지화시킨 것&lt;/li&gt;
      &lt;li&gt;사용 목적에 따라 무수히 많은 종류의 배포판 존재&lt;/li&gt;
      &lt;li&gt;국외 리눅스 배포판&lt;/li&gt;
      &lt;li&gt;국내 리눅스 배포판&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;슬랙웨어(Slackware)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;1993년 패트릭 폴커딩(Patrick Volkerding)에 의해 처음 릴리즈됨&lt;/li&gt;
      &lt;li&gt;높은 수준의 안전성과 보안성&lt;/li&gt;
      &lt;li&gt;사용자 인터페이스 환경이 화려하지 않고 텍스트 기반&lt;/li&gt;
      &lt;li&gt;리눅스를 좀더 깊이 공부하고 싶은 사람에게 추천&lt;/li&gt;
      &lt;li&gt;홈페이지 : http://www.slackware.com 미국&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;레드햇(RedHat)
    &lt;ul&gt;
      &lt;li&gt;가장 인기 있는 배포판&lt;/li&gt;
      &lt;li&gt;RedHat Linux 9 버전까지만 소스 공개&lt;/li&gt;
      &lt;li&gt;RedHat Enterprise Linux는 유료 배포판&lt;/li&gt;
      &lt;li&gt;홈페이지 : http://www.redhat.com 미국&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;페도라(Fedora)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;레드햇 회사에서 후원하고 Fedora 커뮤니티에서 개발하는 무료 배포판&lt;/li&gt;
      &lt;li&gt;국내에서 가장 인기 있는 배포판&lt;/li&gt;
      &lt;li&gt;빠르고, 안정적이고, 강력한 운영체제&lt;/li&gt;
      &lt;li&gt;홈페이지 : http://fedoraproject.org 미국&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;데비안(Debian GNU/Linux)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;자원 봉사 모임인 데비안 프로젝트(Debian Project)에서 만들어 배포하는 공개 운영체제&lt;/li&gt;
      &lt;li&gt;가장 강력한 패키지 관리 시스템&lt;/li&gt;
      &lt;li&gt;Intel, Alpha, Sparc, PowerPC 등 다양한 아키텍처 지원&lt;/li&gt;
      &lt;li&gt;100% 자유 소프트웨어를 유지&lt;/li&gt;
      &lt;li&gt;데비안으로 작성된 프로그램을 무료로 라이선스 공개&lt;/li&gt;
      &lt;li&gt;홈페이지 : http://www.debian,.org&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;우분투(Ubuntu)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;데스크탑에서 쉬운 리눅스를 사용하기 위해 만들어짐&lt;/li&gt;
      &lt;li&gt;데비안 리눅스를 기반으로 사용자가 손쉽게 사용할 수 있도록 함&lt;/li&gt;
      &lt;li&gt;개인용 컴퓨터 사용자와 개발자에게 가장 인기&lt;/li&gt;
      &lt;li&gt;우분투 : 남아프리카 줄루족의 말, “네가 있으니 내가 있다”는 뜻&lt;/li&gt;
      &lt;li&gt;홈페이지 : http://www.ubuntu.com&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;수세 리눅스(SuSE-Linux)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;독일업체 수세(S.u.S.E)에서 개발된 배포판&lt;/li&gt;
      &lt;li&gt;레드햇 리눅스와 함께 인기 있는 상용 배포판&lt;/li&gt;
      &lt;li&gt;2003년 수세는 노벨(Novell)에 인수됨&lt;/li&gt;
      &lt;li&gt;홈페이지 : http://www.novell.com/linux 독일&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;CentOS(Community ENTerprise Operating System)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;레드햇 엔터프라이즈 배포판을 기반으로 하는 무료 운영체제&lt;/li&gt;
      &lt;li&gt;웹 서버용으로 가장 많이 사용&lt;/li&gt;
      &lt;li&gt;홈페이지 : http://www.centos.org&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;국내 리눅스 배포판&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;레드햇 리눅스를 기반으로 한글 인터페이스를 제공한 배포판
– 파워 리눅스, K-리눅스, 알짜 리눅스, 미지 리눅스, 와우 리눅스 등
– 현재는 제공되지 않음&lt;/li&gt;
      &lt;li&gt;아시아눅스(Asianux)
– 한국, 중국, 일본의 아시아 기업들이 협력하여 만들었음
– 한컴 리눅스, 홍기 리눅스(중국), 미라클 리눅스(일본)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;유닉스와-리눅스의-탄생-2&quot;&gt;유닉스와 리눅스의 탄생&lt;/h1&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;GNU, GNU 프로젝트&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;GNU’s Not Unix, 즉 ‘GNU는 유닉스가 아니다’라는 뜻&lt;/li&gt;
      &lt;li&gt;1984년 리처드 스톨먼(Richard Matthew Stallman)을 주축으로 유닉스와 호환되면서 더 강력한 운영체제를 만들고자 하는 프로젝트 시작&lt;/li&gt;
      &lt;li&gt;‘모두가 공유할 수 있는 소프트웨어’를 만드는 것을 모티브로 출발&lt;/li&gt;
      &lt;li&gt;GNU C 컴파일러인 gcc, 문서편집기인 emacs, X 윈도우 데스크탑 환경인 GNOME, tar를 개조한 GNU tar 등 응용 프로그램을 만듦&lt;/li&gt;
      &lt;li&gt;소프트웨어의 상업화에 반대해 소프트웨어를 자유롭게 사용하도록 하는 것이 목적&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;자유 소프트웨어 재단 FSF(Free Software Foundation)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;1985년 리처드 스톨먼이 세운 비영리 조직&lt;/li&gt;
      &lt;li&gt;‘구속되지 않는다‘는 관점에서 프로그램의 변경이나 수정의 자유를 의미&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Copyleft와 GNU GPL(General Public License)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;Copyleft
 – 저작권(Copyright)의 반대를 뜻하는 의미로 사용
 – 프로그램의 제작, 배포에 대한 권리를 모든 사람에게 허용&lt;/li&gt;
      &lt;li&gt;GNU GPL
 – GNU 소프트웨어에서 Copyleft를 실제로 구현한 라이선스를 의미
 – GNU 정신에 입각하여 자유 소프트웨어를 보호, 실제로 Copyleft를 담보할 수 있는 법률적 허가권&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;커널(kernel)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;운영체제의 핵심으로, 시스템이 부팅될 때 로드&lt;/li&gt;
      &lt;li&gt;시스템의 하드웨어 제어&lt;/li&gt;
      &lt;li&gt;자원 스케줄링, 실행중인 프로그램 관리, 자료 관리&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Tue, 18 Feb 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/2020/02/18/unix-01/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/2020/02/18/unix-01/</guid>
        
        <category>unix</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[Database] 개체, 개체 타입과 속성</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-17-database-06.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;개체와-개체타입&quot;&gt;개체와 개체타입&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;개체 타입 (Entity Type)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;비슷한 속성을 가진 개체&lt;/li&gt;
      &lt;li&gt;개체를 이름과 속성으로 정의한 것&lt;/li&gt;
      &lt;li&gt;파일시스템이나 데이터베이스의 레코드 타입 (Record Type)&lt;/li&gt;
      &lt;li&gt;프로그래밍언어의 데이터타입과 유사&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;유형&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;강한 개체 (Strong Entity) : 다른 개체의 도움 없이 독자적으로 존재하는 개체&lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;약한 개체 (Weak Entity) :&lt;/p&gt;

            &lt;p&gt;독자적으로 존재하지 않고, 상위 개체 타입을 가짐&lt;br /&gt;
  상위 개체 타입이 결정되지 않으면 개별 개체를 식별할 수 없음&lt;/p&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;예 : 회사의 직원&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;직원의 부양가족은 직원 개체가 존재해야 존재할 수 있다&lt;/li&gt;
          &lt;li&gt;강한 개체 : 직원&lt;/li&gt;
          &lt;li&gt;약한 개체 : 부양 가족
  · 개체타입의 ER 다이어그램 표현&lt;/li&gt;
          &lt;li&gt;직사각형으로 표현&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-17-database-06-01.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;개체 인스턴스 (Entity Instance)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;개체의 속성에 실제 값을 주어 실체화된 개체&lt;/li&gt;
      &lt;li&gt;파일시스템이나 데이터베이스의 레코드 인스턴스 (Record Instance)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;개체 집합 (Entity Set)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;개체 인스턴스를 모아 놓은 것.&lt;/li&gt;
      &lt;li&gt;데이터베이스의 테이블.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;개체 (Entity)&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-17-database-06-02.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;속성&quot;&gt;속성&lt;/h1&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;속성/애트리뷰트 (Attribute)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;사물의 본질적인 고유의 성질(특성)로, 의미 있는 데이터의 가장 작은 단위&lt;/li&gt;
      &lt;li&gt;파일시스템이나 데이터베이스에서 하나의 필드로 표현됨&lt;/li&gt;
      &lt;li&gt;예시 : 사람의 속성 - 이름, 출생일, 성별, 국적 등&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;속성의 ER 다이어그램 표현&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;타원으로 표현&lt;/li&gt;
      &lt;li&gt;개체 타입과 실선으로 연결&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-17-database-06-03.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;속성의-유형&quot;&gt;속성의 유형&lt;/h1&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;키 속성 (Key Attribute)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;개체 인스턴스를 식별하는데 사용되는 속성&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;모든 개체 인스턴스의 키 속성 값은 달라야 함.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;둘 이상의 속성으로 구성할 수 있음&lt;/li&gt;
      &lt;li&gt;예: 쇼핑몰의 고객 개체의 계정, 회사의 직원 사번&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-17-database-06-04.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;속성 값의 개수에 따른 분류&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;단일 값 속성 (Single-valued Attribute)&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;예: 책의 이름, 회사내 팀의 팀장&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;다중 값 속성 (Multi-valued Attribute)&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;예: 책의 저자, 회사내 팀의 팀원번&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-17-database-06-05.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;의미의 세분화에 따른 분류&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;단순 속성 (Simple Attribute)&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;의미를 세분화할 수 없는 경우&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;예: 개체의 이름&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;복합 속성 (Composite Attribute)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;의미를 세분화할 수 있는 경우&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;예: 전화번호, 생년월일&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-17-database-06-06.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;저장 속성 (Stored Attribute)과 유도 속성 (Derived Attribute)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;저장속성&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;다른 속성의 영향 없이 단독으로 저장되는 속성&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;유도 속성&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;다른 속성을 사용하여 만들 수 있는 속성&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;예: 판매물건의 부가세 금액, 나이(생년월일로부터 계산)&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-17-database-06-07.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;널 속성 (Null Attribute)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;값이 없어도 되는 속성&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;예: 회원 가입시 선택항목&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;데이터를 입력하지 않아도 데이터베이스에 개체를 저장하는데 문제가 없다
&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;개체와 속성의 ER 다이어그램 표현&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-17-database-06-08.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Mon, 17 Feb 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/2020/02/17/database-06/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/2020/02/17/database-06/</guid>
        
        <category>database</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[Database] 모델링과 개체-관계 모델 및 다이어그램</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-16-database-05.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;데이터베이스-구축의-의미&quot;&gt;데이터베이스 구축의 의미&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;의미&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;현실 세계의 대상물을 컴퓨터 세계의 데이터로 변환하기 위한 일련의 과정&lt;/li&gt;
      &lt;li&gt;현실 세계의 대상물에서 데이터베이스에 저장할 가치가 있는 데이터만 찾아야 함&lt;/li&gt;
      &lt;li&gt;컴퓨터에서 다루기 쉬운 구조로 변환하여 저장
&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;모델-모델링-modeling-및-추상화&quot;&gt;모델, 모델링 (Modeling) 및 추상화&lt;/h1&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;모델&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;복잡한 상황을 이해하기 쉽게 표현하기 위하여 개념적으로 단순화하여 표현한 것&lt;/li&gt;
      &lt;li&gt;데이터베이스에 저장할 가치가 있는 데이터를 내포&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;모델링&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;현실 세계에 존재하는 데이터를 컴퓨터 세계의 데이터로 옮기는 변환 과정&lt;/li&gt;
      &lt;li&gt;데이터베이스 설계의 핵심 과정&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;추상화&lt;/p&gt;

    &lt;p&gt;-현실세계에서 발생되는 상황을 모델링하는 것을 추상화라 함
 -현실의 반복적인 작업(계산)을 프로그램 개발하는 것도 추상화 과&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;데이터-모델&quot;&gt;데이터 모델&lt;/h1&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;데이터의 관계, 접근, 처리과정에 관한 추상화된 모형&lt;/li&gt;
  &lt;li&gt;데이터 모델은 데이터 구조를 결정&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;개념적 데이터 모델 (CDM, Conceptual Data Model)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;대상물의 의미를 표현&lt;/li&gt;
      &lt;li&gt;데이터베이스에서 사용될 개념과 관계를 표현&lt;/li&gt;
      &lt;li&gt;가장 많이 사용되는 모델 : 개체-관계모델 (E-R Model, Entity-Relationship Model)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;논리적 데이터 모델 (LDM, Logical Data Model)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;세부적으로 표현된 대상물의 데이터 표현&lt;/li&gt;
      &lt;li&gt;사람, 장소, 사물, 규칙, 관계 등의 대상물과 이들 사이의 이벤트를 표준화한다.&lt;/li&gt;
      &lt;li&gt;사용하는 이유
  &lt;br /&gt;
  &lt;br /&gt;
        &lt;ul&gt;
          &lt;li&gt;데이터 요소과 요구에 대한 일반적인 이해에 도움이 된다.&lt;/li&gt;
          &lt;li&gt;데이터베이스 설계의 기초를 제공한다.&lt;/li&gt;
          &lt;li&gt;데이터를 재사용하거나 공유할 수 있다.&lt;/li&gt;
          &lt;li&gt;개발 및 유지보수 시간과 비용을 줄일 수 있다.
  &lt;br /&gt;
  &lt;br /&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;가장 많이 사용되는 모델 : 관계 데이터 모델(Relational Data Model)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;물리적 데이터 모델 (PDM, Physical Data Model)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;데이터베이스 관리 시스템의 기능과 제약을 고려한 데이터 설계를 표현&lt;/li&gt;
      &lt;li&gt;테이블간의 관계, 성능 향상을 위한 인덱스, 제약사항 정의, 링크 테이블, 파티션 테이블 등의 데이터베이스 구조를
포함하여야 한다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;데이터-모델링&quot;&gt;데이터 모델링&lt;/h1&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;데이터 모델링 과정&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;요구사항 수집 및 분석&lt;/li&gt;
      &lt;li&gt;중요 개념을 추출 (개념적 모델링)&lt;/li&gt;
      &lt;li&gt;각 개념을 구체화 (논리적 모델링)&lt;/li&gt;
      &lt;li&gt;데이터베이스 생성 (물리적 모델링)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-16-database-05-01.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;요구사항 수집 및 분석&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;데이터베이스로 구현할 대상과 사용자의 요구 사항에 대한 정보를 수집하고 분석&lt;/li&gt;
      &lt;li&gt;구축할 데이터베이스에 대한 전문적인 지식이 필요함&lt;/li&gt;
      &lt;li&gt;각 개념을 구체화 (논리적 모델링)&lt;/li&gt;
      &lt;li&gt;요구사항 수집 방법
  &lt;br /&gt;
  &lt;br /&gt;
        &lt;ul&gt;
          &lt;li&gt;실제 문서를 수집하고 분석&lt;/li&gt;
          &lt;li&gt;데이터베이스를 사용할 담당자의 의도를 정확하게 파악하고 요구사항을 수렴&lt;/li&gt;
          &lt;li&gt;비슷한 업무를 처리하는 기존의 데이터베이스를 분석&lt;/li&gt;
          &lt;li&gt;연관성 있는 업무를 참고하여 요구사항을 분석&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;개념적 모델링 (Conceptual Modeling)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;데이터베이스로 구현할 대상에 대한 데이터를 추출하고 각 데이터들 간의 관계를 정의&lt;/li&gt;
      &lt;li&gt;건물의 기본 골조를 만드는 과정과 같이 데이터베이스의 골격을 만드는 과정&lt;/li&gt;
      &lt;li&gt;사용자의 요구사항을 분석하여 가장 핵심적인 개체와 개별 개체를 식별할 수 있는 핵심 속성, 각 개체간의 관계를
정의하여 일반적인 개념으로 표현&lt;/li&gt;
      &lt;li&gt;개체-관계 다이어그램 (ERD, Entity Relationship Diagram) : 간단하게 작성&lt;/li&gt;
      &lt;li&gt;예 : 회사의 프로젝트 관리
  &lt;br /&gt; 
              &lt;br /&gt;
        &lt;ul&gt;
          &lt;li&gt;연구원 – 사번, 이름, 직위&lt;/li&gt;
          &lt;li&gt;프로젝트 – 과제명, 예산, 기간&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-16-database-05-02.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;논리적 모델링 (Logical Modeling)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;개념을 구체화하여 데이터베이스로 구현하기 위한 모델을 만드는 과정&lt;/li&gt;
      &lt;li&gt;예 : 동물에 대한 모델
 &lt;br /&gt;
 &lt;br /&gt;
        &lt;ul&gt;
          &lt;li&gt;추상화 과정을 통하여 동물에 대한 정보를 모델링하여 데이터베이스에 저장한다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;논리적 데이터 모델링 과정
 &lt;br /&gt;
 &lt;br /&gt;
        &lt;ul&gt;
          &lt;li&gt;개념적 데이터모델링에서 추출하지 않은 모든 상세정보를 추출한다.&lt;/li&gt;
          &lt;li&gt;데이터의 표준화를 수행한다. (용어 정리, 데이터의 형태 및 크기 등을 확정)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-16-database-05-03.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;물리적 모델링 (Physical Modeling)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;작성된 논리적 모델을 실제 컴퓨터의 저장 장치에 저장하기 위한 물리적 구조를 정의하고 구현하는 과정&lt;/li&gt;
      &lt;li&gt;고려 사항
  &lt;br /&gt;
  &lt;br /&gt;
        &lt;ul&gt;
          &lt;li&gt;응답시간을 최소화해야 한다(응답시간 : 트랜잭션이 시작되어 종료될 때까지 걸리는 시간)&lt;/li&gt;
          &lt;li&gt;데이터가 저장될 공간을 효율적으로 배치해야 한다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-16-database-05-04.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;개체-관계-모델&quot;&gt;개체-관계 모델&lt;/h1&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;개체-관계 모델 (ERM, ER Model, Entity Relationship Model)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;모델링하고자하는 대상물 또는 처리과정에서의 요구사항에 대하여 데이터나 정보를 묘사하기 위한 데이터 모델&lt;/li&gt;
      &lt;li&gt;개체와 개체간의 관계&lt;/li&gt;
      &lt;li&gt;관계형 데이터베이스에서 궁극적으로 구현되어지는 추상적인 방법&lt;/li&gt;
      &lt;li&gt;1976년, 피터 첸 (Peter Chen)이 제안&lt;/li&gt;
      &lt;li&gt;구성 요소 : 개체(Entity), 속성(Attribute), 관계(Relationship)
  &lt;br /&gt;&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;개체/엔티티 (Entity)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;정보의 세계에서 의미있는 하나의 정보 단위&lt;/li&gt;
      &lt;li&gt;저장할 가치가 있는 중요 데이터를 가지고 있는 대상물(사람, 사물, 개념 등)&lt;/li&gt;
      &lt;li&gt;특징
 &lt;br /&gt;
 &lt;br /&gt;
        &lt;ul&gt;
          &lt;li&gt;유일한 식별자(이름)으로 구별될 수 있어야 한다.&lt;/li&gt;
          &lt;li&gt;속성(고유한 특성, 상태)을 가지고 있어야 함&lt;/li&gt;
          &lt;li&gt;다른 개체와 한 개 이상의 관계를 가지고 있음
 &lt;br /&gt;
 &lt;br /&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;파일시스템이나 데이터베이스에서 하나의 레코드로 표현됨
 &lt;br /&gt;&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;속성/애트리뷰트 (Attribute)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;사물의 본질적인 고유의 성질(특성)으로, 의미 있는 데이터의 가장 작은 단위&lt;/li&gt;
      &lt;li&gt;파일시스템이나 데이터베이스에서 하나의 필드로 표현됨&lt;/li&gt;
      &lt;li&gt;예: 사람의 속성 - 이름, 출생일, 성별, 국적 등
 &lt;br /&gt;&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;관계 (Relationship)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;개체들 사이의 연관성을 정의&lt;/li&gt;
      &lt;li&gt;“두 개체가 관계가 있다” - 상호 공유하는 속성이 있다&lt;/li&gt;
      &lt;li&gt;예
        &lt;ul&gt;
          &lt;li&gt;구매 (관계) - 고객/물품&lt;/li&gt;
          &lt;li&gt;수강 (관계) - 학생/수강과목
  &lt;br /&gt;&lt;br /&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;개체-관계 다이어그램 (ERD, Entity Relationship Diagram)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;ER 모델을 표준화된 그림으로 표현한 것&lt;/li&gt;
      &lt;li&gt;E-R 다이어그래밍 도구 : ER 모델과 SQL을 해석하고 만들 수 있다.&lt;/li&gt;
      &lt;li&gt;다이어그램 종류
 &lt;br /&gt;&lt;br /&gt;
        &lt;ul&gt;
          &lt;li&gt;피터첸 표기법 : ER 모델의 기본적인 표기법&lt;/li&gt;
          &lt;li&gt;IE 표기법 (Information Engineering Notation) / 새발 표기법 (Crow-feet Notation)&lt;/li&gt;
          &lt;li&gt;바커 표기법 (Baker Notation)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-16-database-05-05.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Sun, 16 Feb 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/2020/02/16/database-05/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/2020/02/16/database-05/</guid>
        
        <category>database</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[Database] 데이터베이스 스키마</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-15-database-04.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;dbms의-구성&quot;&gt;DBMS의 구성&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-15-database-04-01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;DDL 컴파일러&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;데이터 정의어로 작성된 스키마의 정의를 해석&lt;/li&gt;
      &lt;li&gt;저장 데이터 관리자의 도움을 받아 새로운 DB 구축&lt;/li&gt;
      &lt;li&gt;스키마의 정의를 데이터 사전에 저장&lt;/li&gt;
      &lt;li&gt;DDL로 작성된 기존 스키마의 삭제나 수정 요청도 처리하여 변경된 내용을 데이터 사전에 저장&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;DML 프리 컴파일러&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;응용 프로그램에 삽입된 데이터 조작어를 추출하여 DML 컴파일러에게 전달&lt;/li&gt;
      &lt;li&gt;데이터 조작어와 관련이 없는 코드는 해당 언어의 컴파일러에 전달&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;DML 컴파일러&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;데이터 조작어로 작성된 데이터의 처리(삽입, 수정, 삭제, 검색) 요구를 분석하여 런타임 데이터베이스 처리기가 이해할 수 있도록 해석&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;런타임 데이터베이스 처리기&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;저장 데이터 관리자를 통해 데이터베이스에 접근&lt;/li&gt;
      &lt;li&gt;DML 컴파일러로부터 전달받은 데이터 처리 요구를 데이터베이스에서 실제로 실행&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;트랜잭션 관리자&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;DB 접근을 위한 사용자의 접근 권한이 유효한지 검사&lt;/li&gt;
      &lt;li&gt;DB 무결성을 유지하기 위한 제약조건 위반 여부를 확인&lt;/li&gt;
      &lt;li&gt;회복, 병행 수행&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;저장 데이터 관리자&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;사용자 DB와 데이터 사전을 관리&lt;/li&gt;
      &lt;li&gt;운영체제의 도움을 받아 DB에 접근&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;데이터베이스-스키마-3단계&quot;&gt;데이터베이스 스키마 (3단계)&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;데이터베이스에서 자료의 구조, 자료의 표현 방법, 자료 간의 관계를 형식 언어로 정의한 구조&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;외부 스키마&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;일반사용자나 응용프로그래머가 접근하는 계층&lt;/li&gt;
      &lt;li&gt;사용자에게 필요한 데이터베이스를 정의&lt;/li&gt;
      &lt;li&gt;하나의 데이터베이스에 여러 개의 외부 스키마가 존재할 수 있음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;개념 스키마&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;데이터베이스의 전체적인 논리적 구조를 정의&lt;/li&gt;
      &lt;li&gt;하나의 데이터베이스에 하나의 개념 스키마만 존재함&lt;/li&gt;
      &lt;li&gt;데이터의 관계, 제약조건, 무결성에 대한 내용이 포함&lt;/li&gt;
      &lt;li&gt;데이터에 대한 보안 정책이나 접근 권한에 대한 정의 포함&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;내부 스키마&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;DBMS가 보는 데이터&lt;/li&gt;
      &lt;li&gt;물리적 저장 장치에 데이터베이스가 실제로 저장되는 방법&lt;/li&gt;
      &lt;li&gt;레코드 구조, 필드 크기, 레코드 접근 경로, 데이터 압축 등 물리적 저장 구조를 정의&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;매핑사상-및-데이터-독립성-1&quot;&gt;매핑/사상 및 데이터 독립성 1&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;매핑(Mapping) / 사상&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;외부/개념 매핑&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;외부 스키마의 데이터가 개념 스키마의 어느 부분에 해당되는지 대응시킴&lt;/li&gt;
          &lt;li&gt;응용 인터페이스 (Application Interface)라고도 함&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;개념/내부 매핑&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;개념 스키마의 데이터가 내부 스키마의 물리적 장치 어디에 어떤 방법으로 저장되는지 대응&lt;/li&gt;
          &lt;li&gt;저장 인터페이스 (Storage Interface)라고도 함&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;데이터 독립성 (Data Independency)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;논리적 데이터 독립성 (Logical Data Independency)&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;외부 단계와 개념 단계 사이의 독립성&lt;/li&gt;
          &lt;li&gt;개념 스키마가 변경되어도 외부 스키마에는 영향이 없도록 하는 개념&lt;/li&gt;
          &lt;li&gt;예, 개념 스키마의 테이블을 생성하거나 변경할 경우, 외부 스키마가 직접 다루는 테이블이 아니면 영향을 없다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;물리적 데이터 독립성 (Physical Data Independency)&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;개념 단계와 내부 단계 사이의 독립성&lt;/li&gt;
          &lt;li&gt;저장 장치 구조 변경과 같이 내부 스키마가 변경되어도 개념스키마에 영향이 없도록 하는 개념&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;매핑사상-및-데이터-독립성-2&quot;&gt;매핑/사상 및 데이터 독립성 2&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;데이터베이스 스키마 구성도&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-15-database-04-02.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;데이터베이스 스키마 예&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-15-database-04-03.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;img src=&quot;/assets/img/database/2020-02-15-database-04-04.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

</description>
        <pubDate>Sat, 15 Feb 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/2020/02/15/database-04/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/2020/02/15/database-04/</guid>
        
        <category>database</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[Database] 데이터베이스 시스템</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-14-database-03.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;데이터베이스-시스템-dbs-database-system&quot;&gt;데이터베이스 시스템 (DBS, DataBase System)&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;데이터를 데이터베이스에 저장하고, 관리하여 사용자의 요청에 따라 필요한 정보를 생성해주는 시스템&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;구성요소&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;데이터베이스 관리 시스템 : 사용자와 데이터베이스를 연결시켜주는 소프트웨어&lt;/li&gt;
      &lt;li&gt;데이터베이스 : 데이터를 저장하는 곳&lt;/li&gt;
      &lt;li&gt;데이터 모델 : 연관된 데이터를 저장하는 방식&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-14-database-03-01.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;데이터베이스-사용자&quot;&gt;데이터베이스 사용자&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;일반사용자&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;프로그래머가 개발한 응용프로그램을 사용하여 데이터베이스에 접근&lt;/li&gt;
      &lt;li&gt;DBMS 사용에 관심이 없고, 요청하여 받은 데이터의 내용에만 관심을 가짐&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;응용프로그래머 / 데이터베이스 프로그래머&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;일반 사용자가 사용할 수 있는 응용 프로그램을 개발&lt;/li&gt;
      &lt;li&gt;자바, JSP, PHP, ASP, C 등의 프로그래밍 언어를 사용하여 일반 사용자를 위한 인터페이스(GUI)와 데이터 관리 프로그램을 개발&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;데이터베이스 관리자&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;데이터베이스 시스템을 관리하는 사람&lt;/li&gt;
      &lt;li&gt;데이터 설계, 구현, 유지보수 등을 담당&lt;/li&gt;
      &lt;li&gt;데이터베이스 사용자, 보안, 접근 권한, 백업, 회복 등을 관리&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;dbms의-기능&quot;&gt;DBMS의 기능&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;데이터 정의 (Definition)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;데이터의 구조를 정의, 수정 및 삭제하는 기능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;데이터 조작 (Manipulation)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;응용프로그램의 요청으로 데이터의 삽입, 수정, 삭제하는 기능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;데이터 추출 (Retrieval)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;응용프로그램의 요청에 따라 필요한 데이터를 추출하는 기능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;데이터 제어 (Control)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;사용자를 관리 (계정 생성, 접근 제한)하는 기능&lt;/li&gt;
      &lt;li&gt;백업, 회복, 동시성 제어 등의 기능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;데이터-언어-data-language&quot;&gt;데이터 언어 (Data Language)&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;사용자가 데이터베이스 관리 시스템을 사용하기 위한 언어&lt;/li&gt;
  &lt;li&gt;사용 목적에 따라 구분&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;데이터 정의어 (DDL, Data Definition Language)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;데이터의 구조를 정의, 수정, 삭제하기 위해 사용하는 언어&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;데이터 조작어(DML, Data Manupulation Language)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;데이터의 삽입, 수정, 삭제, 검색 등의 요청을 위해 사용하는 언어&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;절차적 데이터 조작어와 비절차적 데이터 조작어로 구분&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;절차적 데이터 조작어 (Procedural DML) : 사용자가 원하는 데이터와 데이터를 얻는 처리 방법을 설명하는 조작어&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;비절차적 데이터 조작어 (Nonprocedural DML) : 사용자가 원하는 데이터만 설명하는 조작어&lt;/p&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;데이터 제어어(DCL, Data Control Language)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;내부적으로 필요한 규칙이나 기법을 정의하기 위해 사용하는 언어&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;규칙이나 기법을 정의하는 이유&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;무결성 : 데이터베이스에 정확하고 유효한 데이터만 유지한다.&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;보안 : 허가받지 않은 사용자의 데이터 접근 차단 및 허가된 사용자가 접근 허용된 데이터만 접근하도록 제어&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;회복 : 장애 발생시 데이터의 일관성을 유지&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;동시성 : 다수의 사용자가 같은 데이터에 동시에 접근하여 데이터를 조작할 수 있도록 제어&lt;/p&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-14-database-03-02.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 14 Feb 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/2020/02/14/database-03/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/2020/02/14/database-03/</guid>
        
        <category>database</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[Database] 데이터베이스 모델</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-13-database-02.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;데이테베이스-모델&quot;&gt;데이테베이스 모델&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;연관된 데이터를 사용하기 쉽고, 연관 관계를 잘 표현할 수 있도록 구조적으로 표현한 방식이다&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;1-계층형-데이터베이스-모델&quot;&gt;1. 계층형 데이터베이스 모델&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- 트리 형태의 구조를 가진 데이터베이스 
- 반복적인 부모-자식 관계 정보를 표현 
- 현재 거의 사용되지 않고 있다
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-13-database-02-01.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;2-네트워크형-데이터베이스-모델&quot;&gt;2. 네트워크형 데이터베이스 모델&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- 그래프 형태의 데이터베이스  
- 예) IDS(Integrated Data Store), Univac DMS-1100 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-13-database-02-02.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;3-관계-데이터베이스&quot;&gt;3. 관계 데이터베이스&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- 모든 데이터 사이의 관계를 2차원 테이블 형태로 구현  
- 현재 대부분의 데이터베이스에서 사용 
- 예) 오라클, MySQL, MS-SQL, Informix, Access 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-13-database-02-03.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;4-객체형-데이터베이스&quot;&gt;4. 객체형 데이터베이스&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- 객체지향 프로그래밍에서 사용되는 객체의 형태로 정보를 저장하는 데이터베이스  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-13-database-02-04.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;5-객체관계형-데이터베이스&quot;&gt;5. 객체관계형 데이터베이스&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- 객체지향 데이터베이스와 관계 데이터베이스를 결합한 데이터베이스  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Thu, 13 Feb 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/2020/02/13/database-02/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/2020/02/13/database-02/</guid>
        
        <category>database</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[Database] 데이터베이스</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-12-database-01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;데이터와-정보&quot;&gt;데이터와 정보&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;데이터&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;일련의 작업을 목적으로 수집된 의미있는 값&lt;/li&gt;
      &lt;li&gt;연구나 조사 등의 바탕이 되는 재료&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;정보&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;뜻을 가지는 자료&lt;/li&gt;
      &lt;li&gt;특정한 목적의 의사결정을 위하여 가공한 형태&lt;/li&gt;
      &lt;li&gt;일정한 형식으로 표현한 모든 종류의 자료 또는 지식&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;파일시스템&quot;&gt;파일시스템&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;정의&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;데이터를 파일에 저장하고, 파일을 수정, 삭제, 검색하는 기능을 제공하여 사용자가 파일을 손쉽게 이용할 수 있도록 지원하는 프로그램.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;특징
    &lt;ul&gt;
      &lt;li&gt;각각의 응용 프로그램은 데이터를 고유의 형식에 맞추어 관리&lt;/li&gt;
      &lt;li&gt;응용 프로그램마다 독립적인 파일을 관리&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;단점
    &lt;ul&gt;
      &lt;li&gt;데이터가 중복되어 저장된다.&lt;/li&gt;
      &lt;li&gt;여러 파일에 중복되어 저장된 데이터가 변동될 때, 일치시키기 어렵다.&lt;/li&gt;
      &lt;li&gt;프로그램에 종속된 데이터를 다른 목적의 프로그램에서 사용하기 어렵다.&lt;/li&gt;
      &lt;li&gt;데이터 보안을 유지하기 어렵다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;데이터베이스&quot;&gt;데이터베이스&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;도입 배경&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;파일 시스템의 단점 극복&lt;/li&gt;
      &lt;li&gt;다수 사용자의 정보 공유&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;개념&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;다수의 사용자가 데이터를 공유하여 사용할 수 있도록 통합하여 저장한 데이터 집합&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;장점&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;데이터 공유 및 용이한 접근&lt;/li&gt;
      &lt;li&gt;데이터 중복 최소화, 일관성, 무결성, 보안성 유지&lt;/li&gt;
      &lt;li&gt;데이터의 표준화 가능&lt;/li&gt;
      &lt;li&gt;데이터의 저장 공간 절약 및 집중화&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;단점&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;전문가가 필요&lt;/li&gt;
      &lt;li&gt;데이터 백업과 복구의 어려움&lt;/li&gt;
      &lt;li&gt;비용 부담&lt;/li&gt;
      &lt;li&gt;다수의 사용자가 동시 사용시 집중된 데이터 사용에 과부하 발생 가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;데이터베이스-관리-시스템&quot;&gt;데이터베이스 관리 시스템&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;정의&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;DBMS(DataBase Management System)&lt;/li&gt;
      &lt;li&gt;데이터베이스에 저장된 데이터를 관리하고, 필요한 정보를 생성해주는 시스템&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;특징&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;데이터의 중복 및 불일치 최소화시킬 수 있다.&lt;/li&gt;
      &lt;li&gt;데이터 독립성을 유지할 수 있다.&lt;/li&gt;
      &lt;li&gt;DBMS를 통하여 데이터에 접근하고, 데이터베이스내의 데이터 변화가 응용프로그램에게 영향을 끼치지 않도록 하여 데이터의 독립성을 지원&lt;/li&gt;
      &lt;li&gt;데이터 무결성 유지할 수 있다.&lt;/li&gt;
      &lt;li&gt;무결성을 위반하는 데이터 저장 거절&lt;/li&gt;
      &lt;li&gt;데이터를 표준화시킬 수 있다.  · 데이터의 보안이 향상된다.&lt;/li&gt;
      &lt;li&gt;데이터베이스에 접근할 수 있는 권한을 사용자부여하여 접근을 제한할 수 있다.&lt;/li&gt;
      &lt;li&gt;데이터 공유가 쉽다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Wed, 12 Feb 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/2020/02/12/database-01/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/2020/02/12/database-01/</guid>
        
        <category>database</category>
        
        
        <category>devlog</category>
        
      </item>
    
  </channel>
</rss>
