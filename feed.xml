<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>m_veloper</title>
    <description></description>
    <link>https://m-veloper.github.io/</link>
    <atom:link href="https://m-veloper.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 25 Feb 2020 21:40:47 +0900</pubDate>
    <lastBuildDate>Tue, 25 Feb 2020 21:40:47 +0900</lastBuildDate>
    <generator>Jekyll v3.8.6</generator>
    
      <item>
        <title>[유닉스] 디렉토리 이동</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-02-25-unix-07.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;현재-디렉토리-확인&quot;&gt;현재 디렉토리 확인&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;홈 디렉토리&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;로그인을 한 후, 사용자가 기본으로 놓이게 되는 디렉토리 위치를 홈 디렉토리(home directory)라고 함&lt;/li&gt;
      &lt;li&gt;시스템 관리자가 계정을 만들 때 정함&lt;/li&gt;
      &lt;li&gt;해당 사용자가 모든 권한을 가짐&lt;/li&gt;
      &lt;li&gt;어느 작업 디렉토리에서든 인수 없이 cd 명령을 입력하면 홈 디렉토리로 이동&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;pwd(print working directory) 명령&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;사용자의 현재 디렉토리 위치를 확인&lt;/li&gt;
      &lt;li&gt;현재 작업 디렉토리의 절대 경로를 출력&lt;/li&gt;
      &lt;li&gt;로그인한 직후의 현재 디렉토리는 사용자의 홈 디렉토리&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;형식 : pwd&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ pwd
  /home/ksshin
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;디렉토리-이동&quot;&gt;디렉토리 이동&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;cd(change directory) 명령&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;현재 작업 디렉토리를 변경&lt;/li&gt;
      &lt;li&gt;형식 : cd [디렉토리명]&lt;/li&gt;
      &lt;li&gt;디렉토리 이름을 주지 않으면 홈 디렉토리로 이동&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;‘..’를 사용하면 부모(상위) 디렉토리로 이동&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cd lecture
  $ pwd
  /home/ksshin/lecture
  $ cd ..
  $ pwd
  /home/ksshin
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;/home/ksshin/lecture 위치에서 /home/ksshin/temp&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;/home/ksshin/lecture 위치에서 /home/ksshin/temp 디렉토리로 이동하는 방법&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;절대 경로명 사용&lt;/p&gt;

            &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cd /home/ksshin/temp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;상대 경로명 사용&lt;/p&gt;

            &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cd ../temp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;/home/ksshin/lecture 위치에서 바로 위의 부모 디렉토리로 이동하는 방법&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;절대 경로명 사용&lt;/p&gt;

            &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cd /home/ksshin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;상대 경로명 사용&lt;/p&gt;

            &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cd ../
  또는
  $ cd ..
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;바로 위가 아니라 그 이전의 부모 디렉토리로 이동하는 방법&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cd ../../
  또는
  $ cd ../..
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;홈 디렉토리로 이동하는 방법&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;cd /home/ksshin&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;절대 경로를 사용해 홈 디렉토리로 이동&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;cd ../home/ksshin&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;상대 경로를 사용해 홈 디렉토리로 이동&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;cd ~&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;홈 디렉토리를 나타내는 특수 기호 ~를 사용해 홈 디렉토리로 이동&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;cd&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;목적지를 지정하지 않고 홈 디렉토리로 이동&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;예)&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cd
  $ pwd
  /home/ksshin
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;디렉토리-파일-목록-확인&quot;&gt;디렉토리 파일 목록 확인&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;ls(list) 명령&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;디렉토리의 내용을 출력&lt;/li&gt;
      &lt;li&gt;형식 : ls [옵션] [파일 또는 디렉토리명]&lt;/li&gt;
      &lt;li&gt;옵션&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-02-25-unix-07-01.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;사용 예&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;ls&lt;/li&gt;
          &lt;li&gt;ls –al /tmp&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;현재 디렉토리 목록 확인&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;디렉토리 이름을 지정하지 않고 ls 명령만 사용&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ ls
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;

        &lt;ul&gt;
          &lt;li&gt;현재 디렉토리에 파일이 없음을 나타냄&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;‘.’으로 시작하는 숨김 파일을 포함한 모든 파일 목록 보여주기&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ ls –a
  . .. .bash_history .bach_rc
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;지정한 디렉토리 목록 확인&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;디렉토리 이름을 지정하면 위치 변경 없이 지정한 디렉토리 아래의 파일 목록 확인 가능&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ ls /
  bin cdrom etc initrd.img sbin
  boot dev home lib usr
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;파일의 종류 표시&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;/가 붙으면 디렉토리, @는 심볼릭 링크 파일, *는 실행 가능한 파일&lt;/p&gt;

            &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ ls –F /
  bin/ cdrom/ etc/ initrd.img@ sbin/
  boot/ dev/ home/ lib/ usr/
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;파일 정보 확인&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;디렉토리 이름 대신 파일 이름 지정하면 해당 파일이 존재하는지 확인 가능&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;파일이 존재하면 파일 이름 출력&lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;파일이 없으면 없다는 메시지 출력&lt;/p&gt;

            &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ ls .profile
  .profile
  $ ls test
  test : No such file or directory
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;상세 정보 보기&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;파일의 상세 정보는 –l 옵션(long) 사용&lt;/li&gt;
      &lt;li&gt;인자가 디렉토리이면 디렉토리가 포함한 파일의 상세한 정보를 출력&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;인자가 파일이면 파일의 상세한 정보 출력&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ ls –l
  total 48
  drwxr-xr-x 2 ksshin ksshin 4096 5월 30 13:20 Desktop
  drwxr-xr-x 2 ksshin ksshin 4096 5월 30 13:20 Documents
  drwxr-xr-x 2 ksshin ksshin 4096 5월 30 13:20 Downloads
  -rwxr—r-- 1 ksshin ksshin 8980 5월 30 13:20 examples.desktop
  drwxr-xr-x 2 ksshin ksshin 4096 5월 30 13:20 Music
  drwxr-xr-x 2 ksshin ksshin 4096 5월 30 13:20 Pictures
  drwxr-xr-x 2 ksshin ksshin 4096 5월 30 13:20 Public
  drwxr-xr-x 2 ksshin ksshin 4096 5월 30 13:20 Templates
  drwxr-xr-x 2 ksshin ksshin 4096 5월 30 13:20 Videos
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-02-25-unix-07-02.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;디렉토리 자체 정보 확인&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;디렉토리의 마지막 수정 시간 등 자체 정보는 –d 옵션으로 확인&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;상세한 내용을 보여주는 –l 옵션과 함께 사용&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ ls –ld /
  drwxr-xr-x root root 4096 5월 30 13:20 /
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;와일드카드&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;다수의 파일을 지정하는데 사용&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-02-25-unix-07-03.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;“p”로 시작하는 모든 파일을 보고자 할 때&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ ls p*
  print_file print_txt ps_tool
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;“c”로 시작하는 세 개의 문자로 된 파일을 보고자 할 때&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ ls
  apropos bin can.mpeg cnn copy.txt corn_head man work
  $ ls c??
  cnn
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;“a”에서부터 “c”까지의 문자로 시작되는 파일을 보고자 할 때&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ ls [a-c]*
  audio_file ac_dc character configure_file
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;“a” 또는 “ch” 패턴이 들어간 파일을 보고자 할 때&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ ls {a,ch}*
  audio_file ac_dc character
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Tue, 25 Feb 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/devlog/2020/02/25/unix-07/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/devlog/2020/02/25/unix-07/</guid>
        
        <category>unix</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[자바스크립트] 문자열 자르기 (split, substring, substr)</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/javascript/2020-02-25-javascript-02.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;문자열-자르기-split-substring-substr&quot;&gt;문자열 자르기 (split, substring, substr)&lt;/h1&gt;
&lt;h3 id=&quot;how-to-divide-string-in-javascript&quot;&gt;How to divide string in Javascript&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;문자열의 일부만 잘라 사용할 경우 사용&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//특정 문자를 기준으로 문자열을 자를려면 split을 사용하면 된다.
    
var string='2020-02-25';
var strArray = string.split('-');
    
console.log(strArray[0]);
console.log(strArray[1]);
console.log(strArray[2]);
    
    
// 다음으로 문자열에서 기준없이 사용하고 싶은 
// 문자열만 골라 가져오고 싶다면 substring함수를 사용하면 된다.
// substring함수는 문자열의 길이를 기준으로 자른다고 표현하기보다 일정 문자열을 반환한다.
// substring(시작인덱스, 종료인덱스);
    
var year=string.substring(0,4) //2013
var month=string.substring(5,7) //06
var day=string.substring(8,10) //11
    
    
//위와 비슷하지만 조금 다른 함수 substr이 있다.
//substr(시작인덱스, 길이)
    
var year=string.substr(0,4) //2013
var month=string.substr(5,2) //06
var day=string.substr(8,2) //11
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Tue, 25 Feb 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/tip/2020/02/25/javascript-02/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/tip/2020/02/25/javascript-02/</guid>
        
        <category>javascript</category>
        
        
        <category>tip</category>
        
      </item>
    
      <item>
        <title>[자바스크립트] 문자를 숫자로 바꾸기(String to int)</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/javascript/2020-02-25-javascript-01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;자바스크립트-문자를-숫자로-바꾸기string-to-int&quot;&gt;자바스크립트 문자를 숫자로 바꾸기(String to int)&lt;/h1&gt;
&lt;h3 id=&quot;how-to-convert-string-to-number-in-javascript&quot;&gt;How to convert String to number in javascript&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;함수를 활용한 예제&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;읽기 좋은 코드와 가장 좋은 방법은 “Number” 함수를 사용하는 것.&lt;/li&gt;
      &lt;li&gt;parseInt 함수를 사용하면 소수점을 포함하는 숫자나 문자열도 정수로 변환됨&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Number 함수는 자바스크립트에서 형변환을 위해 제공하는 함수이기 때문에 가장 의도를 잘 나타내는 코드 작성 가능하다는 장점&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  //parseInt()
  var num = parseInt(&quot;111&quot;)
        
  //parseFloat()
  var num = parseFloat(&quot;111&quot;)
        
  //Number() - 이 방법이 제일 베스트 방법
  var num = Number(&quot;111&quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;비트 연산을 활용한 예제&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;비트 연산을 하게 될 경우 “123.001”과 같이 소수점이 있는 숫자는 모두 정수로 변환됨&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  //Bitwise Bitwise Right Shift
  var num = &quot;111&quot; &amp;gt;&amp;gt;&amp;gt; 0
        
  //Bitwise Right Shift
  var num = &quot;111&quot; &amp;gt;&amp;gt; 0
        
  //Bitwise Left Shift
  var num = &quot;111&quot; &amp;lt;&amp;lt; 0
        
  //Bitwise OR
  var num = 0 | &quot;111&quot;
        
  //Bitwise XOR
  var num = 0 ^ &quot;111&quot;
        
  //Bitwise NOT NOT
  var num = ~~&quot;111&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;연산을 통한 활용&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;더하기, 곱하기, 나누기 등의 연산을 시도하면 자동으로 형변환이됨&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; var num = +&quot;111&quot;
        
 var num = 1 * &quot;111&quot;
        
 var num = &quot;111&quot; / 1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;
&lt;br /&gt;&lt;br /&gt;
참고 : https://programmingsummaries.tistory.com/355&lt;/p&gt;
</description>
        <pubDate>Tue, 25 Feb 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/tip/2020/02/25/javascript-01/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/tip/2020/02/25/javascript-01/</guid>
        
        <category>javascript</category>
        
        
        <category>tip</category>
        
      </item>
    
      <item>
        <title>[Database] 키 (Key)</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-24-database-09.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;키의-개요&quot;&gt;키의 개요&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;키 (Key)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;키 란?&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;릴레이션에서 투플을 구별할 수 있게 하는 유일한 속성 (집합)&lt;/li&gt;
          &lt;li&gt;릴레이션 간의 관계를 맺는데 사용&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;키의 특성&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;한 릴레이션에서 투플의 키는 같은 값을 가질 수 없다 (유일성)&lt;/li&gt;
          &lt;li&gt;최소한의 속성들로만 키를 구성해야 한다 (최소성)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;키의 종류&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;수퍼키 (Super Key)&lt;/li&gt;
          &lt;li&gt;후보키 (Candidate Key)&lt;/li&gt;
          &lt;li&gt;기본키 (Primary Key)&lt;/li&gt;
          &lt;li&gt;대체키 (Alternate Key)&lt;/li&gt;
          &lt;li&gt;외래키 (Foreign Key)&lt;/li&gt;
          &lt;li&gt;대리키 (Surrogate Key)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;키의 종류&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;수퍼키 (Super Key)&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;투플을 유일하게 식별할 수 있는 속성들의 집합 (유일성)&lt;/p&gt;

            &lt;ul&gt;
              &lt;li&gt;하나의 릴레이션에서 키로 지정된 속성의 값은 투플마다 달라야 한다.&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;투플을 유일하게 식별할 수 있는 값이면 모두 수퍼키가 될 수 있다&lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;예 : 사원 명부&lt;/p&gt;

            &lt;ul&gt;
              &lt;li&gt;사번 : 사원별로 유일한 값으로 부여되므로, 투플을 구별할 수 있다&lt;/li&gt;
              &lt;li&gt;직책 : 같은 직책이 존재할 수 있으므로, 투플을 구별할 수 없다&lt;/li&gt;
              &lt;li&gt;이름 : 같은 이름이 존재할 수 있으므로, 투플을 구별할 수 없다&lt;/li&gt;
              &lt;li&gt;생년월일 : 생일이 같을 수 있으므로, 투플을 구별할 수 없다&lt;/li&gt;
              &lt;li&gt;주소 : 주소가 같을 수 있으므로, 투플을 구별할 수 없다&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;사원 명부의 슈퍼 키 : 사번을 포함하는 속성의 집합&lt;/p&gt;

            &lt;ul&gt;
              &lt;li&gt;(사번), (사번, 직책), (사번, 이름), (사번, 생년월일), (사번, 주소),
(사번, 직책, 이름), (사번, 직책, 생년월일), (사번, 직책, 주소),
(사번, 이름, 생년월일), (사번, 이름, 주소), (사번, 생년월일, 주소),
(사번, 직책, 이름, 생년월일), (사번, 직책, 이름, 주소), (사번, 이름, 생년월일, 주소),
(사번, 직책, 생년월일, 주소), (사번, 직책, 이름, 생년월일, 주소)&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;후보키 (Candidate Key)&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;투플을 식별할 수 있는 속성들의 최소 집합 (최소성)&lt;/li&gt;
          &lt;li&gt;하나의 속성으로 구성된 키 : 최소성을 만족하여 후보키로 가장 좋다.&lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;수퍼키 중에서 최소성을 만족하는 키&lt;/p&gt;

            &lt;ul&gt;
              &lt;li&gt;후보키는 유일성과 최소성을 만족하여야 한다.&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;후보키의 특성은 투플이 삽입, 수정되어도 유지되어야 한다.&lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;예 : 사원 릴레이션&lt;/p&gt;

            &lt;ul&gt;
              &lt;li&gt;사번 : 후보키로 가장 좋다.&lt;/li&gt;
              &lt;li&gt;(직책, 이름), (직책, 이름, 생년월일) - 유일성을 만족 못하는 경우 발생하므로 후보키가 될 수 없다.&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;기본키 (Primary Key)&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;후보키 중에서 하나를 선정하여 사용하는 대표키&lt;/p&gt;

            &lt;ul&gt;
              &lt;li&gt;후보키가 하나일 경우 : 기본키&lt;/li&gt;
              &lt;li&gt;후보키가 여러 개 일 경우 : 릴레이션의 특성을 반영하여 하나를 선택&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;기본 키 선정시 주의 사항&lt;/p&gt;

            &lt;ul&gt;
              &lt;li&gt;유일성과 최소성을 만족하여야 한다.&lt;/li&gt;
              &lt;li&gt;NULL 값을 가질 수 있는 속성은 부적합하다.&lt;/li&gt;
              &lt;li&gt;값이 바뀌지 말아야 한다.&lt;/li&gt;
              &lt;li&gt;가장 단순한 후보키를 선택한다.&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;릴레이션 스키마를 표현할 때, 기본키는 속성에 밑줄로 표시한다.&lt;/p&gt;

            &lt;ul&gt;
              &lt;li&gt;릴레이션이름( 속성1, 속성2, … , 속성N )&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;예 : 사원 릴레이션&lt;/p&gt;

            &lt;ul&gt;
              &lt;li&gt;사원( 사번, 직책, 이름, 생년월일, 주소 )&lt;/li&gt;
              &lt;li&gt;사원( 사번, 직책, 이름, 생년월일, 주소 ) : 대부분의 경우, 이름+주소는 기본키로 가능하지만, 투플을 구별할 수 없는 경우가 발생될 수도 있다.&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;

        &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-24-database-09-01.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;
  &lt;br /&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;대체키 (Alternate Key)&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;기본키로 선택되지 못한 후보키&lt;/li&gt;
        &lt;/ul&gt;

        &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-24-database-09-02.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;
  &lt;br /&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;외래키&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;다른 릴레이션의 기본키를 참조하는 속성(집합)&lt;/li&gt;
          &lt;li&gt;관계 데이터 모델의 특징인 릴레이션간의 관계(Relationship)을 표현&lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;특징&lt;/p&gt;

            &lt;ul&gt;
              &lt;li&gt;관계 데이터 모델의 릴레이션 간의 관계를 표현&lt;/li&gt;
              &lt;li&gt;다른 릴레이션의 기본키를 참조하는 속성&lt;/li&gt;
              &lt;li&gt;외래키와 기본키의 도메인은 같아야 한다.&lt;/li&gt;
              &lt;li&gt;NULL 값이 허용되며, 중복되어도 된다.&lt;/li&gt;
              &lt;li&gt;외래키가 기본키의 일부가 될 수 있다.&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;

        &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-24-database-09-03.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;
  &lt;br /&gt;&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;외래키가 참조되는 릴레이션의 기본키가 아닐 경우&lt;/p&gt;

            &lt;ul&gt;
              &lt;li&gt;외래키는 다른 릴레이션에서 하나의 투플을 구별하여야 함&lt;/li&gt;
              &lt;li&gt;참조되는 릴레이션의 투플을 구별할 수 없는 경우가 발생&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;외래키가 자신이 속한 릴레이션의 기본키를 참조하도록 외래키를 정의할 수 있다.&lt;/p&gt;
          &lt;/li&gt;
        &lt;/ul&gt;

        &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-24-database-09-04.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;
  &lt;br /&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;대리키 (Surrogate Key) / 인조키 (Artificial Key)&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;일련번호와 같은 가상의 속성을 만들어 기본키로 사용하는 키&lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;대리키를 사용하는 경우&lt;/p&gt;

            &lt;ul&gt;
              &lt;li&gt;기본키가 유출되어서는 안될 경우&lt;/li&gt;
              &lt;li&gt;여러 개의 속성으로 구성되어 복잡할 경우&lt;/li&gt;
              &lt;li&gt;마땅한 기본키가 없을 경우&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;대리키는 DBMS가 임의로 생성하는 값으로 사용자가 직관적으로 알 수 없다.&lt;/li&gt;
        &lt;/ul&gt;

        &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-24-database-09-05.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;
  &lt;br /&gt;&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Mon, 24 Feb 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/devlog/2020/02/24/database-09/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/devlog/2020/02/24/database-09/</guid>
        
        <category>database</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[Database] 관계 데이터 모델의 기본용어와 릴레이션 구성요소</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-24-database-08.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;관계-데이터-모델의-개요&quot;&gt;관계 데이터 모델의 개요&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;관계 데이터 모델이란?&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;관계 데이터 모델&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;개념적 구조를 논리적 구조로 표현한 모델&lt;/li&gt;
          &lt;li&gt;개체에 관한 데이터를 행과 열로 구성된 데이블(릴레이션)에 저장&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;관계 데이터 모델의 기본 용어&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;릴레이션 (Relation)
        &lt;ul&gt;
          &lt;li&gt;개체에 대한 데이터를 2차원 테이블의 구조로 저장한 것&lt;/li&gt;
          &lt;li&gt;파일 관리 시스템의 파일(File)에 대응&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-24-database-08-01.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;속성 (Attribute)&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;릴레이션의 열&lt;/li&gt;
          &lt;li&gt;파일 관리 시스템 파일의 필드(Field)에 대응&lt;/li&gt;
          &lt;li&gt;예&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-24-database-08-02.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;투플 (Tuple)&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;릴레이션의 행&lt;/li&gt;
          &lt;li&gt;개체 인스턴스&lt;/li&gt;
          &lt;li&gt;파일 관리 시스템의 레코드(Record)에 대응&lt;/li&gt;
          &lt;li&gt;예 : 회사 사원 개체 집합에 5개의 사원 정보가 있을 경우, 5개의 투플 또는 5개의 개체 인스턴스가 있다고 한다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-24-database-08-03.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;도메인 (Domain)&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;하나의 속성이 가질 수 있는 모든 값의 집합&lt;/p&gt;

            &lt;ul&gt;
              &lt;li&gt;예: 회사의 직급 - 대표이사, 전무, 상무, 부장, 차장, 과장, 대리, 사원&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;속성의 특성을 고려한 데이터 타입으로 정의&lt;/li&gt;
          &lt;li&gt;속성 값을 입력 및 수정할 때 적합성의 판단 기준이 됨&lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;도메인을 속성의 특성을 고려한 데이터 타입으로 정의&lt;/p&gt;

            &lt;ul&gt;
              &lt;li&gt;예 : 이름 속성의 도메인 : CHAR(20), 나이 속성의 도메인 : INT&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-24-database-08-04.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;널 (Null)&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;속성 값을 모르거나 적합한 값이 없는 경우 사용되는 값&lt;/li&gt;
          &lt;li&gt;해당되는 값이 없음을 의미&lt;/li&gt;
          &lt;li&gt;숫자 0 이나, 공백 문자와 다름&lt;/li&gt;
          &lt;li&gt;널 값은 DBMS마다 표시하는 기호가 다르다.&lt;/li&gt;
          &lt;li&gt;예
            &lt;ul&gt;
              &lt;li&gt;쇼핑몰의 회원 가입시 직장정보 입력 칸에 입력을 하지 않은 경우&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;차수 (Degree)&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;한 릴레이션에서 속성의 수, 즉 열의 수&lt;/li&gt;
          &lt;li&gt;모든 릴레이션은 최소 1 이상의 차수를 가지고 있다&lt;/li&gt;
          &lt;li&gt;릴레이션의 차수는 변화가 별로 없다&lt;/li&gt;
          &lt;li&gt;예 : 5개의 속성을 가진 릴레이션의 차수는 5이다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;카디널리티 (Cardinality)&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;한 릴레이션에서 투플의 개수, 즉 행의 수&lt;/li&gt;
          &lt;li&gt;카디널리티가 0 (투플이 없는 릴레이션)인 릴레이션도 있다&lt;/li&gt;
          &lt;li&gt;릴레이션의 카디널리티는 자주 변한다&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-24-database-08-05.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;릴레이션의-구성-및-특징&quot;&gt;릴레이션의 구성 및 특징&lt;/h1&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;릴레이션 구성&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;릴레이션 스키마 (Relation Schema) / 릴레이션 내포 (Relation Intension)&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;릴레이션의 이름과 릴레이션에 포함된 속성의 이름으로 정의한 릴레이션의 논리적 구조&lt;/li&gt;
          &lt;li&gt;릴레이션의 논리적 구조&lt;/li&gt;
          &lt;li&gt;릴레이션의 전체구조를 파악할 수 있다&lt;/li&gt;
          &lt;li&gt;자주 바뀌지 않는다.&lt;/li&gt;
          &lt;li&gt;일반적인 표현&lt;/li&gt;
        &lt;/ul&gt;

        &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-24-database-08-06.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;
  &lt;br /&gt;&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;예&lt;/p&gt;

            &lt;ul&gt;
              &lt;li&gt;사원(사번, 직책, 이름, 생년월일)&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;릴레이션 인스턴스 (Relation Instance) / 릴레이션 외연 (Relation Extension)&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;한 시점에 릴레이션에 존재하는 투플의 집합&lt;/li&gt;
          &lt;li&gt;릴레이션 인스턴스에 포함된 투플은 릴레이션 스키마에서 정의하는 각 속성의 실제 값으로 구성&lt;/li&gt;
          &lt;li&gt;DBMS의 데이터 조작어를 이용하여 투플의 삽입, 삭제, 수정, 검색을 수행&lt;/li&gt;
          &lt;li&gt;릴레이션 인스턴스는 자주 바뀐다.&lt;/li&gt;
          &lt;li&gt;간단히 릴레이션이라고 부르기도 한다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-24-database-08-07.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;데이터베이스 스키마와 릴레이션 스키마&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;데이터베이스는 여러 개의 릴레이션으로 구성&lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;데이터베이스 스키마&lt;/p&gt;

            &lt;ul&gt;
              &lt;li&gt;데이터베이스의 전체 구조&lt;/li&gt;
              &lt;li&gt;릴레시션 스키마를 모아 놓은 것&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;데이터베이스 스키마를 설계한다 = 모든 릴레이션 스키마를 정의한다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;데이터베이스 인스턴스와 릴레이션 인스턴스&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;데이터베이스 인스턴스&lt;/p&gt;

            &lt;ul&gt;
              &lt;li&gt;어느 시점에 데이터베이스에 저장된 데이터 내용 전체&lt;/li&gt;
              &lt;li&gt;데이터베이스를 구성하는 모든 릴레이션 인스턴스를 모아 놓은 것&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-24-database-08-08.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;릴레이션의 특징&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;속성의 이름은 중복될 수 없다&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;한 릴레이션의 속성은 다른 이름을 가져야 한다&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;속성은 단일 값을 가진다.&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;여러 개의 값을 가져야만 하는 경우, 투플을 여러 개 만들어, 속성 값이 단일 값이 되도록 나눈다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;한 속성의 값은 해당 도메인의 값만 가질 수 있다&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;속성은 순서를 갖지 않는다&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;속성의 순서가 달라도 스키마는 동일하다.&lt;/li&gt;
          &lt;li&gt;속성의 순서와 상관없이 같은 속성들로 구성되어 있어야 같은 릴레이션이다.&lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;예 : 속성 순서가 다른 두 릴레이션&lt;/p&gt;

            &lt;ul&gt;
              &lt;li&gt;사원(사번, 직책, 이름, 생년월일)&lt;/li&gt;
              &lt;li&gt;사원(사번, 이름, 생년월일, 직책)&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;릴레이션 내의 중복된 투플은 허용되지 않는다&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;동일한 투플은 같은 릴레이션에 존재할 수 없다.&lt;/li&gt;
          &lt;li&gt;모든 투플에는 자신을 식별할 수 있는 속성을 가지고 있으므로, 동일한 투플이 존재하지 않는다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;하나의 릴레이션에서 투플의 순서는 무의미하다.&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;투플의 순서가 빠뀐다고 다른 릴레이션이 될 수 없다.&lt;/li&gt;
          &lt;li&gt;릴레이션에 투플이 삽입된 순서대로 저장된다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Mon, 24 Feb 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/devlog/2020/02/24/database-08/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/devlog/2020/02/24/database-08/</guid>
        
        <category>database</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[Database] 약한 개체와 IE표기법</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-23-database-07.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;약한-개체의-개체타입-식별관계타입-및-식별자&quot;&gt;약한 개체의 개체타입, 식별관계타입 및 식별자&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;약한 개체 타입&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;상위 개체 타입에 종속된 개체 타입&lt;/li&gt;
      &lt;li&gt;이중 직사각형으로 표현&lt;/li&gt;
      &lt;li&gt;예 : 직원의 가족 – 직원 개체 타입이 있어야 가족 개체 타입을 식별할 수 있다.&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-23-database-07-01.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;식별 관계 타입&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;강한 개체 타입과 약한 개체 타입의 관계를 나타냄&lt;/li&gt;
      &lt;li&gt;강한 개체 타입의 기본키를 상속받아 사용함&lt;/li&gt;
      &lt;li&gt;이중 마름모꼴로 표현&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-23-database-07-02.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;식별자 (Discriminator) / 부분키 (Partial key)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;약한 개체 타입은 자신의 기본키만으로 식별이 어려우므로, 상위의 강한 개체 타입의 기본키를 상속받아 결합하여 사용&lt;/li&gt;
      &lt;li&gt;약한 개체 타입은 식별자를 사용하여 개별 개체를 식별할 수 있다.&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-23-database-07-03.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;예&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;직원 개체 타입과 가족 개체 타입은 부양 관계를 가진다.&lt;/li&gt;
      &lt;li&gt;직원 – 자기 자신만으로 존재 가능, 사번을 키로 구분한다.&lt;/li&gt;
      &lt;li&gt;가족 – 어느 직원의 가족인지 알기 위하여 직원의 사번과 가족의 이름으로 식별이 가능하다&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-23-database-07-04.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;약한개체타입, 식별관계타입 및 식별자 정리&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-23-database-07-05.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;약한-개체의-개체타입-식별관계타입-및-식별자-1&quot;&gt;약한 개체의 개체타입, 식별관계타입 및 식별자&lt;/h1&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;IE란()Information Engineering Notation)&lt;/p&gt;

&lt;p&gt;새발 표기법(Crow-feet Notation) : 관계 대응수를 새발 모양의 기호로 표현&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;피터첸 표기법과 IE표기법&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-23-database-07-06.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;개체의 표현&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-23-database-07-07.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;속성의 표현&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-23-database-07-08.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;관계의 표현&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-23-database-07-09.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;관계대응수의 표현&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;1:N 관계 대응수&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-23-database-07-10.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-23-database-07-11.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;1:1 관계 대응수&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-23-database-07-12.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;M:N 관계대응수&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-23-database-07-13.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;참여도의 표현&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;부분 참여
 &lt;img src=&quot;/assets/img/database/2020-02-23-database-07-14.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;전체 참여&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-23-database-07-15.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;강한개체와 약한개체의 표현&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;(강한 개체 : 약한 개체) 관계 대응수 = ( 1 : N )&lt;/li&gt;
      &lt;li&gt;(강한 개체 : 약한 개체) 참여도 = ( 전체 : 부분 )&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-23-database-07-16.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;키와 식별자의 표현&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;기본키&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;속성 이름 앞에 ◆로 표기&lt;/li&gt;
          &lt;li&gt;속성 이름 뒤에 (PK)로 표기&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-23-database-07-17.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;외래키&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;속성의 이름 뒤에 (FK)로 표기&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-23-database-07-18.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Sun, 23 Feb 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/devlog/2020/02/23/database-07/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/devlog/2020/02/23/database-07/</guid>
        
        <category>database</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[유닉스] 디렉토리 계층구조</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-02-22-unix-06.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;디렉토리-계층-구조&quot;&gt;디렉토리 계층 구조&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;디렉토리 계층 구조&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;데이터를 효율적으로 관리하기 위해 시스템을 계층적인 트리 구조로 구성&lt;/li&gt;
      &lt;li&gt;트리 구조 : 모양이 나무를 거꾸로 한 것과 유사&lt;/li&gt;
      &lt;li&gt;파일이 나무의 잎에, 디렉토리가 나뭇가지에 해당&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;루트(root) 디렉토리&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;모든 디렉토리, 파일의 원조 및 시작&lt;/li&gt;
          &lt;li&gt;슬래시(/) 기호로 표시&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;여러 가지 디렉토리&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;상위 디렉토리는 기호 ..으로 표시&lt;/li&gt;
      &lt;li&gt;모든 디렉토리의 최상위는 루트 디렉토리(/)&lt;/li&gt;
      &lt;li&gt;루트 디렉토리 : 상위 디렉토리가 없는 유일한 디렉토리&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;작업 디렉토리(working directory), 현재 디렉토리(current directory)&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;현재 작업을 하고 있는 디렉토리&lt;/li&gt;
          &lt;li&gt;기호 ‘.’로 표시&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;홈 디렉토리&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;기호 틸드(~)로 표시&lt;/li&gt;
      &lt;li&gt;다중 사용자 시스템에서 각 사용자에게 할당된 작업 영역&lt;/li&gt;
      &lt;li&gt;파일의 생성, 삭제를 자유롭게 할 수 있는 디렉토리&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;리눅스의 계층구조 디렉토리&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-02-22-unix-06-01.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;루트(/) 디렉토리&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;리눅스 시스템의 최상위 디렉토리&lt;/li&gt;
      &lt;li&gt;디렉토리 구조의 시작&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;리눅스는 루트(/)를 기준으로 디렉토리를 생성&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cd /
  $ ls
  bin etc lost+found opt run sys var
  boot home media proc sbin tmp
  dev lib mnt root srv usr
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;기본 실행 명령어 디렉토리 (/bin)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;‘binaries’, 리눅스 시스템에서 가장 많이 사용되는 디렉토리 중 하나&lt;/li&gt;
      &lt;li&gt;기본 명령어 파일들이 2진수의 형태로 모여 있는 디렉토리&lt;/li&gt;
      &lt;li&gt;대부분의 일반적인 명령어들 포함&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;시스템 운영 명령어 디렉토리 (/sbin)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;‘system binaries’, 시스템 관리(부팅, 복구, 보수 등)를 위한 명령어들&lt;/li&gt;
      &lt;li&gt;시스템 운영에 필요한 명령어들 포함&lt;/li&gt;
      &lt;li&gt;관리자 계정인 루트(root)만이 사용할 수 있는 명령어들로 구성&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;시스템 설정 파일 디렉토리 (/etc)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;리눅스 시스템에 대한 환경 설정과 관련된 파일 및 디렉토리&lt;/li&gt;
      &lt;li&gt;사용자 관리를 위한 암호 관련 파일, 네트워크 정보를 보유한 파일 등 시스템 관리에 전반적인 파일들 존재&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;부팅 관련 파일 디렉토리 (/boot)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;리눅스 커널이 저장되어 있는 디렉토리&lt;/li&gt;
      &lt;li&gt;각종 리눅스 부트에 필요한 부팅 지원 파일들&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;입출력 장치 연결 마운트 디렉토리 (/mnt)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;‘mount directory’, 각종 입출력 장치와 연결할 때 마운트하게 되면 해당 파일 시스템의 내용이 이 디렉토리에 저장됨&lt;/li&gt;
      &lt;li&gt;가상 머신으로 리눅스 설치시 비어있음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;임시 마운트 디렉토리 (/media)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;CD/DVD 또는 FDD, USB 등이 임시로 마운트되는 역할 수행&lt;/li&gt;
      &lt;li&gt;가상 머신으로 리눅스 설치시 비어있음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;응용 패키지 프로그램 설치 디렉토리 (/usr)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;사용자가 사용할 응용 패키지 프로그램 설치시 사용&lt;/li&gt;
      &lt;li&gt;윈도우 운영체제에서의 [Program Files]와 같은 역할&lt;/li&gt;
      &lt;li&gt;시스템에 사용되는 각종 응용 프로그램들이 설치되는 디렉토리&lt;/li&gt;
      &lt;li&gt;거의 모든 프로그램과 그에 관련된 명령어 및 라이브러리들 포함&lt;/li&gt;
      &lt;li&gt;X 윈도우 시스템 관련 파일들과 리눅스 커널 소스, 각종 C 언어 관련 헤더 파일 등 저장&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;공유 라이브러리 디렉토리 (/lib)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;프로그램들의 각종 라이브러리들 존재, 대부분 공유 라이브러리&lt;/li&gt;
      &lt;li&gt;평소에는 파일 크기를 줄여서 존재, 라이브러리 실행시 풀어서 사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;일반 사용자들의 홈 디렉토리 (/home)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;시스템 계정을 사용하는 사용자들의 홈 디렉토리&lt;/li&gt;
      &lt;li&gt;FTP, www 등과 같은 서비스 디렉토리들 저장&lt;/li&gt;
      &lt;li&gt;시스템에서 사용되지 않고, 원격지 상에서 시스템으로 접속을 시도하는 사용자들을 위한 공간으로 사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;시스템 디바이스 장치 파일 디렉토리 (/dev)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;시스템의 각종 장치들을 사용할 수 있도록 장치 드라이버들 저장&lt;/li&gt;
      &lt;li&gt;리눅스에서는 각종 장치들을 하나의 파일로 취급&lt;/li&gt;
      &lt;li&gt;시스템은 각 장치를 설치하는데 필요한 정보를 이 디렉토리에서 가져옴&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;가상 파일 시스템 디렉토리 (/proc)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;시스템의 각종 프로세스와 프로그램 정보 및 하드웨어적인 정보들 저장&lt;/li&gt;
      &lt;li&gt;물리적인 하드디스크 용량을 사용하지 않고 커널에 의해 메모리에 저장됨&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;가변 자료 저장 디렉토리 (/var)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;시스템에서 사용되는 동적인 파일, 즉 변경되는 파일들 저장&lt;/li&gt;
      &lt;li&gt;각종 시스템 로그 파일, 사용자 로그인에 대한 보안 기록 등&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;임시 파일 저장 디렉토리 (/tmp)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;프로그램 수행 과정에서의 임시 파일들 저장&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;리눅스에 없는 프로그램 추가 설치 디렉토리 (/opt)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;리눅스에서 제공되지 않는 프로그램을 추가로 설치할 경우 사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;복구 프로그램인 fsck에 의해 사용되는 디렉토리 (/lost+found)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;수행 중 파일시스템의 이상 유/무를 진단하고 복구하는 프로그램인 fsck(file system check)에 의해 사용되는 디렉토리&lt;/li&gt;
      &lt;li&gt;일반 사용자 계정으로 로그인한 상태에서는 접근 불가&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;관리자 계정인 root로 접속해야 디렉토리의 내용을 볼 수 있음&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cd /lost+found
  -bash: cd: /lost+found: Permission denied
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;디렉토리-계층-구조-1&quot;&gt;디렉토리 계층 구조&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;디렉토리&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;서로 연관이 있는 파일들을 하나의 그룹으로 만들어서 저장할 수 있도록 구분된 공간을 의미&lt;/li&gt;
      &lt;li&gt;각 디렉토리의 이름은 “/”로 구별&lt;/li&gt;
      &lt;li&gt;특정 파일을 지정할 때는 맨 마지막에 파일이름을 쓴다.&lt;/li&gt;
      &lt;li&gt;파일시스템의 맨 상위 디렉토리를 root 디렉토리&lt;/li&gt;
      &lt;li&gt;root 디렉토리는 “/”로 표기&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;경로명(path name)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;파일이나 디렉토리의 전체 이름&lt;/li&gt;
      &lt;li&gt;디렉토리 계층 구조에 있는 특정 파일이나 디렉토리의 위치를 나타내는 것&lt;/li&gt;
      &lt;li&gt;디렉토리와 디렉토리, 디렉토리와 파일을 구별하는 구별자로 “/”를 사용&lt;/li&gt;
      &lt;li&gt;경로명이 디렉토리 이름으로 끝나는 경우 제일 뒤에 “/”를 붙이거나 붙이지 않을 수 있음&lt;/li&gt;
      &lt;li&gt;절대경로명과 상대경로명이 있음&lt;/li&gt;
      &lt;li&gt;파일 이름이나 디렉토리 지정하는 방법도 절대경로명을 사용하거나 상대경로명을 사용하는 방법&lt;/li&gt;
      &lt;li&gt;파일을 명시할 때, 별도의 경로명을 써주지 않으면 현재 디렉토리를 가리킴&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;절대경로명&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;루트 디렉토리를 기준으로 파일의 위치를 나타낸 것&lt;/li&gt;
      &lt;li&gt;루트 디렉토리부터 시작해서 특정 파일의 위치까지 이동하는데 거치는 모든 디렉토리의 이름 표시&lt;/li&gt;
      &lt;li&gt;항상 “/”로 시작&lt;/li&gt;
      &lt;li&gt;특정 파일을 가리키는 절대경로명은 항상 동일&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;상대경로명&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;현재 디렉토리를 기준으로 파일의 위치를 나타낸 것&lt;/li&gt;
      &lt;li&gt;현재 디렉토리부터 시작해서 하위로 내려가면 디렉토리 이름 추가&lt;/li&gt;
      &lt;li&gt;루트를 향해 올라가면 “..”을 추가&lt;/li&gt;
      &lt;li&gt;“/” 이외의 문자로 시작&lt;/li&gt;
      &lt;li&gt;상대경로명은 현재 디렉토리의 위치에 따라 달라짐&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;탐색 경로&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;명령어를 실행시키면 리눅스는 명령어의 실행 파일이 있는 위치를 찾음&lt;/li&gt;
      &lt;li&gt;탐색 경로 : 명령어를 어디에서 찾아야 할지 명시하는 것&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;명령어가 존재하는 디렉토리가 탐색 경로에 없으면 명령어 이름만으로 실행시킬 수 없음&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;절대 경로명을 다 써주어 실행시키거나&lt;/li&gt;
          &lt;li&gt;현재 작업 디렉토리를 나타내는 “.”을 사용&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;명령 실행시 탐색 경로의 예&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;test 파일의 내용이 다음과 같은 경우&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cat test
  ls
  date
  cat test
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;현재 작업 디렉토리가 탐색 경로에 지정되지 않았으므로 실행되지 않음&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ test
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;현재 작업 디렉토리를 지정한 경우&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ ./test
  Desktop Downloads Music Public Videos
  Documents examples.desktop Pictures Templates
  2015. 06. 01. (월) 13:34:25 KST
  ls
  date
  cat test
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;또는 절대경로명을 다 써줄 수 있음&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ /home/ksshin/test
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;기호로 디렉토리 이동&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;~ : 홈 디렉토리로 이동&lt;/li&gt;
      &lt;li&gt;. : 현재 디렉토리 지정&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Sat, 22 Feb 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/devlog/2020/02/22/unix-06/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/devlog/2020/02/22/unix-06/</guid>
        
        <category>unix</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[유닉스] 파일의 종류</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-02-20-unix-05.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;명령어-구조&quot;&gt;명령어 구조&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;유닉스 파일 시스템&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;파일 시스템이란&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;파일을 저장하는데 쓰이는 수단&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;디스크에 파일을 저장하는 방법. 디스크에서 파일이 구성되는 방식&lt;/p&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;시스템 내의 수많은 파일을 효과적으로 관리하기 위해 디렉토리를 계층적으로 구성&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;디렉토리, 서브디렉토리, 개별 파일&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;유닉스의 파일은, ‘파일 이름’, ‘i-node’, ‘데이터 블록’의 세 가지 요소를 모두 충족해야 함&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-02-20-unix-05-01.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;파일 이름 명명규칙&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;특별한 확장명 없이 이름 사용&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;‘.’으로 시작하는 파일의 경우&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;숨어있는 파일을 의미&lt;/li&gt;
          &lt;li&gt;주로 시스템 파일에 사용&lt;/li&gt;
          &lt;li&gt;ls 명령어에 옵션 ‘-a’를 설정해야 파일의 존재 확인&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;파일 이름은 최대 255자까지 허용&lt;/li&gt;
      &lt;li&gt;루트를 의미하는 ‘/’는 사용 불가&lt;/li&gt;
      &lt;li&gt;파일과 디렉토리 이름에는 알파벳, 숫자, 하이픈(-), 밑줄(_), 점(.) 만을 사용&lt;/li&gt;
      &lt;li&gt;
        &lt;table&gt;
          &lt;tbody&gt;
            &lt;tr&gt;
              &lt;td&gt;파일과 디렉토리 이름에 공백, *, &amp;amp;,&lt;/td&gt;
              &lt;td&gt;, “, ‘, ~, #, $, (, ), \, ;, &amp;lt;, &amp;gt;는 쓰지 않음&lt;/td&gt;
            &lt;/tr&gt;
          &lt;/tbody&gt;
        &lt;/table&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;i-node&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;리눅스가 파일을 생성할 때의 두 가지 절차&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;파일의 데이터를 저장하기 위한 디스크 공간 확보&lt;/li&gt;
          &lt;li&gt;파일에 대한 기본 정보를 저장하는 i-node(index node) 구조 생성&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;리눅스는 i-node를 테이블에 보관&lt;/li&gt;
      &lt;li&gt;각각의 i-node는 i-number(혹은 index number)라고 부름&lt;/li&gt;
      &lt;li&gt;모든 디렉토리는 파일의 이름과 i-number만을 가지고 있음&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;i-node 확인 명령&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;ls –il&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;파일 시스템에서 i-node 확인 명령&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;df –i (df는 디스크 용량 확인 명령)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-02-20-unix-05-02.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;데이터 블록&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;파일을 저장할 때 실제 데이터는 구분없이 디스크에 저장&lt;/li&gt;
      &lt;li&gt;데이터 블록 : 파일들의 실제 데이터가 디스크의 한 곳에 저장되어 있는 것&lt;/li&gt;
      &lt;li&gt;파일들을 구분할 수 있는 부가적인 정보는 i-node에 있음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;슈퍼블록&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;디스크에 저장되는 가장 중요한 정보&lt;/li&gt;
      &lt;li&gt;디스크의 헤드와 실린더 수, i-node 목록의 헤드, 자유 블록에 대한 정보&lt;/li&gt;
      &lt;li&gt;파일 시스템이 마운트될 때 맨 처음 읽는 정보&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;슈퍼블록은 모든 블록 그룹에 똑같은 복사본을 갖도록 시스템이 자동으로 만듦&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;파일 시스템 손상되었을 때 슈퍼블록을 이용하여 복구 가능&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;파일의-종류&quot;&gt;파일의 종류&lt;/h1&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;일반 파일&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;데이터 저장이 목적인 파일&lt;/li&gt;
      &lt;li&gt;사용자가 작성한 문서, 프로그램, 자료&lt;/li&gt;
      &lt;li&gt;텍스트 파일과 바이너리 파일로 나뉨&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;텍스트 파일&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;내용이 아스키(ASCII) 코드로 구성된 파일&lt;/li&gt;
      &lt;li&gt;텍스트 편집기나 cat, more 명령을 이용해 내용을 볼 수 있음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;바이너리 파일&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;내용이 아스키 코드가 아닌 모든 파일&lt;/li&gt;
      &lt;li&gt;실행 파일과 데이터 파일이 있음&lt;/li&gt;
      &lt;li&gt;지정된 응용 프로그램을 이용해야 내용을 볼 수 있음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;디렉토리 파일&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;그 내용이 다른 파일이나 하위 디렉토리의 이름인 특수 파일&lt;/li&gt;
      &lt;li&gt;디렉토리에 포함된 파일들에 대한 위치, 크기, 생성 시간 등의 정보 포함&lt;/li&gt;
      &lt;li&gt;기본적으로 다음 두 파일을 항상 가짐&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-02-20-unix-05-03.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;심볼릭 링크 파일&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;윈도우 시스템의 바로가기 아이콘에 해당하는 파일&lt;/li&gt;
      &lt;li&gt;원본 파일을 가리키는 역할만 함&lt;/li&gt;
      &lt;li&gt;사용 목적 : 불필요한 파일 복사를 줄이고 파일시스템을 보다 기능적으로 사용하기 위해서&lt;/li&gt;
      &lt;li&gt;디렉토리도 파일처럼 링크할 수 있음&lt;/li&gt;
      &lt;li&gt;링크를 삭제할 때는 링크만 삭제, 원본 파일은 그대로 존재&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;링크의 원본 파일을 삭제해도 링크 파일은 그대로 존재&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cd /bin
  $ ls –l ypdomainname
  lrwxrwxrwx 1 root root 8 5월 30 13:20 ypdomainname -&amp;gt;
  hostname
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;장치(디바이스) 파일&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;유닉스 시스템에 부착된 장치들을 관리하기 위한 특수 파일&lt;/li&gt;
      &lt;li&gt;/dev, /devices 디렉토리에 존재&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;문자 장치 특수 파일&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;버퍼가 없는 장치로부터 한 번에 한 문자씩(바이트 단위) 자료를 입출력하는 장치&lt;/li&gt;
          &lt;li&gt;예) 키보드, 모니터, 터미널, 프린터, 플로터, 보조 기억장치&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;블록 장치 특수 파일&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;버퍼기술을 사용해 자료 전송 효율을 높임&lt;/li&gt;
          &lt;li&gt;수십 혹은 수백 바이트 크기의 블록 단위로 데이터를 입출력하는 장치&lt;/li&gt;
          &lt;li&gt;예) HDD, FDD, 테이프 드라이브, 광자기 드라이브&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;파이프 파일&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;네임드 파이프(named pipe)라고 하며, 프로세스간 통신을 수행하기 위해 만들어진 파일&lt;/li&gt;
      &lt;li&gt;한 프로그램의 출력을 중간 파일 없이 다른 파일의 입력으로 바로 보내는 파일&lt;/li&gt;
      &lt;li&gt;
        &lt;table&gt;
          &lt;tbody&gt;
            &lt;tr&gt;
              &lt;td&gt;파이프는 파이프(&lt;/td&gt;
              &lt;td&gt;) 기호 왼쪽 명령어의 출력을 오른쪽 명령어의 입력으로 보냄&lt;/td&gt;
            &lt;/tr&gt;
          &lt;/tbody&gt;
        &lt;/table&gt;
      &lt;/li&gt;
      &lt;li&gt;파이프라인은 하나 이상의 파이프로 구성되며, 파이프에서의 데이터는 선입선출(FIFO : First In First Out) 방식&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-02-20-unix-05-04.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;소켓 파일&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;소켓(socket) : 네트워크의 입출력을 담당하는 API(Application Program Interface)로 두 호스트 컴퓨터 사이의 정보전달&lt;/li&gt;
      &lt;li&gt;물리적으로 연결된 네트워크상에서의 데이터 송수신에 사용할 수 있는 소프트웨어적인 장치&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;소켓 연결 과정&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;1단계 : 소켓 생성&lt;/li&gt;
          &lt;li&gt;2단계 : IP 주소와 포트 번호 할당&lt;/li&gt;
          &lt;li&gt;3단계 : 연결 요청 가능한 상태로 설정&lt;/li&gt;
          &lt;li&gt;4단계 : 연결 요청에 대한 수락&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;파일의 종류 확인&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;file 명령&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;파일의 종류를 알아보는 명령&lt;/li&gt;
          &lt;li&gt;패키지 파일의 경우 버전을 알려줌&lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;형식 : file 파일이름&lt;/p&gt;

            &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ file passwd
  passwd: ascii text
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Thu, 20 Feb 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/devlog/2020/02/20/unix-05/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/devlog/2020/02/20/unix-05/</guid>
        
        <category>unix</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[유닉스] 일반 명령어</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-02-19-unix-04.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;명령어-구조&quot;&gt;명령어 구조&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;개요&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;유닉스 명령어는 내부 명령어와 외부 명령어로 구분&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;내부 명령어&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;cd, export 등 파일로 존재하지 않고 쉘에 내장되어 있음&lt;/li&gt;
          &lt;li&gt;실행시 별도의 프로세스를 발생시키지 않음&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;외부 명령어&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;유닉스 명령어의 대부분을 차지&lt;/li&gt;
          &lt;li&gt;/bin, /usr/bin, /sbin 디렉토리에 파일 형태로 존재&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;명령을 입력한 전체 줄을 명령어 라인(command line)이라고 함&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;명령의 구조&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;형식&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;명령 [옵션] [인자 … ]&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;명령&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;사용자가 입력하는 명령, 유닉스에 작업을 지시하는 프로그램 이름&lt;/li&gt;
          &lt;li&gt;내부 명령어, 외부 명령어, 유틸리티&lt;/li&gt;
          &lt;li&gt;예) ls, date, cal 등&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;옵션&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;명령의 세부 기능&lt;/li&gt;
          &lt;li&gt;‘-’ 기호로 시작하며 숫자, 영문 대문자나 소문자로 구성&lt;/li&gt;
          &lt;li&gt;예) ls -l&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;인자&lt;/p&gt;

        &lt;p&gt;– 명령으로 전달되는 값
  – 파일명이나 디렉토리명을 사용
  – 예) ls /tmp, ls l /tmp&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;명령어의 경로 표시&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;외부 명령어의 경우 쉘 외부에 별도의 파일로 저장되어 있음&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;명령어가 어느 디렉토리에 속해 있는지 알고자 할 경우 which 명령 사용&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ which date
  /bin/date
  $ &amp;lt;br&amp;gt; &amp;lt;br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;명령어-구조-1&quot;&gt;명령어 구조&lt;/h1&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;passwd 명령&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;비밀번호 변경&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ passwd
  Changing password for ksshin
  Enter new UNIX password:
  Retype new UNIX password:
  passwd: password updated successfully
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;banner 명령&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;문자열을 큰 문자로 출력&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ banner unix
        
  #   #   #     #   #     #     #
  #   #   ##    #   #      #   #
  #   #   #  #  #   #       # #
  #   #   #   # #   #       # #
  #   #   #    ##   #      #   #
  ####    #     #   #     #     #
        
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;date 명령&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;현재 날짜와 시간 출력&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ date
  2015. 06. 01. (월) 13:34:25 KST
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;hostname 명령&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;사용하고 있는 호스트 이름 출력&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ hostname
  Ubuntu
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;uname 명령&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;사용하고 있는 운영체제 확인&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ uname
  Linux
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;who 명령&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;현재 로그인한 사용자 확인&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ who
  ksshin tty1 2015-06-01 11:04
  ksshin :0 2015-06-01 10:20 (:0)
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;ls 명령&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;현재 디렉토리 내의 파일 목록 출력&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ ls
  Desktop Downloads Music Public Videos
  Documents examples.desktop PicturesTemplates
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;clear 명령&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;화면을 깨끗이 지워줌&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ clear
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;화면에서 clear 명령을 내리면, 화면의 내용이 모두 지워지고 터미널 맨 윗줄에 프롬프트만 나타남&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;온라인-매뉴얼&quot;&gt;온라인 매뉴얼&lt;/h1&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;온라인 매뉴얼의 구성&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;온라인 매뉴얼이란&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;특정 명령어의 사용법을 알고 싶을 때 man 명령을 이용해 매뉴얼을 볼 수 있게 한 것&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;8개의 주요 절로 구성&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-02-19-unix-04-01.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- 1, 7절 : 사용자가 가장 많이 보는 절
- 2, 3, 4, 5절 : 프로그래머에게 필요한 절
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;온라인 매뉴얼 사용법&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;man 명령&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;기능 : 명령의 사용법을 화면으로 출력&lt;/li&gt;
          &lt;li&gt;형식 : man [절 번호] 명령&lt;/li&gt;
          &lt;li&gt;옵션에 절 번호를 넣으면, 같은 명령이라도 그 절 안에서 찾는다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;예) man clear&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ man clear
  clear               General Commnds Manual              clear(1)
        
  NAME
      clear – clear the terminal screen
  SYNOPSIS
      clear
  DESCRIPTION
      clear clears your screen if this is possible, including its
      scrollback buffer (if the extended “E3” capability is defined).
      clear looks in the environment for the terminal type and then
      in the terminfo database to determine how to clear the screen.
            
      clear ignores any command-line parameters that may be
      present.
  SEE ALSO
      tput(1), terminfo(5)
      This describes ncurses version 5.9 (patch 20140118).
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;온라인 매뉴얼에서의 사용 키&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-02-19-unix-04-02.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;매뉴얼 페이지 형식&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;man 페이지는 사용자가 보기 편하도록 표준 머리말을 사용&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-02-19-unix-04-03.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;빠른 명령어 탐색&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;whatis&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;명령에 대한 간단한 설명만 필요로 할 때 사용&lt;/p&gt;

            &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ whatis ls
  ls (1)          - list directory contents
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;apropos&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;어떤 명령을 사용할지 모를 때 특정 단어가 들어가 있는 명령어 검색&lt;/p&gt;

            &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ apropos cp
  ...
  cp (1) - copy files and directories
  cpio (1) - copy files to and from archives
  ...
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;이 명령은 man 명령에서 ‘-k’ 옵션을 써서 대체할 수 있음&lt;/p&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Wed, 19 Feb 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/devlog/2020/02/19/unix-04/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/devlog/2020/02/19/unix-04/</guid>
        
        <category>unix</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[유닉스] 명령어</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-02-18-unix-03.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;사용자-계정-관리&quot;&gt;사용자 계정 관리&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;시스템 관리자 또는 슈퍼유저(superuser)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;유닉스 시스템은 여러 사용자가 하나의 시스템을 사용하는 다중 사용자 시스템이므로 전체 시스템을 관리하는 시스템 관리자 필요&lt;/li&gt;
      &lt;li&gt;root 계정을 사용하여 로그인&lt;/li&gt;
      &lt;li&gt;사용자 계정을 추가, 삭제, 사용자 패스워드 변경&lt;/li&gt;
      &lt;li&gt;소프트웨어 설치, 로그 파일 검사 등 전체 시스템 관리와 유지보수&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;일반 사용자가 슈퍼유저로 로그인 : su 명령어 사용하여 root 계정으로 로그인&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ su [사용자명]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;사용자 계정 등록&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;로그인 ID : 영문 소문자를 사용하여 8자까지 가능&lt;/li&gt;
      &lt;li&gt;비밀번호 : 최소 하나 이상의 숫자와 알파벳을 사용하여 최소 6자 이상을 허용&lt;/li&gt;
      &lt;li&gt;로그인 ID와 초기 비밀번호는 시스템 관리자가 지정&lt;/li&gt;
      &lt;li&gt;비밀번호는 사용자가 변경 가능(passwd 명령)&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;사용자 계정 추가&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  # useradd [옵션] [사용자명]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;

        &lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-02-18-unix-03-01.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;
  &lt;br /&gt;&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;그룹 추가, 삭제&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;사용자는 하나 이상의 그룹에 속하게 됨&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;그룹 추가&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   # groupadd 그룹명
         
   /etc/group 파일에 해당 그룹에 대한 정보가 추가됨
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;그룹 삭제&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  # groupdel 그룹명
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;쉘 프롬프트&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;로그인이 성공하면 시스템은 사용자의 입력을 기다림&lt;/li&gt;
      &lt;li&gt;대기 상태는 프롬프트와 커서로 표시&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;프롬프트&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &quot;#&quot; : 현재 로그인한 사용자가 시스템 관리자(root)임을 나타냄
  &quot;$&quot; : 본(Bourne) 쉘 또는 콘(Korn) 쉘에서 사용
  &quot;%&quot; : C 쉘에서 사용
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;프롬프트 모양은 변경 가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;쉘&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;명령어 해석기(command processor)&lt;/li&gt;
      &lt;li&gt;사용자가 입력하는 명령을 읽고 해석하는 프로그램&lt;/li&gt;
      &lt;li&gt;‘스크립트(script)’라는 프로그램을 해석&lt;/li&gt;
      &lt;li&gt;Bourne 쉘을 기본으로 사용, C 쉘, Korn 쉘, Bash 쉘&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;홈 디렉토리&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;유닉스 시스템에서 사용자가 로그인한 직후의 디렉토리가 사용자의 홈 디렉토리&lt;/li&gt;
      &lt;li&gt;사용자는 홈 디렉토리 아래에 자신이 원하는 파일이나 디렉토리를 생성하여 작업&lt;/li&gt;
      &lt;li&gt;사용자의 홈 디렉토리는 사용자 계정 등록할 때 결정&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;명령행 편집 방법&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;유닉스, 리눅스는 대문자와 소문자를 구별함&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;문자 지우기&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  ← 키나 Delete 키를 사용
  유닉스 종류에 따라 기본값 설정이 다름
  ← 키 눌렀는데 “^H”만 나오면 Delete 키가 기본값으로 설정된 경우, Delete 키나 Ctrl + ? 키로 지울 수 있음
  Delete 키 눌렀는데 “^?”가 나오면 ← 키가 기본값으로 설정된 경우
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;단어 지우기&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  Ctrl + W 키를 사용하여 단어 삭제
  단어는 공백으로 구분
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;문장 지우기&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  Ctrl + U 키를 사용하여 해당 행의 내용을 모두 삭제
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;로그아웃&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;작업 후 로그아웃(logout)을 하여 세션(session)을 종료&lt;/li&gt;
      &lt;li&gt;exit, logout 명령 사용&lt;/li&gt;
      &lt;li&gt;Ctrl + D 키는 강제 종료. 파일의 끝이라는 신호를 보내게 되므로 쉘을 끝내고 로그아웃됨&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Tue, 18 Feb 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/devlog/2020/02/18/unix-03/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/devlog/2020/02/18/unix-03/</guid>
        
        <category>unix</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[유닉스] 특징 및 구조</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-02-18-unix-02.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;유닉스의-특징&quot;&gt;유닉스의 특징&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;단순성&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;운영체제 자체를 단순화시켜 최소한의 필요한 기능만 제공&lt;/li&gt;
      &lt;li&gt;자원에 관한 일관성 있는 관점 제공, 주변 장치를 파일과 같은 형식으로 사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;이식성과 확장성&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;고급 언어인 C로 작성되어 다양한 플랫폼에 이식하여 사용 가능&lt;/li&gt;
      &lt;li&gt;각 기능이 모듈화되어 있어 새 기능 추가시 모듈만 추가하면 됨&lt;/li&gt;
      &lt;li&gt;주요 유닉스 계열의 운영체제
 – 안드로이드(Adroid) OS
 – iOS
 – 맥(Mac) OS X
 – 리눅스(Linux)
 – BSD 유닉스(Unix)
 – 시스템 V
 – Sun 솔라리스(Solaris)
 – IBM AIX
 – HP HP-UX
 – Cray 유니코스(Unicos)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;개방성&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;소스 코드 공개&lt;/li&gt;
      &lt;li&gt;대학에서 유닉스를 기반으로 여러 가지 유용한 소프트웨어 개발, 보급&lt;/li&gt;
      &lt;li&gt;유닉스의 양적, 질적인 면에서 폭발적 성장을 촉진하는 원동력&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;대화형 시스템&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;명령어 기반 사용자 인터페이스 이용&lt;/li&gt;
      &lt;li&gt;유닉스가 이해할 수 있는 ‘명령’을 사람이 입력, 유닉스는 명령 처리 결과를 화면에 출력&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;다중 사용자 시스템, 다중 작업용 시스템&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;여러 사용자가 컴퓨터에 동시에 접속하여 사용할 수 있는 운영체제&lt;/li&gt;
      &lt;li&gt;사용자들은 직렬 회선(Serial Cable)으로 연결된 단말기를 통해 유닉스에 접속&lt;/li&gt;
      &lt;li&gt;한 대의 컴퓨터에서 여러 작업을 동시에 수행&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;쉘 스크립트&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;유닉스 명령어나 유틸리티 등을 사용하여 프로그램을 작성하여 사용&lt;/li&gt;
      &lt;li&gt;큰 작업을 수행할 때 기존의 작은 프로그램들을 적절히 결합하여 수행하는 방식&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;다양한 부가 기능 제공&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;ftp, telnet, www 등 다양한 네트워크 관련 응용 프로그램 제공&lt;/li&gt;
      &lt;li&gt;웹 서버, DB 서버, 메일 서버, 뉴스 서버, 네임 서버 등 네트워크 서버 기능 지원&lt;/li&gt;
      &lt;li&gt;프로그래밍 및 디버깅 도구, 문서 편집 도구, 출력 관련 도구 제공&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;유닉스-리눅스의-활용-분야&quot;&gt;유닉스, 리눅스의 활용 분야&lt;/h1&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;서버&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;웹 서버, DB 서버, 파일 서버, 메일 서버, 뉴스 서버, 네임 서버, 클러스터링 등&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;임베디드 시스템&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;통신 단말기 : 휴대폰, PDA, PMP, 무선 IP 공유기, IPTV 셋탑박스, 인터넷폰 등&lt;/li&gt;
      &lt;li&gt;네트워크 장비 : 스위치, 방화벽, 게이트웨이 등&lt;/li&gt;
      &lt;li&gt;가전 제품 : DVD Player, MP3 Player 등&lt;/li&gt;
      &lt;li&gt;생산 설비 : 홈오토메이션, 공장 자동화, 산업용 로봇 등&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;유닉스-시스템의-구조&quot;&gt;유닉스 시스템의 구조&lt;/h1&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;유닉스 시스템의 구조&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;구성요소 : 하드웨어, 커널, 쉘 및 라이브러리, 사용자 및 응용 프로그램&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-02-18-unix-02-01.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;커널&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;운영체제의 핵심&lt;/li&gt;
      &lt;li&gt;하드웨어를 운영 관리&lt;/li&gt;
      &lt;li&gt;프로세스 관리 (Process management)
 – 여러 개의 응용 프로그램들이 동시에 수행되는 것처럼 실행될 수 있도록 프로세스 스케줄링&lt;/li&gt;
      &lt;li&gt;파일 관리 (File management)
 – 디스크 상에 파일 시스템을 구성하여 파일을 관리&lt;/li&gt;
      &lt;li&gt;메모리 관리 (Memory management)
 – 메인 메모리가 효과적으로 사용될 수 있도록 관리&lt;/li&gt;
      &lt;li&gt;통신 관리 (Communication management)
 – 네트워크를 통해 정보를 주고 받을 수 있도록 관리&lt;/li&gt;
      &lt;li&gt;주변 장치 관리 (Device management)
 – 모니터, 키보드, 마우스와 같은 장치를 사용할 수 있도록 관리&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;시스템 호출(system call)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;커널이 제공하는 서비스에 대한 프로그래밍 인터페이스 역할&lt;/li&gt;
      &lt;li&gt;시스템 호출에 기반하여 공통적인 함수들의 모음인 라이브러리 존재&lt;/li&gt;
      &lt;li&gt;응용 프로그램은 필요시 시스템 호출과 라이브러리를 자유롭게 사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;쉘&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;사용자와 커널 사이의 중간자 역할&lt;/li&gt;
      &lt;li&gt;사용자가 입력한 명령을 해석하여 커널에 전달&lt;/li&gt;
      &lt;li&gt;커널이 명령 수행 결과를 돌려주면 사용자에게 전달&lt;/li&gt;
      &lt;li&gt;본 쉘(sh, Bourne Shell), C 쉘(csh, C Shell), 콘 쉘(kch, Korn Shell), 배시 쉘(bash, Bourne Again Shell)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;사용자 및 응용 프로그램, 유틸리티&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;사용자가 개발한 프로그램, 응용 프로그램&lt;/li&gt;
      &lt;li&gt;각종 개발 도구, 문서 편집 도구, 네트워크 관련 도구&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Tue, 18 Feb 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/devlog/2020/02/18/unix-02/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/devlog/2020/02/18/unix-02/</guid>
        
        <category>unix</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[유닉스] 역사와 발전</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-02-18-unix-01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;유닉스와-리눅스의-탄생&quot;&gt;유닉스와 리눅스의 탄생&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;운영체제란&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;컴퓨터 시스템을 제어하는 프로그램들의 집합&lt;/li&gt;
      &lt;li&gt;하드웨어와 사용자 또는 응용 프로그램 사이에 위치&lt;/li&gt;
      &lt;li&gt;하드웨어와 사용자 또는 응용 프로그램이 쉽고 편리하게 컴퓨터 시스템을 이용할 수 있도록 컴퓨터 시스템을 제어하고 관리&lt;/li&gt;
      &lt;li&gt;초기 운영체제는 단일 사용자 형태&lt;/li&gt;
      &lt;li&gt;유닉스를 시작으로 다중 사용자, 다중 작업 운영체제로 발전&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;유닉스(UNIX)의 탄생&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;1969년 벨연구소의 켄 톰슨(Ken Thompson)과 데니스 리치(Dennis Ritchie)가 개발&lt;/li&gt;
      &lt;li&gt;1973년 어셈블리 언어에서 C 언어로 변경&lt;/li&gt;
      &lt;li&gt;대학을 중심으로 유닉스를 많이 이용하여 무료로 제공&lt;/li&gt;
      &lt;li&gt;AT&amp;amp;T가 벨연구소를 인수하게 되면서 유닉스를 상용으로 공급&lt;/li&gt;
      &lt;li&gt;AT&amp;amp;T 유닉스 버전과 BSD(Berkeley Software Distribution) UNIX 버전 발표&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;리눅스(Linux)의 탄생&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;1991년 핀란드 헬싱키 대학의 리누스 토발즈(Linus Torvalds)가 개발&lt;/li&gt;
      &lt;li&gt;PC에서도 사용할 수 있는 UNIX와 같은 운영체제 개발&lt;/li&gt;
      &lt;li&gt;뉴스그룹 구성원들과 전세게 네티즌들에게 리눅스 커널(kernel) 부분의 소스 파일을 공개하여 아이디어를 공유, 문제점 개선 등으로 만들어짐&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;유닉스와-리눅스의-탄생-1&quot;&gt;유닉스와 리눅스의 탄생&lt;/h1&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;유닉스의 발전 과정&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-02-18-unix-01-01.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;유닉스의 종류&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;시스템 V&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;AT&amp;amp;T 벨연구소에서 개발한 UNIX&lt;/li&gt;
          &lt;li&gt;상업 제품으로, IBM의 AIX, Sun(2009년 Oracle에 합병됨)의 Solaris, HP의 HP-UX&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;BSD 유닉스&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;버클리 대학교에서 발전됨&lt;/li&gt;
          &lt;li&gt;메모리 관리 기능 향상&lt;/li&gt;
          &lt;li&gt;TCP/IP, 소켓(Socket) 등 네트워킹 기능 추가&lt;/li&gt;
          &lt;li&gt;HP나 Sun Microsystems 같은 회사에서 많이 사용&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;솔라리스
        &lt;ul&gt;
          &lt;li&gt;Sun 사에 의해 출시됨&lt;/li&gt;
          &lt;li&gt;Sparc CPU 전용 운영체제에서 인텔용 솔라리스도 출시&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;리눅스&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;레드햇(RedHat) 사의 레드햇(RedHat)과 페도라(Fedora), 캐노니컬(Canonical) 사의 우분투(Ubuntu), 그리고, 데비안(Debian), CentOS 등&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;맥 OS
        &lt;ul&gt;
          &lt;li&gt;1984년 애플 컴퓨터의 매킨토시 컴퓨터용 운영체제로 개발&lt;/li&gt;
          &lt;li&gt;NexTSTEP 운영체제와 BSD 유닉스 기반으로 맥 OS X (맥 오에스 텐으로 발음함) 개발&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;모바일 기기용 운영체제&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;안드로이드 : 리눅스 기반, 소스 코드 공개&lt;/li&gt;
          &lt;li&gt;iOS : 맥 OS X 기반, 소스 코드 비공개, 애플사의 모바일 기기(iphone, iPad, iPod)에서 사용&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;리눅스 커널&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;커널은 리눅스 운영체제의 핵심이 되는 부분&lt;/li&gt;
      &lt;li&gt;커널의 버전
 – 안정 버전(Stable Version)과 개발 버전(Development Version)으로 구분
 – 안정 버전 : 개발 완료된 코드로 구성된 버전
 – 개발 버전 : 현재 개발 중인 버전, 상대적으로 불안정&lt;/li&gt;
      &lt;li&gt;파일 이름에서 커널 표시
 – 파일 이름 : linux-3.7.1.tar
 – ‘3’은 주 버전 (Major Version)
 – ‘7’은 부 버전 (Minor Version)
 – ‘1’은 패치 버전 (Patch Version)
 – ‘linux-3.7.1.xx’의 경우 ‘xx’는 사소한 개정이 있을 경우&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;배포판(Distribution)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;커널을 기반으로 GNU 프로젝트의 라이브러리와 도구들을 패키지화시킨 것&lt;/li&gt;
      &lt;li&gt;사용 목적에 따라 무수히 많은 종류의 배포판 존재&lt;/li&gt;
      &lt;li&gt;국외 리눅스 배포판&lt;/li&gt;
      &lt;li&gt;국내 리눅스 배포판&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;슬랙웨어(Slackware)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;1993년 패트릭 폴커딩(Patrick Volkerding)에 의해 처음 릴리즈됨&lt;/li&gt;
      &lt;li&gt;높은 수준의 안전성과 보안성&lt;/li&gt;
      &lt;li&gt;사용자 인터페이스 환경이 화려하지 않고 텍스트 기반&lt;/li&gt;
      &lt;li&gt;리눅스를 좀더 깊이 공부하고 싶은 사람에게 추천&lt;/li&gt;
      &lt;li&gt;홈페이지 : http://www.slackware.com 미국&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;레드햇(RedHat)
    &lt;ul&gt;
      &lt;li&gt;가장 인기 있는 배포판&lt;/li&gt;
      &lt;li&gt;RedHat Linux 9 버전까지만 소스 공개&lt;/li&gt;
      &lt;li&gt;RedHat Enterprise Linux는 유료 배포판&lt;/li&gt;
      &lt;li&gt;홈페이지 : http://www.redhat.com 미국&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;페도라(Fedora)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;레드햇 회사에서 후원하고 Fedora 커뮤니티에서 개발하는 무료 배포판&lt;/li&gt;
      &lt;li&gt;국내에서 가장 인기 있는 배포판&lt;/li&gt;
      &lt;li&gt;빠르고, 안정적이고, 강력한 운영체제&lt;/li&gt;
      &lt;li&gt;홈페이지 : http://fedoraproject.org 미국&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;데비안(Debian GNU/Linux)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;자원 봉사 모임인 데비안 프로젝트(Debian Project)에서 만들어 배포하는 공개 운영체제&lt;/li&gt;
      &lt;li&gt;가장 강력한 패키지 관리 시스템&lt;/li&gt;
      &lt;li&gt;Intel, Alpha, Sparc, PowerPC 등 다양한 아키텍처 지원&lt;/li&gt;
      &lt;li&gt;100% 자유 소프트웨어를 유지&lt;/li&gt;
      &lt;li&gt;데비안으로 작성된 프로그램을 무료로 라이선스 공개&lt;/li&gt;
      &lt;li&gt;홈페이지 : http://www.debian,.org&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;우분투(Ubuntu)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;데스크탑에서 쉬운 리눅스를 사용하기 위해 만들어짐&lt;/li&gt;
      &lt;li&gt;데비안 리눅스를 기반으로 사용자가 손쉽게 사용할 수 있도록 함&lt;/li&gt;
      &lt;li&gt;개인용 컴퓨터 사용자와 개발자에게 가장 인기&lt;/li&gt;
      &lt;li&gt;우분투 : 남아프리카 줄루족의 말, “네가 있으니 내가 있다”는 뜻&lt;/li&gt;
      &lt;li&gt;홈페이지 : http://www.ubuntu.com&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;수세 리눅스(SuSE-Linux)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;독일업체 수세(S.u.S.E)에서 개발된 배포판&lt;/li&gt;
      &lt;li&gt;레드햇 리눅스와 함께 인기 있는 상용 배포판&lt;/li&gt;
      &lt;li&gt;2003년 수세는 노벨(Novell)에 인수됨&lt;/li&gt;
      &lt;li&gt;홈페이지 : http://www.novell.com/linux 독일&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;CentOS(Community ENTerprise Operating System)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;레드햇 엔터프라이즈 배포판을 기반으로 하는 무료 운영체제&lt;/li&gt;
      &lt;li&gt;웹 서버용으로 가장 많이 사용&lt;/li&gt;
      &lt;li&gt;홈페이지 : http://www.centos.org&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;국내 리눅스 배포판&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;레드햇 리눅스를 기반으로 한글 인터페이스를 제공한 배포판
– 파워 리눅스, K-리눅스, 알짜 리눅스, 미지 리눅스, 와우 리눅스 등
– 현재는 제공되지 않음&lt;/li&gt;
      &lt;li&gt;아시아눅스(Asianux)
– 한국, 중국, 일본의 아시아 기업들이 협력하여 만들었음
– 한컴 리눅스, 홍기 리눅스(중국), 미라클 리눅스(일본)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;유닉스와-리눅스의-탄생-2&quot;&gt;유닉스와 리눅스의 탄생&lt;/h1&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;GNU, GNU 프로젝트&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;GNU’s Not Unix, 즉 ‘GNU는 유닉스가 아니다’라는 뜻&lt;/li&gt;
      &lt;li&gt;1984년 리처드 스톨먼(Richard Matthew Stallman)을 주축으로 유닉스와 호환되면서 더 강력한 운영체제를 만들고자 하는 프로젝트 시작&lt;/li&gt;
      &lt;li&gt;‘모두가 공유할 수 있는 소프트웨어’를 만드는 것을 모티브로 출발&lt;/li&gt;
      &lt;li&gt;GNU C 컴파일러인 gcc, 문서편집기인 emacs, X 윈도우 데스크탑 환경인 GNOME, tar를 개조한 GNU tar 등 응용 프로그램을 만듦&lt;/li&gt;
      &lt;li&gt;소프트웨어의 상업화에 반대해 소프트웨어를 자유롭게 사용하도록 하는 것이 목적&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;자유 소프트웨어 재단 FSF(Free Software Foundation)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;1985년 리처드 스톨먼이 세운 비영리 조직&lt;/li&gt;
      &lt;li&gt;‘구속되지 않는다‘는 관점에서 프로그램의 변경이나 수정의 자유를 의미&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Copyleft와 GNU GPL(General Public License)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;Copyleft
 – 저작권(Copyright)의 반대를 뜻하는 의미로 사용
 – 프로그램의 제작, 배포에 대한 권리를 모든 사람에게 허용&lt;/li&gt;
      &lt;li&gt;GNU GPL
 – GNU 소프트웨어에서 Copyleft를 실제로 구현한 라이선스를 의미
 – GNU 정신에 입각하여 자유 소프트웨어를 보호, 실제로 Copyleft를 담보할 수 있는 법률적 허가권&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;커널(kernel)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;운영체제의 핵심으로, 시스템이 부팅될 때 로드&lt;/li&gt;
      &lt;li&gt;시스템의 하드웨어 제어&lt;/li&gt;
      &lt;li&gt;자원 스케줄링, 실행중인 프로그램 관리, 자료 관리&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Tue, 18 Feb 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/devlog/2020/02/18/unix-01/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/devlog/2020/02/18/unix-01/</guid>
        
        <category>unix</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[Database] 개체, 개체 타입과 속성</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-17-database-06.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;개체와-개체타입&quot;&gt;개체와 개체타입&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;개체 타입 (Entity Type)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;비슷한 속성을 가진 개체&lt;/li&gt;
      &lt;li&gt;개체를 이름과 속성으로 정의한 것&lt;/li&gt;
      &lt;li&gt;파일시스템이나 데이터베이스의 레코드 타입 (Record Type)&lt;/li&gt;
      &lt;li&gt;프로그래밍언어의 데이터타입과 유사&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;유형&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;강한 개체 (Strong Entity) : 다른 개체의 도움 없이 독자적으로 존재하는 개체&lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;약한 개체 (Weak Entity) :&lt;/p&gt;

            &lt;p&gt;독자적으로 존재하지 않고, 상위 개체 타입을 가짐&lt;br /&gt;
  상위 개체 타입이 결정되지 않으면 개별 개체를 식별할 수 없음&lt;/p&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;예 : 회사의 직원&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;직원의 부양가족은 직원 개체가 존재해야 존재할 수 있다&lt;/li&gt;
          &lt;li&gt;강한 개체 : 직원&lt;/li&gt;
          &lt;li&gt;약한 개체 : 부양 가족
  · 개체타입의 ER 다이어그램 표현&lt;/li&gt;
          &lt;li&gt;직사각형으로 표현&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-17-database-06-01.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;개체 인스턴스 (Entity Instance)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;개체의 속성에 실제 값을 주어 실체화된 개체&lt;/li&gt;
      &lt;li&gt;파일시스템이나 데이터베이스의 레코드 인스턴스 (Record Instance)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;개체 집합 (Entity Set)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;개체 인스턴스를 모아 놓은 것.&lt;/li&gt;
      &lt;li&gt;데이터베이스의 테이블.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;개체 (Entity)&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-17-database-06-02.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;속성&quot;&gt;속성&lt;/h1&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;속성/애트리뷰트 (Attribute)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;사물의 본질적인 고유의 성질(특성)로, 의미 있는 데이터의 가장 작은 단위&lt;/li&gt;
      &lt;li&gt;파일시스템이나 데이터베이스에서 하나의 필드로 표현됨&lt;/li&gt;
      &lt;li&gt;예시 : 사람의 속성 - 이름, 출생일, 성별, 국적 등&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;속성의 ER 다이어그램 표현&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;타원으로 표현&lt;/li&gt;
      &lt;li&gt;개체 타입과 실선으로 연결&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-17-database-06-03.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;속성의-유형&quot;&gt;속성의 유형&lt;/h1&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;키 속성 (Key Attribute)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;개체 인스턴스를 식별하는데 사용되는 속성&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;모든 개체 인스턴스의 키 속성 값은 달라야 함.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;둘 이상의 속성으로 구성할 수 있음&lt;/li&gt;
      &lt;li&gt;예: 쇼핑몰의 고객 개체의 계정, 회사의 직원 사번&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-17-database-06-04.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;속성 값의 개수에 따른 분류&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;단일 값 속성 (Single-valued Attribute)&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;예: 책의 이름, 회사내 팀의 팀장&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;다중 값 속성 (Multi-valued Attribute)&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;예: 책의 저자, 회사내 팀의 팀원번&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-17-database-06-05.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;의미의 세분화에 따른 분류&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;단순 속성 (Simple Attribute)&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;의미를 세분화할 수 없는 경우&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;예: 개체의 이름&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;복합 속성 (Composite Attribute)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;의미를 세분화할 수 있는 경우&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;예: 전화번호, 생년월일&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-17-database-06-06.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;저장 속성 (Stored Attribute)과 유도 속성 (Derived Attribute)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;저장속성&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;다른 속성의 영향 없이 단독으로 저장되는 속성&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;유도 속성&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;다른 속성을 사용하여 만들 수 있는 속성&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;예: 판매물건의 부가세 금액, 나이(생년월일로부터 계산)&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-17-database-06-07.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;널 속성 (Null Attribute)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;값이 없어도 되는 속성&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;예: 회원 가입시 선택항목&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;데이터를 입력하지 않아도 데이터베이스에 개체를 저장하는데 문제가 없다
&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;개체와 속성의 ER 다이어그램 표현&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-17-database-06-08.png&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Mon, 17 Feb 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/devlog/2020/02/17/database-06/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/devlog/2020/02/17/database-06/</guid>
        
        <category>database</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[Database] 모델링과 개체-관계 모델 및 다이어그램</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-16-database-05.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;데이터베이스-구축의-의미&quot;&gt;데이터베이스 구축의 의미&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;의미&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;현실 세계의 대상물을 컴퓨터 세계의 데이터로 변환하기 위한 일련의 과정&lt;/li&gt;
      &lt;li&gt;현실 세계의 대상물에서 데이터베이스에 저장할 가치가 있는 데이터만 찾아야 함&lt;/li&gt;
      &lt;li&gt;컴퓨터에서 다루기 쉬운 구조로 변환하여 저장
&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;모델-모델링-modeling-및-추상화&quot;&gt;모델, 모델링 (Modeling) 및 추상화&lt;/h1&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;모델&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;복잡한 상황을 이해하기 쉽게 표현하기 위하여 개념적으로 단순화하여 표현한 것&lt;/li&gt;
      &lt;li&gt;데이터베이스에 저장할 가치가 있는 데이터를 내포&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;모델링&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;현실 세계에 존재하는 데이터를 컴퓨터 세계의 데이터로 옮기는 변환 과정&lt;/li&gt;
      &lt;li&gt;데이터베이스 설계의 핵심 과정&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;추상화&lt;/p&gt;

    &lt;p&gt;-현실세계에서 발생되는 상황을 모델링하는 것을 추상화라 함
 -현실의 반복적인 작업(계산)을 프로그램 개발하는 것도 추상화 과&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;데이터-모델&quot;&gt;데이터 모델&lt;/h1&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;데이터의 관계, 접근, 처리과정에 관한 추상화된 모형&lt;/li&gt;
  &lt;li&gt;데이터 모델은 데이터 구조를 결정&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;개념적 데이터 모델 (CDM, Conceptual Data Model)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;대상물의 의미를 표현&lt;/li&gt;
      &lt;li&gt;데이터베이스에서 사용될 개념과 관계를 표현&lt;/li&gt;
      &lt;li&gt;가장 많이 사용되는 모델 : 개체-관계모델 (E-R Model, Entity-Relationship Model)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;논리적 데이터 모델 (LDM, Logical Data Model)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;세부적으로 표현된 대상물의 데이터 표현&lt;/li&gt;
      &lt;li&gt;사람, 장소, 사물, 규칙, 관계 등의 대상물과 이들 사이의 이벤트를 표준화한다.&lt;/li&gt;
      &lt;li&gt;사용하는 이유
  &lt;br /&gt;
  &lt;br /&gt;
        &lt;ul&gt;
          &lt;li&gt;데이터 요소과 요구에 대한 일반적인 이해에 도움이 된다.&lt;/li&gt;
          &lt;li&gt;데이터베이스 설계의 기초를 제공한다.&lt;/li&gt;
          &lt;li&gt;데이터를 재사용하거나 공유할 수 있다.&lt;/li&gt;
          &lt;li&gt;개발 및 유지보수 시간과 비용을 줄일 수 있다.
  &lt;br /&gt;
  &lt;br /&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;가장 많이 사용되는 모델 : 관계 데이터 모델(Relational Data Model)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;물리적 데이터 모델 (PDM, Physical Data Model)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;데이터베이스 관리 시스템의 기능과 제약을 고려한 데이터 설계를 표현&lt;/li&gt;
      &lt;li&gt;테이블간의 관계, 성능 향상을 위한 인덱스, 제약사항 정의, 링크 테이블, 파티션 테이블 등의 데이터베이스 구조를
포함하여야 한다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;데이터-모델링&quot;&gt;데이터 모델링&lt;/h1&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;데이터 모델링 과정&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;요구사항 수집 및 분석&lt;/li&gt;
      &lt;li&gt;중요 개념을 추출 (개념적 모델링)&lt;/li&gt;
      &lt;li&gt;각 개념을 구체화 (논리적 모델링)&lt;/li&gt;
      &lt;li&gt;데이터베이스 생성 (물리적 모델링)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-16-database-05-01.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;요구사항 수집 및 분석&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;데이터베이스로 구현할 대상과 사용자의 요구 사항에 대한 정보를 수집하고 분석&lt;/li&gt;
      &lt;li&gt;구축할 데이터베이스에 대한 전문적인 지식이 필요함&lt;/li&gt;
      &lt;li&gt;각 개념을 구체화 (논리적 모델링)&lt;/li&gt;
      &lt;li&gt;요구사항 수집 방법
  &lt;br /&gt;
  &lt;br /&gt;
        &lt;ul&gt;
          &lt;li&gt;실제 문서를 수집하고 분석&lt;/li&gt;
          &lt;li&gt;데이터베이스를 사용할 담당자의 의도를 정확하게 파악하고 요구사항을 수렴&lt;/li&gt;
          &lt;li&gt;비슷한 업무를 처리하는 기존의 데이터베이스를 분석&lt;/li&gt;
          &lt;li&gt;연관성 있는 업무를 참고하여 요구사항을 분석&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;개념적 모델링 (Conceptual Modeling)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;데이터베이스로 구현할 대상에 대한 데이터를 추출하고 각 데이터들 간의 관계를 정의&lt;/li&gt;
      &lt;li&gt;건물의 기본 골조를 만드는 과정과 같이 데이터베이스의 골격을 만드는 과정&lt;/li&gt;
      &lt;li&gt;사용자의 요구사항을 분석하여 가장 핵심적인 개체와 개별 개체를 식별할 수 있는 핵심 속성, 각 개체간의 관계를
정의하여 일반적인 개념으로 표현&lt;/li&gt;
      &lt;li&gt;개체-관계 다이어그램 (ERD, Entity Relationship Diagram) : 간단하게 작성&lt;/li&gt;
      &lt;li&gt;예 : 회사의 프로젝트 관리
  &lt;br /&gt; 
              &lt;br /&gt;
        &lt;ul&gt;
          &lt;li&gt;연구원 – 사번, 이름, 직위&lt;/li&gt;
          &lt;li&gt;프로젝트 – 과제명, 예산, 기간&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-16-database-05-02.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;논리적 모델링 (Logical Modeling)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;개념을 구체화하여 데이터베이스로 구현하기 위한 모델을 만드는 과정&lt;/li&gt;
      &lt;li&gt;예 : 동물에 대한 모델
 &lt;br /&gt;
 &lt;br /&gt;
        &lt;ul&gt;
          &lt;li&gt;추상화 과정을 통하여 동물에 대한 정보를 모델링하여 데이터베이스에 저장한다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;논리적 데이터 모델링 과정
 &lt;br /&gt;
 &lt;br /&gt;
        &lt;ul&gt;
          &lt;li&gt;개념적 데이터모델링에서 추출하지 않은 모든 상세정보를 추출한다.&lt;/li&gt;
          &lt;li&gt;데이터의 표준화를 수행한다. (용어 정리, 데이터의 형태 및 크기 등을 확정)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-16-database-05-03.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;물리적 모델링 (Physical Modeling)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;작성된 논리적 모델을 실제 컴퓨터의 저장 장치에 저장하기 위한 물리적 구조를 정의하고 구현하는 과정&lt;/li&gt;
      &lt;li&gt;고려 사항
  &lt;br /&gt;
  &lt;br /&gt;
        &lt;ul&gt;
          &lt;li&gt;응답시간을 최소화해야 한다(응답시간 : 트랜잭션이 시작되어 종료될 때까지 걸리는 시간)&lt;/li&gt;
          &lt;li&gt;데이터가 저장될 공간을 효율적으로 배치해야 한다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-16-database-05-04.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;개체-관계-모델&quot;&gt;개체-관계 모델&lt;/h1&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;개체-관계 모델 (ERM, ER Model, Entity Relationship Model)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;모델링하고자하는 대상물 또는 처리과정에서의 요구사항에 대하여 데이터나 정보를 묘사하기 위한 데이터 모델&lt;/li&gt;
      &lt;li&gt;개체와 개체간의 관계&lt;/li&gt;
      &lt;li&gt;관계형 데이터베이스에서 궁극적으로 구현되어지는 추상적인 방법&lt;/li&gt;
      &lt;li&gt;1976년, 피터 첸 (Peter Chen)이 제안&lt;/li&gt;
      &lt;li&gt;구성 요소 : 개체(Entity), 속성(Attribute), 관계(Relationship)
  &lt;br /&gt;&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;개체/엔티티 (Entity)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;정보의 세계에서 의미있는 하나의 정보 단위&lt;/li&gt;
      &lt;li&gt;저장할 가치가 있는 중요 데이터를 가지고 있는 대상물(사람, 사물, 개념 등)&lt;/li&gt;
      &lt;li&gt;특징
 &lt;br /&gt;
 &lt;br /&gt;
        &lt;ul&gt;
          &lt;li&gt;유일한 식별자(이름)으로 구별될 수 있어야 한다.&lt;/li&gt;
          &lt;li&gt;속성(고유한 특성, 상태)을 가지고 있어야 함&lt;/li&gt;
          &lt;li&gt;다른 개체와 한 개 이상의 관계를 가지고 있음
 &lt;br /&gt;
 &lt;br /&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;파일시스템이나 데이터베이스에서 하나의 레코드로 표현됨
 &lt;br /&gt;&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;속성/애트리뷰트 (Attribute)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;사물의 본질적인 고유의 성질(특성)으로, 의미 있는 데이터의 가장 작은 단위&lt;/li&gt;
      &lt;li&gt;파일시스템이나 데이터베이스에서 하나의 필드로 표현됨&lt;/li&gt;
      &lt;li&gt;예: 사람의 속성 - 이름, 출생일, 성별, 국적 등
 &lt;br /&gt;&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;관계 (Relationship)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;개체들 사이의 연관성을 정의&lt;/li&gt;
      &lt;li&gt;“두 개체가 관계가 있다” - 상호 공유하는 속성이 있다&lt;/li&gt;
      &lt;li&gt;예
        &lt;ul&gt;
          &lt;li&gt;구매 (관계) - 고객/물품&lt;/li&gt;
          &lt;li&gt;수강 (관계) - 학생/수강과목
  &lt;br /&gt;&lt;br /&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;개체-관계 다이어그램 (ERD, Entity Relationship Diagram)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;ER 모델을 표준화된 그림으로 표현한 것&lt;/li&gt;
      &lt;li&gt;E-R 다이어그래밍 도구 : ER 모델과 SQL을 해석하고 만들 수 있다.&lt;/li&gt;
      &lt;li&gt;다이어그램 종류
 &lt;br /&gt;&lt;br /&gt;
        &lt;ul&gt;
          &lt;li&gt;피터첸 표기법 : ER 모델의 기본적인 표기법&lt;/li&gt;
          &lt;li&gt;IE 표기법 (Information Engineering Notation) / 새발 표기법 (Crow-feet Notation)&lt;/li&gt;
          &lt;li&gt;바커 표기법 (Baker Notation)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-16-database-05-05.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Sun, 16 Feb 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/devlog/2020/02/16/database-05/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/devlog/2020/02/16/database-05/</guid>
        
        <category>database</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[Database] 데이터베이스 스키마</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-15-database-04.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;dbms의-구성&quot;&gt;DBMS의 구성&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-15-database-04-01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;DDL 컴파일러&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;데이터 정의어로 작성된 스키마의 정의를 해석&lt;/li&gt;
      &lt;li&gt;저장 데이터 관리자의 도움을 받아 새로운 DB 구축&lt;/li&gt;
      &lt;li&gt;스키마의 정의를 데이터 사전에 저장&lt;/li&gt;
      &lt;li&gt;DDL로 작성된 기존 스키마의 삭제나 수정 요청도 처리하여 변경된 내용을 데이터 사전에 저장&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;DML 프리 컴파일러&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;응용 프로그램에 삽입된 데이터 조작어를 추출하여 DML 컴파일러에게 전달&lt;/li&gt;
      &lt;li&gt;데이터 조작어와 관련이 없는 코드는 해당 언어의 컴파일러에 전달&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;DML 컴파일러&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;데이터 조작어로 작성된 데이터의 처리(삽입, 수정, 삭제, 검색) 요구를 분석하여 런타임 데이터베이스 처리기가 이해할 수 있도록 해석&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;런타임 데이터베이스 처리기&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;저장 데이터 관리자를 통해 데이터베이스에 접근&lt;/li&gt;
      &lt;li&gt;DML 컴파일러로부터 전달받은 데이터 처리 요구를 데이터베이스에서 실제로 실행&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;트랜잭션 관리자&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;DB 접근을 위한 사용자의 접근 권한이 유효한지 검사&lt;/li&gt;
      &lt;li&gt;DB 무결성을 유지하기 위한 제약조건 위반 여부를 확인&lt;/li&gt;
      &lt;li&gt;회복, 병행 수행&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;저장 데이터 관리자&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;사용자 DB와 데이터 사전을 관리&lt;/li&gt;
      &lt;li&gt;운영체제의 도움을 받아 DB에 접근&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;데이터베이스-스키마-3단계&quot;&gt;데이터베이스 스키마 (3단계)&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;데이터베이스에서 자료의 구조, 자료의 표현 방법, 자료 간의 관계를 형식 언어로 정의한 구조&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;외부 스키마&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;일반사용자나 응용프로그래머가 접근하는 계층&lt;/li&gt;
      &lt;li&gt;사용자에게 필요한 데이터베이스를 정의&lt;/li&gt;
      &lt;li&gt;하나의 데이터베이스에 여러 개의 외부 스키마가 존재할 수 있음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;개념 스키마&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;데이터베이스의 전체적인 논리적 구조를 정의&lt;/li&gt;
      &lt;li&gt;하나의 데이터베이스에 하나의 개념 스키마만 존재함&lt;/li&gt;
      &lt;li&gt;데이터의 관계, 제약조건, 무결성에 대한 내용이 포함&lt;/li&gt;
      &lt;li&gt;데이터에 대한 보안 정책이나 접근 권한에 대한 정의 포함&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;내부 스키마&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;DBMS가 보는 데이터&lt;/li&gt;
      &lt;li&gt;물리적 저장 장치에 데이터베이스가 실제로 저장되는 방법&lt;/li&gt;
      &lt;li&gt;레코드 구조, 필드 크기, 레코드 접근 경로, 데이터 압축 등 물리적 저장 구조를 정의&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;매핑사상-및-데이터-독립성-1&quot;&gt;매핑/사상 및 데이터 독립성 1&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;매핑(Mapping) / 사상&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;외부/개념 매핑&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;외부 스키마의 데이터가 개념 스키마의 어느 부분에 해당되는지 대응시킴&lt;/li&gt;
          &lt;li&gt;응용 인터페이스 (Application Interface)라고도 함&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;개념/내부 매핑&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;개념 스키마의 데이터가 내부 스키마의 물리적 장치 어디에 어떤 방법으로 저장되는지 대응&lt;/li&gt;
          &lt;li&gt;저장 인터페이스 (Storage Interface)라고도 함&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;데이터 독립성 (Data Independency)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;논리적 데이터 독립성 (Logical Data Independency)&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;외부 단계와 개념 단계 사이의 독립성&lt;/li&gt;
          &lt;li&gt;개념 스키마가 변경되어도 외부 스키마에는 영향이 없도록 하는 개념&lt;/li&gt;
          &lt;li&gt;예, 개념 스키마의 테이블을 생성하거나 변경할 경우, 외부 스키마가 직접 다루는 테이블이 아니면 영향을 없다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;물리적 데이터 독립성 (Physical Data Independency)&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;개념 단계와 내부 단계 사이의 독립성&lt;/li&gt;
          &lt;li&gt;저장 장치 구조 변경과 같이 내부 스키마가 변경되어도 개념스키마에 영향이 없도록 하는 개념&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;매핑사상-및-데이터-독립성-2&quot;&gt;매핑/사상 및 데이터 독립성 2&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;데이터베이스 스키마 구성도&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-15-database-04-02.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;데이터베이스 스키마 예&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-15-database-04-03.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;img src=&quot;/assets/img/database/2020-02-15-database-04-04.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

</description>
        <pubDate>Sat, 15 Feb 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/devlog/2020/02/15/database-04/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/devlog/2020/02/15/database-04/</guid>
        
        <category>database</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[Database] 데이터베이스 시스템</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-14-database-03.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;데이터베이스-시스템-dbs-database-system&quot;&gt;데이터베이스 시스템 (DBS, DataBase System)&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;데이터를 데이터베이스에 저장하고, 관리하여 사용자의 요청에 따라 필요한 정보를 생성해주는 시스템&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;구성요소&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;데이터베이스 관리 시스템 : 사용자와 데이터베이스를 연결시켜주는 소프트웨어&lt;/li&gt;
      &lt;li&gt;데이터베이스 : 데이터를 저장하는 곳&lt;/li&gt;
      &lt;li&gt;데이터 모델 : 연관된 데이터를 저장하는 방식&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-14-database-03-01.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;데이터베이스-사용자&quot;&gt;데이터베이스 사용자&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;일반사용자&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;프로그래머가 개발한 응용프로그램을 사용하여 데이터베이스에 접근&lt;/li&gt;
      &lt;li&gt;DBMS 사용에 관심이 없고, 요청하여 받은 데이터의 내용에만 관심을 가짐&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;응용프로그래머 / 데이터베이스 프로그래머&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;일반 사용자가 사용할 수 있는 응용 프로그램을 개발&lt;/li&gt;
      &lt;li&gt;자바, JSP, PHP, ASP, C 등의 프로그래밍 언어를 사용하여 일반 사용자를 위한 인터페이스(GUI)와 데이터 관리 프로그램을 개발&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;데이터베이스 관리자&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;데이터베이스 시스템을 관리하는 사람&lt;/li&gt;
      &lt;li&gt;데이터 설계, 구현, 유지보수 등을 담당&lt;/li&gt;
      &lt;li&gt;데이터베이스 사용자, 보안, 접근 권한, 백업, 회복 등을 관리&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;dbms의-기능&quot;&gt;DBMS의 기능&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;데이터 정의 (Definition)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;데이터의 구조를 정의, 수정 및 삭제하는 기능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;데이터 조작 (Manipulation)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;응용프로그램의 요청으로 데이터의 삽입, 수정, 삭제하는 기능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;데이터 추출 (Retrieval)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;응용프로그램의 요청에 따라 필요한 데이터를 추출하는 기능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;데이터 제어 (Control)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;사용자를 관리 (계정 생성, 접근 제한)하는 기능&lt;/li&gt;
      &lt;li&gt;백업, 회복, 동시성 제어 등의 기능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;데이터-언어-data-language&quot;&gt;데이터 언어 (Data Language)&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;사용자가 데이터베이스 관리 시스템을 사용하기 위한 언어&lt;/li&gt;
  &lt;li&gt;사용 목적에 따라 구분&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;데이터 정의어 (DDL, Data Definition Language)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;데이터의 구조를 정의, 수정, 삭제하기 위해 사용하는 언어&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;데이터 조작어(DML, Data Manupulation Language)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;데이터의 삽입, 수정, 삭제, 검색 등의 요청을 위해 사용하는 언어&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;절차적 데이터 조작어와 비절차적 데이터 조작어로 구분&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;절차적 데이터 조작어 (Procedural DML) : 사용자가 원하는 데이터와 데이터를 얻는 처리 방법을 설명하는 조작어&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;비절차적 데이터 조작어 (Nonprocedural DML) : 사용자가 원하는 데이터만 설명하는 조작어&lt;/p&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;데이터 제어어(DCL, Data Control Language)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;내부적으로 필요한 규칙이나 기법을 정의하기 위해 사용하는 언어&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;규칙이나 기법을 정의하는 이유&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;무결성 : 데이터베이스에 정확하고 유효한 데이터만 유지한다.&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;보안 : 허가받지 않은 사용자의 데이터 접근 차단 및 허가된 사용자가 접근 허용된 데이터만 접근하도록 제어&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;회복 : 장애 발생시 데이터의 일관성을 유지&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;동시성 : 다수의 사용자가 같은 데이터에 동시에 접근하여 데이터를 조작할 수 있도록 제어&lt;/p&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-14-database-03-02.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 14 Feb 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/devlog/2020/02/14/database-03/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/devlog/2020/02/14/database-03/</guid>
        
        <category>database</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[Database] 데이터베이스 모델</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-13-database-02.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;데이테베이스-모델&quot;&gt;데이테베이스 모델&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;연관된 데이터를 사용하기 쉽고, 연관 관계를 잘 표현할 수 있도록 구조적으로 표현한 방식이다&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;1-계층형-데이터베이스-모델&quot;&gt;1. 계층형 데이터베이스 모델&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- 트리 형태의 구조를 가진 데이터베이스 
- 반복적인 부모-자식 관계 정보를 표현 
- 현재 거의 사용되지 않고 있다
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-13-database-02-01.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;2-네트워크형-데이터베이스-모델&quot;&gt;2. 네트워크형 데이터베이스 모델&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- 그래프 형태의 데이터베이스  
- 예) IDS(Integrated Data Store), Univac DMS-1100 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-13-database-02-02.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;3-관계-데이터베이스&quot;&gt;3. 관계 데이터베이스&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- 모든 데이터 사이의 관계를 2차원 테이블 형태로 구현  
- 현재 대부분의 데이터베이스에서 사용 
- 예) 오라클, MySQL, MS-SQL, Informix, Access 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-13-database-02-03.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;4-객체형-데이터베이스&quot;&gt;4. 객체형 데이터베이스&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- 객체지향 프로그래밍에서 사용되는 객체의 형태로 정보를 저장하는 데이터베이스  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-13-database-02-04.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;5-객체관계형-데이터베이스&quot;&gt;5. 객체관계형 데이터베이스&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- 객체지향 데이터베이스와 관계 데이터베이스를 결합한 데이터베이스  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Thu, 13 Feb 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/devlog/2020/02/13/database-02/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/devlog/2020/02/13/database-02/</guid>
        
        <category>database</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[Database] 데이터베이스</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-02-12-database-01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;데이터와-정보&quot;&gt;데이터와 정보&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;데이터&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;일련의 작업을 목적으로 수집된 의미있는 값&lt;/li&gt;
      &lt;li&gt;연구나 조사 등의 바탕이 되는 재료&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;정보&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;뜻을 가지는 자료&lt;/li&gt;
      &lt;li&gt;특정한 목적의 의사결정을 위하여 가공한 형태&lt;/li&gt;
      &lt;li&gt;일정한 형식으로 표현한 모든 종류의 자료 또는 지식&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;파일시스템&quot;&gt;파일시스템&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;정의&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;데이터를 파일에 저장하고, 파일을 수정, 삭제, 검색하는 기능을 제공하여 사용자가 파일을 손쉽게 이용할 수 있도록 지원하는 프로그램.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;특징
    &lt;ul&gt;
      &lt;li&gt;각각의 응용 프로그램은 데이터를 고유의 형식에 맞추어 관리&lt;/li&gt;
      &lt;li&gt;응용 프로그램마다 독립적인 파일을 관리&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;단점
    &lt;ul&gt;
      &lt;li&gt;데이터가 중복되어 저장된다.&lt;/li&gt;
      &lt;li&gt;여러 파일에 중복되어 저장된 데이터가 변동될 때, 일치시키기 어렵다.&lt;/li&gt;
      &lt;li&gt;프로그램에 종속된 데이터를 다른 목적의 프로그램에서 사용하기 어렵다.&lt;/li&gt;
      &lt;li&gt;데이터 보안을 유지하기 어렵다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;데이터베이스&quot;&gt;데이터베이스&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;도입 배경&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;파일 시스템의 단점 극복&lt;/li&gt;
      &lt;li&gt;다수 사용자의 정보 공유&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;개념&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;다수의 사용자가 데이터를 공유하여 사용할 수 있도록 통합하여 저장한 데이터 집합&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;장점&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;데이터 공유 및 용이한 접근&lt;/li&gt;
      &lt;li&gt;데이터 중복 최소화, 일관성, 무결성, 보안성 유지&lt;/li&gt;
      &lt;li&gt;데이터의 표준화 가능&lt;/li&gt;
      &lt;li&gt;데이터의 저장 공간 절약 및 집중화&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;단점&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;전문가가 필요&lt;/li&gt;
      &lt;li&gt;데이터 백업과 복구의 어려움&lt;/li&gt;
      &lt;li&gt;비용 부담&lt;/li&gt;
      &lt;li&gt;다수의 사용자가 동시 사용시 집중된 데이터 사용에 과부하 발생 가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;데이터베이스-관리-시스템&quot;&gt;데이터베이스 관리 시스템&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;정의&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;DBMS(DataBase Management System)&lt;/li&gt;
      &lt;li&gt;데이터베이스에 저장된 데이터를 관리하고, 필요한 정보를 생성해주는 시스템&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;특징&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;데이터의 중복 및 불일치 최소화시킬 수 있다.&lt;/li&gt;
      &lt;li&gt;데이터 독립성을 유지할 수 있다.&lt;/li&gt;
      &lt;li&gt;DBMS를 통하여 데이터에 접근하고, 데이터베이스내의 데이터 변화가 응용프로그램에게 영향을 끼치지 않도록 하여 데이터의 독립성을 지원&lt;/li&gt;
      &lt;li&gt;데이터 무결성 유지할 수 있다.&lt;/li&gt;
      &lt;li&gt;무결성을 위반하는 데이터 저장 거절&lt;/li&gt;
      &lt;li&gt;데이터를 표준화시킬 수 있다.  · 데이터의 보안이 향상된다.&lt;/li&gt;
      &lt;li&gt;데이터베이스에 접근할 수 있는 권한을 사용자부여하여 접근을 제한할 수 있다.&lt;/li&gt;
      &lt;li&gt;데이터 공유가 쉽다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Wed, 12 Feb 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/devlog/2020/02/12/database-01/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/devlog/2020/02/12/database-01/</guid>
        
        <category>database</category>
        
        
        <category>devlog</category>
        
      </item>
    
  </channel>
</rss>
