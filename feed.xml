<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>m_veloper</title>
    <description></description>
    <link>https://m-veloper.github.io/</link>
    <atom:link href="https://m-veloper.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 14 Mar 2020 17:21:07 +0900</pubDate>
    <lastBuildDate>Sat, 14 Mar 2020 17:21:07 +0900</lastBuildDate>
    <generator>Jekyll v3.8.6</generator>
    
      <item>
        <title>[fuji/후지필름] x100v Black Unboxing / 언박싱(개봉기)</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/goods/fuji-x100v/2020-03-14-review-goods-fuji-x100v.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;x100v-black-unboxing&quot;&gt;x100v Black Unboxing&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;스펙&quot;&gt;﻿스펙&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;가격 : 1,699,000원&lt;/li&gt;
  &lt;li&gt;종류 : 디지털카메라(똑딱이)&lt;/li&gt;
  &lt;li&gt;26.1MP X-Trans CMOS4&lt;/li&gt;
  &lt;li&gt;14bit RAW&lt;/li&gt;
  &lt;li&gt;23mm F2 (환산 35mm) 렌즈 (6 군 8 매, 비구면 렌즈 2 매)&lt;/li&gt;
  &lt;li&gt;4 스톱 ND 필터&lt;/li&gt;
  &lt;li&gt;조리개 F2-16, 1 / 3EV 단계 9매 조리개 날개&lt;/li&gt;
  &lt;li&gt;최단 촬영 거리 10cm&lt;/li&gt;
  &lt;li&gt;컨버터 렌즈 대응&lt;/li&gt;
  &lt;li&gt;디지털 텔레 컨버터 환산 50mm, 70mm&lt;/li&gt;
  &lt;li&gt;ISO160-12800(1 / 3EV 단계) 확장 ISO 80-51200 지원&lt;/li&gt;
  &lt;li&gt;렌즈 셔터&lt;/li&gt;
  &lt;li&gt;기계식 30 초 -1/4000 초, 전자식 30 초 -1 / 32000 초&lt;/li&gt;
  &lt;li&gt;11fps 연사 JPEG 38매, RAW 17매, 8fps로 JPEG 76매, RAW 18매&lt;/li&gt;
  &lt;li&gt;전자 셔터 연사 30fps, 1.25 배 크롭, JPEG 29ao, RAW 17매&lt;/li&gt;
  &lt;li&gt;콘트라스트 -2EV 위상차 -5EV의 저휘도 AF&lt;/li&gt;
  &lt;li&gt;시야율 95 %, 배율 0.52 배 OVF&lt;/li&gt;
  &lt;li&gt;0.5 인치, 369 만 화소 유기 EL, 배율 0.66 배 EVF&lt;/li&gt;
  &lt;li&gt;3 인치 3 : 2,162 만 화소&lt;/li&gt;
  &lt;li&gt;DCI4K 29.97p (10 분), 4K 29.97p ( 10 분) 전체 HD 59.97p (15 분)&lt;/li&gt;
  &lt;li&gt;필름 시뮬레이션은 17 종&lt;/li&gt;
  &lt;li&gt;배터리 NP-W126S, 배터리 수명 EVF 350 장, OVF 420 장&lt;/li&gt;
  &lt;li&gt;크기 74.8 x 128.0 x 53.3mm&lt;/li&gt;
  &lt;li&gt;무게 478g (배터리 및 SD 카드 포함), 428g (배터리 및 메모리 카드 제외)
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/goods/fuji-x100v/2020-03-14-review-goods-fuji-x100v-01.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;                ﻿   배송은 회사로 받았는데, 박스 크기 무엇..?
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/goods/fuji-x100v/2020-03-14-review-goods-fuji-x100v-02.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/goods/fuji-x100v/2020-03-14-review-goods-fuji-x100v-03.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;                    ﻿빨리 퇴근하고 집에서 제대로 언박싱!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/goods/fuji-x100v/2020-03-14-review-goods-fuji-x100v-04.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;기본-구성품&quot;&gt;기본 구성품&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;x100v 본체&lt;/li&gt;
  &lt;li&gt;배터리 2개 (출시 이벤트 1+1)&lt;/li&gt;
  &lt;li&gt;c type 케이블&lt;/li&gt;
  &lt;li&gt;어깨 스트랩&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;설명서&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;              참고로 기간내에 정품 등록하면 케이스 및 AS 1년 연장 가능.
                
              그리고 충격적인건 충전기가 없습니다.
                
              따로 구매 하시거나, c type 케이블로 충전하셔야 합니다.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;사은품&quot;&gt;사은품&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;“즐거운카메라” 에서 구입&lt;/li&gt;
  &lt;li&gt;﻿카메라 청소도구&lt;/li&gt;
  &lt;li&gt;액정 보호 필름&lt;/li&gt;
  &lt;li&gt;바디 보호 필름&lt;/li&gt;
  &lt;li&gt;64기가 메모리&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;충전기&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;                솔직히 충전기까지 사은품 준거는 깜짝 놀랐어요.
                  
                이걸 돈주고 사야하나 했는데... 사은품으로 똬!!
                  
                참고로 사은품은 사은품 입니다.
                  
                공식 홈페이지 안줍니다.
                  
                너무 사은품의 퀄리티는 논하지는 맙시다. 주는게 어디여
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/goods/fuji-x100v/2020-03-14-review-goods-fuji-x100v-05.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;                x100 시리즈를 잘 모르시는 분들이 있어서 말씀드리지만
                
                정확히 디지털 카메라(똑딱이) 입니다.
                
                렌즈를 교체 하거나 할 수 있는, dslr, 또는 미러리스가 아닙니다.
                
                다만 박혀있는 렌즈에 어댑터링과 컨버터 렌즈를 따로 구매해서
                
                추가로 이어 붙이는 형식으로
                
                광각, 망원(최대 50mm) 으로 사용할 수 있습니다.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/goods/fuji-x100v/2020-03-14-review-goods-fuji-x100v-06.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/goods/fuji-x100v/2020-03-14-review-goods-fuji-x100v-07.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;                        lcd 화면을 최대로 뺀 모습니다.
                        
                        돌아가거나 하지는 않습니다.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/goods/fuji-x100v/2020-03-14-review-goods-fuji-x100v-08.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/goods/fuji-x100v/2020-03-14-review-goods-fuji-x100v-09.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;필름시뮬레이션-클래식-네가티브&quot;&gt;﻿필름시뮬레이션 (클래식 네가티브)&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    오로지, 이 필름 색감이 좋아서
    
    캐논 풀프레임을 팔아버리고
    
    후지로 갈아탔습니다.
    
    따로 추가 보정 없이 카메라의 색감만으로 찍은 사진입니다
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/goods/fuji-x100v/2020-03-14-review-goods-fuji-x100v-10.jpg&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;
&lt;img src=&quot;/assets/img/goods/fuji-x100v/2020-03-14-review-goods-fuji-x100v-11.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Sat, 14 Mar 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/devlog/2020/03/14/review-goods-fuji-x100v-01/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/devlog/2020/03/14/review-goods-fuji-x100v-01/</guid>
        
        <category>sass</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[유닉스] 기본 접근 권한 설정</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-13-unix-18.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;umask-명령을-이용한-기본-접근-권한-설정&quot;&gt;umask 명령을 이용한 기본 접근 권한 설정&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;기본-접근-권한&quot;&gt;기본 접근 권한&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;파일이나 디렉토리를 생성할 때 부여되는 접근 권한&lt;/li&gt;
  &lt;li&gt;일반 파일 생성시 소유자는 읽기와 쓰기 권한, 그룹과 기타 사용자는 읽기 권한 부여&lt;/li&gt;
  &lt;li&gt;디렉토리 생성시 소유자는 읽기, 쓰기, 실행 권한, 그룹과 기타 사용자는 읽기와 실행 권한 부여&lt;/li&gt;
  &lt;li&gt;유닉스 시스템에 설정된 기본값에 따라 부여됨.&lt;/li&gt;
  &lt;li&gt;설정된 값을 바꾸면 파일이 생성될 때 부여되는 접근 권한도 바꿀 수 있음&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;파일-생성-후-기본-접근-권한-확인&quot;&gt;파일 생성 후 기본 접근 권한 확인&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;파일 소유자와 그룹은 읽기, 쓰기 권한, 기타 사용자는 읽기 권한이 설정되어 있음&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ touch test1
  $ ls –l
  total 4
  -rw-rw-r-- 1 ksshin ksshin 0 6월 14 17:19 test1
  -rw-r--r-- 1 ksshin ksshin 221 6월 5 22:12 text
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;기본-접근-권한-설정&quot;&gt;기본 접근 권한 설정&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;umask 명령으로 실행&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;umask 명령&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;기본 접근 권한을 출력하거나 변경&lt;/li&gt;
      &lt;li&gt;형식 : umask [마스크 값]&lt;/li&gt;
      &lt;li&gt;사용 예 : umask 022, umask&lt;/li&gt;
      &lt;li&gt;인자로 주어지는 마스크 값은 파일이나 디렉토리 생성시 부여하지 않을 권한을 지정&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;인자 없이 umask 명령만 사용하면 설정된 기본 마스크 값을 보여줌&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ umask 077
  $ touch test2
  $ ls –l
  total 4
  -rw-rw-r-- 1 ksshin ksshin 0 6월 14 17:19 test1
  -rw------- 1 ksshin ksshin 0 6월 14 17:31 test2
  -rw-r--r-- 1 ksshin ksshin 221 6월 5 22:12 text
  $ umask
  077
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;

        &lt;ul&gt;
          &lt;li&gt;마스크 값을 077로 지정했을 때 소유자는 모든 권한이 부여되어야 하는데, test2 파일의 소유자에게 실행 권한이
  없는 이유 : 일반 파일이 가질 수 있는 최대 접근 권한이 666(rw-rw-rw-)이기 때문&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-13-unix-18-01.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;마스크-값&quot;&gt;마스크 값&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;마스크-값-1&quot;&gt;마스크 값&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;파일이나 디렉토리 생성시 부여하지 않을 권한을 지정하는 값&lt;/li&gt;
  &lt;li&gt;파일이 생성될 때마다 적용됨&lt;/li&gt;
  &lt;li&gt;마스크 값이 ‘1’인 경우에 대응하는 권한은 제외됨&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-13-unix-18-02.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;마스크-값-이용하여-접근-권한-계산&quot;&gt;마스크 값 이용하여 접근 권한 계산&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;일반 파일이 가질 수 있는 최대 접근 권한은 666(rw-rw-rw-)&lt;/li&gt;
  &lt;li&gt;현재 마스크 값이 002라면 666과 002를 마스킹한 결과는 664&lt;/li&gt;
  &lt;li&gt;마스크 값이 002일 때 일반 파일 생성하면 기본 접근 권한이 664가 됨&lt;/li&gt;
  &lt;li&gt;디렉토리가 가질 수 있는 최대 접근 권한 777&lt;/li&gt;
  &lt;li&gt;002를 마스킹하면 기본 접근 권한 775가 됨&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-13-unix-18-03.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;간단한-마스크-값-계산&quot;&gt;간단한 마스크 값 계산&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;최대 접근 권한에서 마스크 값을 빼는 것&lt;/li&gt;
  &lt;li&gt;일반 파일 : 666 – 002 = 664&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-13-unix-18-04.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;마스크-값의-의미&quot;&gt;마스크 값의 의미&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;유닉스의 기본 마스크 값은 022&lt;/li&gt;
  &lt;li&gt;사용자의 필요에 따라 적절히 변경해 자신의 파일과 디렉토리 보호&lt;/li&gt;
  &lt;li&gt;많이 사용되는 마스크 값은 022와 077&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-13-unix-18-05.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;기본-접근-권한-변경의-예&quot;&gt;기본 접근 권한 변경의 예&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;기본 접근 권한 확인&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ umask
  0022
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;파일과 디렉토리를 생성해 권한 확인&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ mkdir tmp
  $ touch test
  $ ls -l
  total 8
  -rw-r--r-- 1 ksshin ksshin 0 6월 14 19:35 test
  -rw-r--r-- 1 ksshin ksshin 221 6월 5 22:12 text
  drwxr-xr-x 2 ksshin ksshin 4096 6월 14 19:35 tmp
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;기본 접근 권한 변경 : 기타 사용자의 권한을 없애도록 변경&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ umask 027
  $ umask
  0027
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;umask로 마스크 값을 변경할 때 주의할 점&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;파일과 디렉토리에 모두 적용해 보아야 함&lt;/li&gt;
      &lt;li&gt;파일에는 적당하지만 디렉토리에 적당하지 않을 경우 발생&lt;/li&gt;
      &lt;li&gt;예, 마스크 값이 026일 경우 파일은 640으로 적합, 디렉토리는 751로 기타 사용자의 접근 권한이 이상해짐&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;변경된 접근 권한 적용 확인&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ mkdir tmp2
  $ touch test2
  $ ls -l
  total 12
  -rw-r--r-- 1 ksshin ksshin 0 6월 14 19:35 test
  -rw-r----- 1 ksshin ksshin 0 6월 14 19:44 test2
  -rw-r--r-- 1 ksshin ksshin 221 6월 5 22:12 text
  drwxr-xr-x 2 ksshin ksshin 4096 6월 14 19:35 tmp
  drwxr-x--- 2 ksshin ksshin 4096 6월 14 19:44 tmp2
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;소유자-변경&quot;&gt;소유자 변경&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;chown 명령&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;파일이나 디렉토리의 소유자 변경&lt;/li&gt;
      &lt;li&gt;오직 슈퍼유저만이 파일이나 디렉토리의 사용자 변경할 수 있음&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;형식 : chown [option] owner filenames&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ chown user1 test
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;그룹-변경&quot;&gt;그룹 변경&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;chgrp 명령&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;파일이나 디렉토리가 속한 그룹 변경&lt;/li&gt;
      &lt;li&gt;지정하는 그룹은 반드시 소유자가 들어 있는 그룹 중 하나라야 함. 즉, 사용자의 주 그룹이나 부 그룹 중 하나라야함.&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;user1이라는 사용자가 test 파일을 소유하고 있고 속한 그룹이 user이며, staff 그룹에도 속한다고 할 때 다음과 같이 변경 가능&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ chgrp staff test
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 13 Mar 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/devlog/2020/03/13/unix-18/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/devlog/2020/03/13/unix-18/</guid>
        
        <category>unix</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[유닉스] 접근 권한 변경</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-13-unix-17.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;기호를-이용한-파일-접근-권한-변경&quot;&gt;기호를 이용한 파일 접근 권한 변경&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;chmod-명령&quot;&gt;chmod 명령&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;파일의 사용 권한 변경&lt;/li&gt;
  &lt;li&gt;형식 : chmod [옵션] 권한모드 파일/디렉토리명&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;옵션&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;-R : 하위 디렉토리까지 모두 변경&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;두 가지 동작 모드&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;기호 모드 : 접근 권한을 변경하기 위해 문자와 기호를 이용해 권한을 표시&lt;/li&gt;
      &lt;li&gt;숫자 모드 : 접근 권한을 변경하기 위해 8진수를 사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;기호-모드를-이용한-권한-변경&quot;&gt;기호 모드를 이용한 권한 변경&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;기호 모드에서는 카테고리와 권한을 모두 문자로 표현&lt;/li&gt;
  &lt;li&gt;기호 모드는 세 가지 항목으로 구성&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-13-unix-17-01.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;사용자 카테고리 : 소유자, 그룹, 기타 사용자를 나타내는 문자로 표기&lt;/li&gt;
  &lt;li&gt;연산자 : 권한 부여나 권한 제거를 나타내는 기호로 표기&lt;/li&gt;
  &lt;li&gt;권한 : 읽기, 쓰기, 실행을 나타내는 문자를 사용&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-13-unix-17-02.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;권한-변경의-예&quot;&gt;권한 변경의 예&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;u+w : 소유자(u)에게 쓰기(w) 권한 설정(+)&lt;/li&gt;
  &lt;li&gt;u-x : 소유자(u)의 실행(x) 권한 제거(-)&lt;/li&gt;
  &lt;li&gt;g+w : 그룹(g)에게 쓰기(w) 권한 설정(+)&lt;/li&gt;
  &lt;li&gt;o-r : 기타 사용자(o)의 읽기(r) 권한 제거(-)&lt;/li&gt;
  &lt;li&gt;g+wx : 그룹(g)에게 쓰기(w)와 실행(x) 권한 설정(+)&lt;/li&gt;
  &lt;li&gt;+wx : 모든 사용자에게 쓰기(w)와 실행(x) 권한 설정(+)&lt;/li&gt;
  &lt;li&gt;a+rwx : 모든 사용자(a)에게 읽기(r), 쓰기(w), 실행(x) 권한 설정(+)&lt;/li&gt;
  &lt;li&gt;u=rwx : 소유자(u)에게 읽기(r), 쓰기(w), 실행(x) 권한 설정(=)&lt;/li&gt;
  &lt;li&gt;go+w : 그룹(g)과 기타 사용자(o)에게 쓰기(w) 권한 설정(+)&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;u+x, go+w : 소유자(u)에게 실행(x) 권한을 부여하고(+) 그룹(g)과 기타 사용자(o)에게 쓰기(w) 권한 설정(+)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;text라는 파일의 그룹에게 쓰기 권한 추가 (g+w)&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ ls –l text
  -rw-r--r-- 1 ksshin ksshin 221 6월 5 22:12 text
  $ chmod g+w text
  $ ls –l text
  -rw-rw-r-- 1 ksshin ksshin 221 6월 5 22:12 text
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;그룹에 대한 쓰기 권한 제거 (g-w)&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ chmod g-w text
  $ ls –l text
  -rw-r--r-- 1 ksshin ksshin 221 6월 5 22:12 text
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;그룹과 기타 사용자에게 쓰기 권한 부여 (go+w)&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ chmod go+w text
  $ ls –l text
  -rw-rw-rw- 1 ksshin ksshin 221 6월 5 22:12 text
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;사용자와 그룹의 권한을 같게 하기 (o=g)&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ chmod o=g text
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;모두에게 실행 권한 부여 (a+x)&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ chmod a+x text
  $ ls –l text
  -rwxrwxrwx 1 ksshin ksshin 221 6월 5 22:12 text
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;숫자를-이용한-파일-접근-권한-변경&quot;&gt;숫자를 이용한 파일 접근 권한 변경&lt;/h1&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;기호-모드와-숫자-모드의-비교&quot;&gt;기호 모드와 숫자 모드의 비교&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;소유자나 그룹, 기타 사용자별로 특정 권한을 부여하거나 제거할 때는 기호 모드가 편리&lt;/li&gt;
  &lt;li&gt;전체적으로 권한을 조정할 때는 문자의 조합이 복잡해짐&lt;/li&gt;
  &lt;li&gt;숫자 모드로 사용하면, 소유자, 그룹, 기타 사용자의 권한을 한번에 원하는대로 변경할 수 있어 편리함&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;8진수로-환산하기&quot;&gt;8진수로 환산하기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;숫자 모드에서는 카테고리와 권한을 모두 숫자로 표현&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-13-unix-17-03.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;권한 묶음(rwx)을 8진수로 표현&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;읽기, 쓰기, 실행 권한 각각에 대해 권한 있으면 1, 없으면 0으로 환산&lt;/li&gt;
      &lt;li&gt;각 자리수별로 8진수로 환산 후 세 숫자의 합을 계산&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;접근-권한-표기와-8진수-숫자의-대응-관계&quot;&gt;접근 권한 표기와 8진수 숫자의 대응 관계&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;7, 6, 5, 4, 0의 형태가 자주 사용되고, 1, 2, 3은 거의 사용되지 않음&lt;/li&gt;
  &lt;li&gt;소유자 권한, 그룹 권한, 기타 사용자 권한을 각각 8진수로 계산하면 전체 접근 권한을 나타내는 숫자 세 개가 나옴&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-13-unix-17-04.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;숫자 모드로 표현한 접근 권한의 대표적인 형태&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;chmod 명령의 숫자 모드에서 사용하는 형태&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-13-unix-17-05.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;숫자-모드를-이용한-접근-권한-변경&quot;&gt;숫자 모드를 이용한 접근 권한 변경&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;8진수 3자리를 사용&lt;/li&gt;
  &lt;li&gt;숫자의 각 위치가 사용자 카테고리를 표시하므로, 사용자 카테고리를 따로 지정할 필요 없음&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-13-unix-17-05.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

</description>
        <pubDate>Fri, 13 Mar 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/devlog/2020/03/13/unix-17/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/devlog/2020/03/13/unix-17/</guid>
        
        <category>unix</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[유닉스] 파일의 속성</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-13-unix-16.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;파일의-속성&quot;&gt;파일의 속성&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;파일-접근-권한의-개요&quot;&gt;파일 접근 권한의 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;다중 사용자 시스템인 유닉스에서 다른 사용자의 파일을 마음대로 사용할 수 없도록 하는 보안 기능 제공&lt;/li&gt;
  &lt;li&gt;사용자가 자신의 파일에 접근 권한 부여&lt;/li&gt;
  &lt;li&gt;부여된 권한만큼만 파일 사용 가능&lt;/li&gt;
  &lt;li&gt;접근 권한은 파일이 가지고 있는 속성 중 하나&lt;/li&gt;
  &lt;li&gt;권한 대상 : 파일의 사용자(소유자), 소유자가 속한 그룹, 그 밖의 사용자&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-13-unix-16-01.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;파일-모드&quot;&gt;파일 모드&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;숫자로 표현한 권한
&lt;img src=&quot;/assets/img/unix/2020-03-13-unix-16-02.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;파일의-속성-1&quot;&gt;파일의 속성&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;파일의 속성을 알기 위해 ‘ls –l’ 명령 사용&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ ls –l
  total 1
  -rw-r--r-- 1 ksshin ksshin 221 6월 5 22:12 text
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-13-unix-16-03.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;파일 종류&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;파일 속성의 첫 번째 항목&lt;/li&gt;
      &lt;li&gt;-는 일반 파일, d는 디렉토리 파일, l은 심볼릭 링크 파일 등&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;파일의 종류를 알려주는 명령 : file&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;i) 형식 : file 파일명&lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;ii) 사용 예 : file /etc/hosts&lt;/p&gt;

            &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ file test Unix
  test: ASCII text
  Unix: directory
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;파일 접근 권한&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;파일의 소유자와 그룹, 기타 사용자들이 파일에 대해 가지고 있는 접근 권한을 표시&lt;/li&gt;
      &lt;li&gt;접근 권한은 파일 소유자가 chmod 명령을 사용해 변경 가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;하드 링크 수&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;하나의 file에 연결된 파일 이름의 개수&lt;/li&gt;
      &lt;li&gt;하드 링크는 한 파일에 여러 개의 파일명을 가질 수 있도록 하는 기능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;파일 소유자의 사용자 이름&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;유닉스에서는 모든 파일에 소유자가 있음&lt;/li&gt;
      &lt;li&gt;시스템 관련된 파일들은 대부분 루트 계정이 소유자&lt;/li&gt;
      &lt;li&gt;일반 파일들은 해당 파일을 생성한 사용자가 소유자&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;파일이 속한 그룹 이름&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;사용자는 기본적으로 하나 이상의 그룹에 속해 있음&lt;/li&gt;
      &lt;li&gt;‘ls –l’ 명령의 결과에서 나온 그룹명은 파일이 속한 그룹 이름&lt;/li&gt;
      &lt;li&gt;사용자가 속한 그룹은 시스템 관리자가 사용자 등록시 결정&lt;/li&gt;
      &lt;li&gt;사용자가 임의로 자신의 그룹을 바꿀 수 없고 시스템 관리자에게 변경 요청&lt;/li&gt;
      &lt;li&gt;그룹이 정의된 파일은 /etc/group으로 시스템 관리자만 수정 가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;파일 크기&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;파일의 크기를 바이트 단위로 알려줌&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;파일의 마지막 수정 일시&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;파일이 마지막으로 수정된 날짜와 시각을 표시&lt;/li&gt;
      &lt;li&gt;연도가 표시되지 않으면 올해를 의미&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;파일의-접근-권한&quot;&gt;파일의 접근 권한&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;개요&quot;&gt;개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;접근 권한은 사용자의 파일을 보호하는 가장 기본적인 보안 기능&lt;/li&gt;
  &lt;li&gt;접근 권한을 부여하기 위해 사용자를 세 카테고리로 구분&lt;/li&gt;
  &lt;li&gt;세 카테고리 : 파일의 소유자, 파일이 속한 그룹, 기타 사용자&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-13-unix-16-04.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;소유자&quot;&gt;소유자&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;파일을 생성한 사용자가 파일의 소유자임&lt;/li&gt;
  &lt;li&gt;파일의 소유자나 시스템 관리자가 명령을 이용하여 소유자 변경 가능&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;그룹&quot;&gt;그룹&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;파일과 동일한 그룹에 속한 사용자들&lt;/li&gt;
  &lt;li&gt;보통은 파일을 생성한 사용자의 기본 그룹으로 지정&lt;/li&gt;
  &lt;li&gt;root가 명령을 이용해 강제로 변경 가능&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;기타-사용자&quot;&gt;기타 사용자&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;소유자나 그룹 카테고리에 속하지 않은 사용자&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;접근-권한의-종류&quot;&gt;접근 권한의 종류&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;읽기 권한, 쓰기 권한, 실행 권한 세 가지로 구성&lt;/li&gt;
  &lt;li&gt;파일과 디렉토리에 대해 다른 의미로 해석됨&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-13-unix-16-05.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;접근-권한-표기&quot;&gt;접근 권한 표기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;사용자 카테고리별로 누가 파일을 읽고 쓰고 실행할 수 있는지를 문자로 표현한 것&lt;/li&gt;
  &lt;li&gt;사용자 카테고리별로 세가지 권한의 부여 여부를 rwx 세 문자를 이용해 그 순서대로 표시&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;해당 권한이 없을 경우 –로 표기&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ ls –l
  total 1
  -rw-r--r-- 1 ksshin ksshin 221 6월 5 22:12 text
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-13-unix-16-06.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;소유자의 권한은 rw-, 그룹의 권한은 가운데의 r–, 기타 사용자의 권한은 마지막의 r–&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-13-unix-16-07.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

</description>
        <pubDate>Fri, 13 Mar 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/devlog/2020/03/13/unix-16/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/devlog/2020/03/13/unix-16/</guid>
        
        <category>unix</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[Sass/SCSS] 재활용(Mixins) - @content</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/sass/2020-03-13-sass-10.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;sassscss-재활용mixins---content&quot;&gt;Sass(SCSS) 재활용(Mixins) - @content&lt;/h1&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;선언된 Mixin에 @content이 포함되어 있다면 해당 부분에 원하는 스타일 블록 을 전달할 수 있습니다.&lt;/li&gt;
  &lt;li&gt;이 방식을 사용하여 기존 Mixin이 가지고 있는 기능에 선택자나 속성 등을 추가할 수 있습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;content&quot;&gt;@content&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;     @mixin 믹스인이름() {
       스타일;
       @content;
     }
     
     @include 믹스인이름() {
       // 스타일 블록
       스타일;
     }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;SCSS:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  @mixin icon($url) {
    ＆::after {
      content: $url;
      @content;
    }
  }
  .icon1 {
    // icon Mixin의 기존 기능만 사용
    @include icon(&quot;/images/icon.png&quot;);
  }
  .icon2 {
    // icon Mixin에 스타일 블록을 추가하여 사용
    @include icon(&quot;/images/icon.png&quot;) {
      position: absolute;
    };
  }   
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Compiled to:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  .icon1::after {
    content: &quot;/images/icon.png&quot;;
  }
  .icon2::after {
    content: &quot;/images/icon.png&quot;;
    position: absolute;
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ul&gt;
      &lt;li&gt;Mixin에게 전달된 스타일 블록은 Mixin의 범위가 아니라 스타일 블록이 정의된 범위에서 평가됩니다.
즉, Mixin의 매개변수는 전달된 스타일 블록 안에서 사용되지 않고 전역 값으로 해석됩니다.
전역 변수(Global variables)와 지역 변수(Local variables)를 생각하면 좀 더 쉽습니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;SCSS:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $color: red;
    
  @mixin colors($color: blue) {
    // Mixin의 범위
    @content;
    background-color: $color;
    border-color: $color;
  }
    
  div {
    @include colors() {
      // 스타일 블록이 정의된 범위
      color: $color;
    }
  }  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Compiled to:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  div {
    color: red;
    background-color: blue;
    border-color: blue;
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    본 포스팅은 HEROPY 님의 영상과 블로그를 보고 공부한 내용을 정리한 것입니다.
    https://heropy.blog/2018/01/31/sass/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Fri, 13 Mar 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/devlog/2020/03/13/sass-10/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/devlog/2020/03/13/sass-10/</guid>
        
        <category>sass</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[Sass/SCSS] 재활용(Mixins) - 인수(Arguments)</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/sass/2020-03-13-sass-09.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;sassscss-재활용mixins---인수arguments&quot;&gt;Sass(SCSS) 재활용(Mixins) - 인수(Arguments)&lt;/h1&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Mixin은 함수(Functions)처럼 인수(Arguments)를 가질 수 있습니다.&lt;/li&gt;
  &lt;li&gt;하나의 Mixin으로 다양한 결과를 만들 수 있습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;인수arguments&quot;&gt;인수(Arguments)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;매개변수(Parameters)란 변수의 한 종류로, 제공되는 여러 데이터 중 하나를 가리키기 위해 사용된다.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;제공되는 여러 데이터들을 전달인수(Arguments) 라고 부른다.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; @mixin 믹스인이름($매개변수) {
    스타일;
  }
  @include 믹스인이름(인수);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;SCSS:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  @mixin dash-line($width, $color) {
    border: $width dashed $color;
  }
    
  .box1 { @include dash-line(1px, red); }
  .box2 { @include dash-line(4px, blue); }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Sass:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  =믹스인이름($매개변수)
    스타일
    
  +믹스인이름(인수)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Compiled to:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  .box1 {
    border: 1px dashed red;
  }
  .box2 {
    border: 4px dashed blue;
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;인수의-기본값-설정&quot;&gt;인수의 기본값 설정&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;인수(argument)는 기본값(default value)을 가질 수 있습니다.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;@include 포함 단계에서 별도의 인수가 전달되지 않으면 기본값이 사용됩니다.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  @mixin 믹스인이름($매개변수: 기본값) {
    스타일;
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;SCSS:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  @mixin dash-line($width: 1px, $color: black) {
    border: $width dashed $color;
  }
    
  .box1 { @include dash-line; }
  .box2 { @include dash-line(4px); }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Compiled to:&lt;/p&gt;

    &lt;p&gt;.box1 {
     border: 1px dashed black;
   }
   .box2 {
     border: 4px dashed black;
   }&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;키워드-인수keyword-arguments&quot;&gt;키워드 인수(Keyword Arguments)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Mixin에 전달할 인수를 입력할 때 명시적으로 키워드(변수)를 입력하여 작성할 수 있습니다.&lt;/li&gt;
  &lt;li&gt;별도의 인수 입력 순서를 필요로 하지 않아 편리하게 작성할 수 있습니다.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;단, 작성하지 않은 인수가 적용될 수 있도록 기본값을 설정해 주는 것이 좋습니다.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;      @mixin 믹스인이름($매개변수A: 기본값, $매개변수B: 기본값) {
        스타일;
      }
        
      @include 믹스인이름($매개변수B: 인수);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;SCSS:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;      @mixin position($p: absolute, $t: null, $b: null, $l: null,$r: null) {
        position: $p;
        top: $t;
        bottom: $b;
        left: $l;
        right: $r;
      }
        
      .absolute {
        // 키워드 인수로 설정할 값만 전달
        @include position($b: 10px, $r: 20px);
      }
      .fixed {
        // 인수가 많아짐에 따라 가독성을 확보하기 위해 줄바꿈
        @include position(
          fixed,
          $t: 30px,
          $r: 40px
        );
      }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Compiled to:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  .absolute {
    position: absolute;
    bottom: 10px;
    right: 20px;
  }
  .fixed {
    position: fixed;
    top: 30px;
    right: 40px;
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;가변-인수variable-arguments&quot;&gt;가변 인수(Variable Arguments)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;때때로 입력할 인수의 개수가 불확실한 경우가 있습니다.&lt;/li&gt;
  &lt;li&gt;그럴 경우 가변 인수를 사용할 수 있습니다.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;가변 인수는 매개변수 뒤에 …을 붙여줍니다.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  @mixin 믹스인이름($매개변수...) {
    스타일;
  }
    
  @include 믹스인이름(인수A, 인수B, 인수C);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;SCSS:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  // 인수를 순서대로 하나씩 전달 받다가, 3번째 매개변수($bg-values)는 인수의 개수에 상관없이 받음
  @mixin bg($width, $height, $bg-values...) {
    width: $width;
    height: $height;
    background: $bg-values;
  }
    
  div {
    // 위의 Mixin(bg) 설정에 맞게 인수를 순서대로 전달하다가 3번째 이후부터는 개수에 상관없이 전달
    @include bg(
      100px,
      200px,
      url(&quot;/images/a.png&quot;) no-repeat 10px 20px,
      url(&quot;/images/b.png&quot;) no-repeat,
      url(&quot;/images/c.png&quot;)
    );
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Compiled to:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  div {
    width: 100px;
    height: 200px;
    background: url(&quot;/images/a.png&quot;) no-repeat 10px 20px,
                url(&quot;/images/b.png&quot;) no-repeat,
                url(&quot;/images/c.png&quot;);
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;위에선 인수를 받는 매개변수에 …을 사용하여 가변 인수를 활용했습니다. 이번엔 반대로 가변 인수를 전달할 값으로 사용해 보겠습니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;SCSS:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  @mixin font(
    $style: normal,
    $weight: normal,
    $size: 16px,
    $family: sans-serif
  ) {
    font: {
      style: $style;
      weight: $weight;
      size: $size;
      family: $family;
    }
  }
  div {
    // 매개변수 순서와 개수에 맞게 전달
    $font-values: italic, bold, 16px, sans-serif;
    @include font($font-values...);
  }
  span {
    // 필요한 값만 키워드 인수로 변수에 담아 전달
    $font-values: (style: italic, size: 22px);
    @include font($font-values...);
  }
  a {
    // 필요한 값만 키워드 인수로 전달
    @include font((weight: 900, family: monospace)...);
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Compiled to:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  div {
    font-style: italic;
    font-weight: bold;
    font-size: 16px;
    font-family: sans-serif;
  }
  span {
    font-style: italic;
    font-weight: normal;
    font-size: 22px;
    font-family: sans-serif;
  }
  a {
    font-style: normal;
    font-weight: 900;
    font-size: 16px;
    font-family: monospace;
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    본 포스팅은 HEROPY 님의 영상과 블로그를 보고 공부한 내용을 정리한 것입니다.
    https://heropy.blog/2018/01/31/sass/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Fri, 13 Mar 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/devlog/2020/03/13/sass-09/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/devlog/2020/03/13/sass-09/</guid>
        
        <category>sass</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[Sass/SCSS] 재활용(Mixins) - @include </title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/sass/2020-03-13-sass-08.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;sassscss-재활용mixins---include&quot;&gt;Sass(SCSS) 재활용(Mixins) - @include&lt;/h1&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Sass Mixins는 스타일 시트 전체에서 재사용 할 CSS 선언 그룹 을 정의하는 아주 훌륭한 기능입니다.&lt;/li&gt;
  &lt;li&gt;약간의 Mixin(믹스인)으로 다양한 스타일을 만들어낼 수 있습니다.&lt;/li&gt;
  &lt;li&gt;선언하기(@mixin)와 포함하기(@include)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;mixin&quot;&gt;@mixin&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;기본적인 Mixin 선언은 아주 간단합니다.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;@mixin 지시어를 이용하여 스타일을 정의합니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;SCSS:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  @mixin 믹스인이름 {
    스타일;
  }
    
  @mixin large-text {
    font-size: 22px;
    font-weight: bold;
    font-family: sans-serif;
    color: orange;
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Sass:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  =믹스인이름
    스타일
      
  =large-text
    font-size: 22px
    font-weight: bold
    font-family: sans-serif
    color: orange
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Mixin은 선택자를 포함 가능하고 상위(부모) 요소 참조(＆같은)도 할 수 있습니다.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  @mixin large-text {
    font: {
      size: 22px;
      weight: bold;
      family: sans-serif;
    }
    color: orange;
    
    ＆::after {
      content: &quot;!!&quot;;
    }
    
    span.icon {
      background: url(&quot;/images/icon.png&quot;);
    }
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;include&quot;&gt;@include&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;선언된 Mixin을 사용(포함)하기 위해서는 @include가 필요합니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;SCSS:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  @include 믹스인이름;
    
  h1 {
    @include large-text;
  }
  div {
    @include large-text;
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Sass:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  +믹스인이름
    
  h1
    +large-text
  div
    +large-text
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Compiled to:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;h1 {
  font-size: 22px;
  font-weight: bold;
  font-family: sans-serif;
  color: orange;
}
h1::after {
  content: &quot;!!&quot;;
}
h1 span.icon {
  background: url(&quot;/images/icon.png&quot;);
}
  
div {
  font-size: 22px;
  font-weight: bold;
  font-family: sans-serif;
  color: orange;
}
div::after {
  content: &quot;!!&quot;;
}
div span.icon {
  background: url(&quot;/images/icon.png&quot;);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    본 포스팅은 HEROPY 님의 영상과 블로그를 보고 공부한 내용을 정리한 것입니다.
    https://heropy.blog/2018/01/31/sass/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Fri, 13 Mar 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/devlog/2020/03/13/sass-08/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/devlog/2020/03/13/sass-08/</guid>
        
        <category>sass</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[Sass/SCSS] 가져오기(Import)</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/sass/2020-03-13-sass-07.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;sassscss-가져오기import&quot;&gt;Sass(SCSS) 가져오기(Import)&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;@import로 외부에서 가져온 Sass 파일은 모두 단일 CSS 출력 파일로 병합됩니다.&lt;/li&gt;
  &lt;li&gt;가져온 파일에 정의된 모든 변수 또는 Mixins 등을 주 파일에서 사용할 수 있습니다.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Sass @import는 기본적으로 Sass 파일을 가져오는데, CSS @import 규칙으로 컴파일되는 몇 가지 상황이 있습니다.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;파일 확장자가 .css일 때&lt;/li&gt;
      &lt;li&gt;파일 이름이 http://로 시작하는 경우&lt;/li&gt;
      &lt;li&gt;url()이 붙었을 경우&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;미디어쿼리가 있는 경우&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  @import &quot;hello.css&quot;;
  @import &quot;http://hello.com/hello&quot;;
  @import url(hello);
  @import &quot;hello&quot; screen;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;여러-파일-가져오기&quot;&gt;여러 파일 가져오기&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;하나의 @import로 여러 파일을 가져올 수도 있습니다. 파일 이름은 ,로 구분합니다.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  @import &quot;header&quot;, &quot;footer&quot;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;파일-분할partials&quot;&gt;파일 분할(Partials)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;프로젝트 규모가 커지면 파일들을 header나 side-menu 같이 각 기능과 부분으로 나눠 유지보수가 쉽도록 관리하게 됩니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;이 경우 파일이 점점 많아지는데, 모든 파일이 컴파일 시 각각의 ~.css 파일로 나눠서 저장된다면 관리나 성능 차원에서 문제가 될 수 있습니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;그래서 Sass는 Partials 기능을 지원합니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;파일 이름 앞에 _를 붙여(_header.scss와 같이) @import로 가져오면 컴파일 시 ~.css 파일로 컴파일하지 않습니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;예를 들어보겠습니다. 다음과 같이 scss/ 안에 3개의 Sass 파일이 있습니다.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  Sass-App
    # ...
    ├─scss
    │  ├─header.scss
    │  ├─side-menu.scss
    │  └─main.scss
    # ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;main.scss로 나머지 ~.scss 파일을 가져옵니다.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  // main.scss
  @import &quot;header&quot;, &quot;side-menu&quot;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;그리고 이 파일들을 css/디렉토리로 컴파일합니다.  (컴파일은 node-sass)&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  # `scss`디렉토리에 있는 파일들을 `css`디렉토리로 컴파일
  $ node-sass scss --output css
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;컴파일 후 확인하면 아래와 같이 scss/에 있던 파일들이 css/ 안에 각 하나씩의 파일로 컴파일됩니다.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  Sass-App
    # ...
    ├─css
    │  ├─header.css
    │  ├─side-menu.css
    │  └─main.css
    ├─scss
    │  ├─header.scss
    │  ├─side-menu.scss
    │  └─main.scss
    # ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;이번에는 가져올 파일 이름에 _를 붙이겠습니다. 메인 파일인 main.scss에서는 _를 사용하지 않습니다.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  Sass-App
    # ...
    ├─scss
    │  ├─_header.scss
    │  ├─_side-menu.scss
    │  └─main.scss
    # ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;같은 방법으로 import 및 컴파일&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  // main.scss
  @import &quot;header&quot;, &quot;side-menu&quot;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;&lt;br /&gt;&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ node-sass scss --output css
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;별도의 파일로 컴파일되지 않고 사용됩니다.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  Sass-App
    # ...
    ├─css
    │  └─main.css  # main + header + side-menu
    ├─scss
    │  ├─header.scss
    │  ├─side-menu.scss
    │  └─main.scss
    # ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Webpack이나 Parcel, Gulp 같은 일반적인 빌드툴에서는 Partials 기능을 사용할 필요 없이, 설정된 값에 따라 빌드됩니다. 하지만 되도록 _를 사용할 것을 권장합니다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    본 포스팅은 HEROPY 님의 영상과 블로그를 보고 공부한 내용을 정리한 것입니다.
    https://heropy.blog/2018/01/31/sass/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Fri, 13 Mar 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/devlog/2020/03/13/sass-07/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/devlog/2020/03/13/sass-07/</guid>
        
        <category>sass</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[Sass/SCSS] 문법 - 변수(Variables)</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/sass/2020-03-12-sass-06.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;sassscss-문법---변수variables&quot;&gt;Sass(SCSS) 문법 - 변수(Variables)&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;반복적으로 사용되는 값을 변수로 지정할 수 있습니다.&lt;/li&gt;
  &lt;li&gt;변수 이름 앞에는 항상 $를 붙입니다&lt;/li&gt;
  &lt;li&gt;$변수이름: 속성값;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;SCSS:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $color-primary: #e96900;
  $url-images: &quot;/assets/images/&quot;;
  $w: 200px;
    
  .box {
    width: $w;
    margin-left: $w;
    background: $color-primary url($url-images + &quot;bg.jpg&quot;);
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Compiled to:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  .box {
    width: 200px;
    margin-left: 200px;
    background: #e96900 url(&quot;/assets/images/bg.jpg&quot;);
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;변수-유효범위variable-scope&quot;&gt;변수 유효범위(Variable Scope)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;변수는 사용 가능한 유효범위가 있습니다.&lt;/li&gt;
  &lt;li&gt;선언된 블록({}) 내에서만 유효범위를 가집니다.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;변수 $color는 .box1의 블록 안에서 설정되었기 때문에, 블록 밖의 .box2에서는 사용할 수 없습니다&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  .box1 {
    $color: #111;
    background: $color;
  }
    
  // Error
  .box2 {
    background: $color;
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;변수-재-할당variable-reassignment&quot;&gt;변수 재 할당(Variable Reassignment)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;다음과 같이 변수에 변수를 할당할 수 있습니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;SCSS:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; $red: #FF0000;
 $blue: #0000FF;
   
 $color-primary: $blue;
 $color-danger: $red;
   
 .box {
   color: $color-primary;
   background: $color-danger;
 }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Compiled to:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  .box {
    color: #0000FF;
    background: #FF0000;
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;global-전역-설정&quot;&gt;!global (전역 설정)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;!global 플래그를 사용하면 변수의 유효범위를 전역(Global)로 설정할 수 있습니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;SCSS:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;.box1 {
  $color: #111 !global;
  background: $color;
}
.box2 {
  background: $color;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Compiled to:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  .box1 {
    background: #111;
  }
  .box2 {
    background: #111;
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;기존에 사용하던 같은 이름의 변수가 있을 경우 값이 덮어져 사용될 수 있습니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;SCSS:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $color: #000;
  .box1 {
    $color: #111 !global;
    background: $color;
  }
  .box2 {
    background: $color;
  }
  .box3 {
    $color: #222;
    background: $color;
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Compiled to:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  .box1 {
    background: #111;
  }
  .box2 {
    background: #111;
  }
  .box3 {
    background: #222;
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;default-초깃값-설정&quot;&gt;!default (초깃값 설정)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;!default 플래그는 할당되지 않은 변수의 초깃값을 설정합니다.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;즉, 할당되어있는 변수가 있다면 변수가 기존 할당 값을 사용합니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;SCSS:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$color-primary: red;
  
.box {
  $color-primary: blue !default;
  background: $color-primary;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Compiled to:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  .box {
    background: red;
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;좀 더 유용하게, ‘변수와 값을 설정하겠지만, 혹시 기존 변수가 있을 경우는 현재 설정하는 변수의 값은 사용하지 않겠다’는 의미로 쓸 수 있습니다.
예를 들어, Bootstrap 같은 외부 Sass(SCSS) 라이브러리를 연결했더니 변수 이름이 같아 내가 작성한 코드의 변수들이 Overwrite(덮어쓰기) 된다면 문제가 있겠죠.
반대로 내가 만든 Sass(SCSS) 라이브러리가 다른 사용자 코드의 변수들을 Overwrite 한다면, 사용자들은 그 라이브러리를 더 이상 사용하지 않을 것입니다.
이럴 때 Sass(SCSS) 라이브러리(혹은 새롭게 만든 모듈)에서 사용하는 변수에 !default 플래그가 있다면 기존 코드(원본)를 Overwrite 하지 않고도 사용할 수 있습니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;SCSS:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  // _config.scss
  $color-active: red;
   
  // main.scss
  @import 'config';
    
  $color-active: blue !default;
    
  .box {
    background: $color-active;  // red
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    본 포스팅은 HEROPY 님의 영상과 블로그를 보고 공부한 내용을 정리한 것입니다.
    https://heropy.blog/2018/01/31/sass/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Thu, 12 Mar 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/devlog/2020/03/12/sass-06/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/devlog/2020/03/12/sass-06/</guid>
        
        <category>sass</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[Sass/SCSS] 문법 - 중첩</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/sass/2020-03-12-sass-05.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;sassscss-문법---중첩&quot;&gt;Sass(SCSS) 문법 - 중첩&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Sass는 중첩 기능을 사용할 수 있습니다.&lt;/li&gt;
  &lt;li&gt;상위 선택자의 반복을 피하고 좀 더 편리하게 복잡한 구조를 작성할 수 있습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;SCSS:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  .section {
    width: 100%;
    .list {
      padding: 20px;
      li {
        float: left;
      }
    }
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Compiled to:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  .section {
    width: 100%;
  }
  .section .list {
    padding: 20px;
  }
  .section .list li {
    float: left;
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;ampersand-상위-선택자-참조&quot;&gt;Ampersand (상위 선택자 참조)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;중첩 안에서 ＆ 키워드는 상위(부모) 선택자를 참조하여 치환합니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;SCSS:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  .btn {
    position: absolute;
    ＆.active {
      color: red;
    }
  }
    
  .list {
    li {
      ＆:last-child {
        margin-right: 0;
      }
    }
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Compiled to:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  .btn {
    position: absolute;
  }
  .btn.active {
    color: red;
  }
  .list li:last-child {
    margin-right: 0;
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;＆키워드가 참조한 상위 선택자로 치환되는 것이기 때문에 다음과 같이 응용할 수도 있습니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;SCSS:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; .fs {
   ＆-small { font-size: 12px; }
   ＆-medium { font-size: 14px; }
   ＆-large { font-size: 16px; }
 }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Compiled to:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  .fs-small {
    font-size: 12px;
  }
  .fs-medium {
    font-size: 14px;
  }
  .fs-large {
    font-size: 16px;
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;at-root-중첩-벗어나기&quot;&gt;@at-root (중첩 벗어나기)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;중첩에서 벗어나고 싶을 때 @at-root 키워드를 사용합니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;중첩 안에서 생성하되 중첩 밖에서 사용해야 경우에 유용합니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;SCSS:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; .list {
   $w: 100px;
   $h: 50px;
   li {
     width: $w;
     height: $h;
   }
   @at-root .box {
     width: $w;
     height: $h;
   }
 }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Compiled to:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  .fs-small {
    font-size: 12px;
  }
  .fs-medium {
    font-size: 14px;
  }
  .fs-large {
    font-size: 16px;
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Error code:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  .list {
    $w: 100px;
    $h: 50px;
    li {
      width: $w;
      height: $h;
    }
  }
    
  // Error
  .box {
    width: $w;
    height: $h;
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ul&gt;
      &lt;li&gt;.list 안에 있는 특정 변수를 범위 밖에서 사용할 수 없기 때문에, 위 예제 처럼 @at-root 키워드를 사용해야 합니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;중첩된-속성&quot;&gt;중첩된 속성&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;font-, margin- 등과 같이 동일한 네임 스페이스를 가지는 속성들을 다음과 같이 사용할 수 있습니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;SCSS:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; .box {
   font: {
     weight: bold;
     size: 10px;
     family: sans-serif;
   };
   margin: {
     top: 10px;
     left: 20px;
   };
   padding: {
     bottom: 40px;
     right: 30px;
   };
 }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Compiled to:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  .box {
    font-weight: bold;
    font-size: 10px;
    font-family: sans-serif;
    margin-top: 10px;
    margin-left: 20px;
    padding-bottom: 40px;
    padding-right: 30px;
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    본 포스팅은 HEROPY 님의 영상과 블로그를 보고 공부한 내용을 정리한 것입니다.
    https://heropy.blog/2018/01/31/sass/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Thu, 12 Mar 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/devlog/2020/03/12/sass-05/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/devlog/2020/03/12/sass-05/</guid>
        
        <category>sass</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[Database] SQL 개요와 SQL 실습 및 데이터 정의 (1/3)</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-12-database-17.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;sql-개요&quot;&gt;SQL 개요&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;sql-structured-query-language&quot;&gt;SQL (Structured Query Language)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;데이터베이스에 데이터 삽입/삭제/수정/검색 방법&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;관계 대수나 관계 해석을 사용 ==&amp;gt; 일반사용자가 사용하기 어렵다.
  · 대안 : SQL 사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;SQL&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;관계 데이터베이스를 위한 표준 질의어&lt;/li&gt;
      &lt;li&gt;사용자가 처리를 원하는 데이터가 무엇인지만 제시&lt;/li&gt;
      &lt;li&gt;데이터를 얻는 방법에 대하여 언급하지 않음&lt;br /&gt;
  ==&amp;gt; 비절차적 데이터 언어의 특성&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;sql의-역사&quot;&gt;SQL의 역사&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;1974년 SEQUEL (Structured English QUEry Language)에서 유래&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;IBM 연구소의 연구용 관계 데이터베이스 관리시스템 (System R)을 위한 언어&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;이후 개발된 관계 데이터베이스 관리 시스템은 다른 질의어를 사용&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;1986년 미국 표준 연구소인 ANSI와 국제 표준화 기구인 ISO에서 SQL을 관계 데이터베이스의 표준 질의어로 채택하고 표준화 작업 진행&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;1986년 표준 SQL : SQL-86 또는 SQL1&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;1992년 표준 SQL : SQL-92 또는 SQL2&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;1999년 표준 SQL : SQL-99 또는 SQL3&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;sql-사용-방법&quot;&gt;SQL 사용 방법&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;DBMS 내에서 대화식으로 질의&lt;/li&gt;
  &lt;li&gt;C, C++, Java와 같은 언어로 작성한 프로그램에 삽입하여 사용&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;sql의-분류&quot;&gt;SQL의 분류&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;데이터정의어 (DDL, Data Definition Language)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;테이블을 생성, 변경, 삭제하는 기능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;데이터조작어 (DML, Data Manipulation Language)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;테이블에 데이터를 삽입, 수정, 삭제, 검색하는 기능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;데이터제어어 (DCL, Data Control Language)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;보안을 위해 데이터에 대한 접근 및 사용 권한을 사용자별로 부여, 취소하는 기능&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;데이터베이스 관리자가 주로 사용&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;sql의-기능&quot;&gt;SQL의 기능&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;주기능 : 검색을 위한 질의 작성용 비절차적 데이터 조작어&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;보조기능 : 데이터 정의 및 제어&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;데이터의-정의&quot;&gt;데이터의 정의&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;실습용-데이터베이스&quot;&gt;실습용 데이터베이스&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;A. Customer 테이블
&lt;img src=&quot;/assets/img/database/2020-03-12-database-17-01.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;B. Items 테이블
&lt;img src=&quot;/assets/img/database/2020-03-12-database-17-02.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;C. Orders 테이블
&lt;img src=&quot;/assets/img/database/2020-03-12-database-17-03.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;테이블-생성--속성-정의&quot;&gt;테이블 생성 – 속성 정의&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-12-database-17-04.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;A. 테이블 생성시 정의할 사항&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;① 테이블 이름&lt;/li&gt;
      &lt;li&gt;② 속성 이름 및 데이터 타입, 제약 사항&lt;/li&gt;
      &lt;li&gt;③ 기본키, 대체키, 외래키의 정의&lt;/li&gt;
      &lt;li&gt;④ 데이터 무결성을 위한 제약조건 정의&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-12-database-17-05.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;SQL 질의문&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;세미콜론( ; )으로 문장의 끝을 표시&lt;/li&gt;
      &lt;li&gt;대소문자 구분하지 않음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;B. 속성 정의&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;테이블을 구성하는 속성 정의&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;데이터 타입 정의&lt;/li&gt;
          &lt;li&gt;NULL 값 허용 여부 정의&lt;/li&gt;
          &lt;li&gt;기본 값 필요 여부&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;C. 속성의 데이터 타입
&lt;img src=&quot;/assets/img/database/2020-03-12-database-17-06.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;
&lt;img src=&quot;/assets/img/database/2020-03-12-database-17-07.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;D. NOT NULL&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;속성의 NULL 값을 허용하지 않음을 의미&lt;/li&gt;
      &lt;li&gt;반드시 값이 입력되어야 하는 속성에 사용&lt;/li&gt;
      &lt;li&gt;인터넷 상의 회원가입시 필수항목&lt;/li&gt;
      &lt;li&gt;예 : account VARCHAR(20) NOT NULL&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;E. DEFAULT&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;속성의 기본 값을 지정&lt;/li&gt;
      &lt;li&gt;DEFAULT를 지정하지 않고, 값이 입력되지 않은 경우 NULL값으로 자동 저장&lt;/li&gt;
      &lt;li&gt;예 : credit INT DEFAULT 0&lt;/li&gt;
      &lt;li&gt;예 : grade VARCHAR(10) DEFAULT ‘NEW’&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;[TIP]&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;문자열, 날짜 데이터 : 작은 따옴표로 묶어야 함&lt;/li&gt;
      &lt;li&gt;작은 따옴표 내의 문자열 : 대소문자 구분됨
        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;예 :&lt;/p&gt;

            &lt;ul&gt;
              &lt;li&gt;grade VARCHAR(10) DEFAULT ‘NEW’&lt;/li&gt;
              &lt;li&gt;grade VARCHAR(10) DEFAULT ‘New’&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;F. AUTO_INCREMENT&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;테이블에 새로운 투플이 삽입될 때, 자동으로 DBMS에서 유일한 번호를 생성&lt;/li&gt;
      &lt;li&gt;AUTO_INCREMENT인 속성은 기본키로 지정되어야 함.&lt;/li&gt;
      &lt;li&gt;1부터 시작하며, 새로운 투플(레코드) 추가시 1씩 증가&lt;/li&gt;
      &lt;li&gt;형식 : 속성이름 INT NOT NULL AUTO_INCREMENT&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;다른 값부터 시작하도록 설정할 수 있다.&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;형식 : ALTER TABLE 테이블명 AUTO_INCREMENT=초기값&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;새로운 레코드를 삽입할 때, AUTO_INCREMENT로 지정된 속성값은 입력하지 않아도 됨&lt;/li&gt;
      &lt;li&gt;AUTO_INCREMENT로 지정된 속성의 현재 값은 변경할 수 없음&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;레코드 삽입시 SQL 구조&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;INSERT INTO 테이블명 ( 속성1, … 속성N ) values ( 속성값1, … 속성값N )&lt;/li&gt;
          &lt;li&gt;AUTO_INCREMENT로 지정된 속성은 제외할 수 있음&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;G. 실습용 데이터베이스 데이터 정의&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;Customer 테이블&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;실습용-데이터베이스-데이터-정의-customer-테이블&quot;&gt;실습용 데이터베이스 데이터 정의 (Customer 테이블)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;기본 테이블 생성
&lt;img src=&quot;/assets/img/database/2020-03-12-database-17-08.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;데이터 입력
&lt;img src=&quot;/assets/img/database/2020-03-12-database-17-09.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;데이터입력 : NOT NULL 속성 데이터만 입력시
&lt;img src=&quot;/assets/img/database/2020-03-12-database-17-10.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;AUTO_INCREMENT 적용시
&lt;img src=&quot;/assets/img/database/2020-03-12-database-17-11.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;AUTO_INCREMENT 의 초기값을 100으로 설정하기&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;테이블 생성 직후에 설정
&lt;img src=&quot;/assets/img/database/2020-03-12-database-17-12.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;AUTO_INCREMENT 적용시 INSERT 오류
&lt;img src=&quot;/assets/img/database/2020-03-12-database-17-13.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;AUTO_INCREMENT : 속성이름 리스트를 사용하지 않고 입력하기&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;AUTO_INCREMENT 속성 값 = 숫자 이외의 모든 문자열이나 NULL을 속성 값으로 입력하면 DBMS는 자동으로 다음 숫자를 사용하여 투플을 삽입함&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;AUTO_INCREMENT 속성 값 = 숫자를 사용하면, 입력한 숫자로 값이 지정됨&lt;br /&gt;
&lt;img src=&quot;/assets/img/database/2020-03-12-database-17-15.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-12-database-17-16.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;실습용-데이터베이스-데이터-정의-items-테이블&quot;&gt;실습용 데이터베이스 데이터 정의 (Items 테이블)&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-12-database-17-17.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;
&lt;img src=&quot;/assets/img/database/2020-03-12-database-17-18.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Orders 테이블
&lt;img src=&quot;/assets/img/database/2020-03-12-database-17-19.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Thu, 12 Mar 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/devlog/2020/03/12/database-17/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/devlog/2020/03/12/database-17/</guid>
        
        <category>database</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[Database] MySQL 기본 명령어 - 데이터베이스 및 사용자 계정</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-12-database-16.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;mysql-기본-명령어---데이터베이스&quot;&gt;MySQL 기본 명령어 - 데이터베이스&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;본 포스팅은 Windows를 기준으로 작성되었습니다&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;사용할-데이터베이스-지정하기&quot;&gt;사용할 데이터베이스 지정하기&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;A. 로그인시 지정하기&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;Windows 프롬프트 상에서 사용&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;명령어 : mysql –u계정 –p비밀번호 데이터베이스명&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    mysql -uroot -p mysql
        
    또는
        
    mysql -uroot -p1234 mysql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;B. 로그인 후 지정하기&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;MySQL 내의 “mysql&amp;gt;” 프롬프트 상에서 사용&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;명령어 : use 데이터베이스명&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  show databases;
      
  use mysql;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;데이터베이스-및-테이블-리스트-보기&quot;&gt;데이터베이스 및 테이블 리스트 보기&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;A. 데이터베이스 리스트 보기&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;명령어 : show databases;&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    show databases;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;B. 테이블 리스트 보기&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;데이터베이스를 선택한 후 사용&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;명령어 : show tables;&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    use mysql;
        
    show tables; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;C. 테이블 구조 살펴보기&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;데이터베이스를 선택한 후 사용&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;명령어 : desc 데이블명;&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  use mysql;
        
  desc user;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;데이터베이스-생성-및-삭제&quot;&gt;데이터베이스 생성 및 삭제&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;A. 데이터베이스 생성&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;명령어 : create database 데이터베이스명;&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  show databases;
         
  create database testdatabase;
        
  show databases;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;B. 데이터베이스 삭제&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;명령어 : drop database 데이터베이스명;&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;     show databases;
                      
     drop database testdatabase;
         
     show databases;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;mysql-기본-명령어---사용자-계정&quot;&gt;MySQL 기본 명령어 - 사용자 계정&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;사용자-계정-만들기&quot;&gt;사용자 계정 만들기&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;A. 현재 등록되어 있는 계정 확인하기&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;mysql내의 user 테이블의 투플 확인&lt;/li&gt;
      &lt;li&gt;조회하고자하는 속성을 지정&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;명령어 : select 속성1, … , 속성n from user;&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;전체 속성을 나타내기 위하여 * 사용&lt;/p&gt;

            &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  use mysql;
        
  select host, user, password frm user;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;            &lt;/div&gt;

            &lt;ul&gt;
              &lt;li&gt;
                &lt;p&gt;[참고]&lt;/p&gt;

                &lt;ul&gt;
                  &lt;li&gt;localhost : 자기 자신의 컴퓨터&lt;/li&gt;
                  &lt;li&gt;password&lt;/li&gt;
                  &lt;li&gt;암호화되어 저장됨&lt;/li&gt;
                  &lt;li&gt;암호화된 것을 풀수 있는 방법은 제공되지 않음&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;B. 계정 만들기&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;계정을 등록하는데 사용되는 테이블 : mysql 데이터베이스 내의 user와 db&lt;/li&gt;
      &lt;li&gt;명령어
        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;비밀번호 없는 계정 만들기&lt;/p&gt;

            &lt;ul&gt;
              &lt;li&gt;
                &lt;p&gt;CREATE USER ‘계정이름’@’localhost’;&lt;/p&gt;

                &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  use mysql;
           
  select host, user, password frm user;
           
  create user 'kimc'@'localhost';
           
  select host, user, password frm user;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;                &lt;/div&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;C. 비밀번호를 가진 계정 만들기&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;CREATE USER ‘계정이름’@’localhost’ IDENTIFIED BY ‘비밀번호’;&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    use mysql;
        
    select host, user, password frm user;
        
    create user 'kimc'@'localhost' identified by '1234';
        
    select host, user, password frm user;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;사용자-계정에-권한-부여-및-삭제&quot;&gt;사용자 계정에 권한 부여 및 삭제&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;A. 지정한 계정에 특정 데이터베이스 접근 권한 주기&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;(1) 주의 사항&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;root 계정에서만 사용자 계정의 데이터베이스 접근 권한을 줄 수 있음&lt;/li&gt;
          &lt;li&gt;접근권한을 설정하기 전에는 데이터베이스에 접근 불가능&lt;/li&gt;
          &lt;li&gt;접근 권한을 부여하지 않은 데이터베이스에는 접근할 수 없음&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;(2) 접근 권한 부여 전&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;예
            &lt;ul&gt;
              &lt;li&gt;
                &lt;p&gt;kimc 계정에 testdatabase 데이터베이스 접근 권한 부여 전&lt;/p&gt;

                &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  show databases;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;                &lt;/div&gt;

                &lt;ul&gt;
                  &lt;li&gt;접근 가능한 데이터베이스 확인&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;(4) 접근 권한 부여 명령어&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;명령어&lt;/p&gt;

            &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  insert into db values ( ‘localhost’, ‘데이터베이스명’, ‘계정’, ‘y’, ‘y’, ... ‘y’ );
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;            &lt;/div&gt;

            &lt;ul&gt;
              &lt;li&gt;총 19개의 ‘y’&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;(5) 시스템에 적용하기 전&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;kimc 계정에 로그인&lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;접근 가능한 데이터베이스 확인&lt;/p&gt;

            &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  use testdatabase
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;            &lt;/div&gt;

            &lt;ul&gt;
              &lt;li&gt;데이터베이스 사용 시도&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;(6) 변경된 설정 시스템에 적용하기&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;db에 추가된 권한은 시스템에 자동으로 적용되지 않음&lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;명령어 : flush privileges;&lt;/p&gt;

            &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  flush privileges;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;B. 계정의 권한 설정&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;user 테이블에 정의된 모든 권한을 계정에 부여&lt;/li&gt;
      &lt;li&gt;모든 데이터베이스에 적용됨&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;명령어&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;GRANT ALL PRIVILEGES ON * .* TO ‘계정’@‘localhost’ WITH GRANT OPTION;&lt;/p&gt;

            &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  grant all privileges on * .* to 'kimc'@'localhost' with grant option;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;계정-비밀번호-변경하기&quot;&gt;계정 비밀번호 변경하기&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;계정 비밀번호는 user 테이블에 암호화되어 저장되어 있다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;비밀번호 변경은 user 테이블의 password 속성을 변경하는 것&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;암호화시키기 위하여 password( ) 함수를 사용&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;(1) 계정의 비밀번호 변경&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;명령어 : update user set password=password( ‘새비밀번호’ ) where user=’계정‘;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;(2) 변경된 비밀번호로 계정에 로그인하기&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;변경된 설정을 시스템에 적용하기&lt;/p&gt;

            &lt;ul&gt;
              &lt;li&gt;MySQL 내에서 flush privileges; 사용&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;계정-삭제하기&quot;&gt;계정 삭제하기&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;계정 정보는 user 테이블에 있으며, 삭제할 계정의 레코드(투플)을 삭제&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;명령어 : drop user ‘계정’@‘localhost’;&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  drop user 'kimc'@'localhost';
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Thu, 12 Mar 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/devlog/2020/03/12/database-16/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/devlog/2020/03/12/database-16/</guid>
        
        <category>database</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[Sass/SCSS] 문법 - 주석</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/sass/2020-03-11-sass-04.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;sassscss-문법---주석&quot;&gt;Sass(SCSS) 문법 - 주석&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;위의 ‘Sass와 SCSS의 차이점’에서 설명한대로 Sass와 SCSS의 기능은 동일하니,&lt;br /&gt;
편의를 위해 SCSS 문법으로 설명을 진행합니다. 단, Sass와 SCSS의 차이점이 있다면 나눠 설명합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;주석comment&quot;&gt;주석(Comment)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;CSS 주석은 /* … */ 입니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Sass(SCSS)는 JavaScript처럼 두 가지 스타일의 주석을 사용합니다.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  // 컴파일되지 않는 주석
  /* 컴파일되는 주석 */
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Sass:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  /* 컴파일되는
   * 여러 줄
   * 주석 */
    
  // Error
  /* 컴파일되는
  * 여러 줄
      * 주석 */
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ul&gt;
      &lt;li&gt;Sass의 경우 컴파일되는 여러 줄 주석을 사용할 때 각 줄 앞에 * 을 붙여야 하고, &lt;br /&gt;
  중요한 것은 * 의 라인을 맞춰줘야 합니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;SCSS:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  /*
  컴파일되는
  여러 줄
  주석
  */
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ul&gt;
      &lt;li&gt;SCSS는 각 줄에 * 이 없어도 문제되지 않습니다. 따라서 기존 CSS와 호환이 쉽습니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    본 포스팅은 HEROPY 님의 영상과 블로그를 보고 공부한 내용을 정리한 것입니다.
    https://heropy.blog/2018/01/31/sass/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Wed, 11 Mar 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/devlog/2020/03/11/sass-04/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/devlog/2020/03/11/sass-04/</guid>
        
        <category>sass</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[Sass/SCSS] Sass(SCSS) 컴파일 방법</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/sass/2020-03-11-sass-03.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;sassscss-컴파일-방법&quot;&gt;Sass(SCSS) 컴파일 방법&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Sass(SCSS)는 웹에서 직접 동작할 수 없습니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;어디까지나 최종에는 표준 CSS로 동작해야 하며, 우리는 전처리기로 작성 후 CSS로 컴파일해야 합니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;다양한 방법으로 컴파일이 가능하지만 자바스크립트 개발 환경(Node.js)에서 추천하는 몇가지 방법을 소개합니다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;sassmeister&quot;&gt;SassMeister&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;https://www.sassmeister.com&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;간단한 Sass 코드는 컴파일러를 설치하는게 부담될 수 있습니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;그럴 경우 SassMeister를 사용할 수 있습니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;페이지 접속 후 바로 Sass나 SCSS 문법으로 코딩하면 CSS로 실시간 변환됩니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;HTML를 작성하여 적용된 결과를 보거나 Sass 버전 설정 등 여러 환경 설정들을 지원하니 학습에 도움이 될 것입니다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;node-sass&quot;&gt;node-sass&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;https://github.com/sass/node-sass&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;https://sass-lang.com/libsass&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;npm이 설치되어있다고 생각하고 작성된 코드입니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;node-sass는 Node.js를 컴파일러인 LibSass에 바인딩한 라이브러리 입니다.
NPM으로 전역 설치하여 사용합니다.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ npm install -g node-sass
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;컴파일하려는 파일의 경로와 컴파일된 파일이 저장될 경로를 설정합니다. [ ] 는 선택사항입니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;$ node-sass [옵션] &lt;입력파일경로&gt; [출력파일경로]&lt;/입력파일경로&gt;&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ node-sass scss/main.scss public/main.css
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;여러 출력 경로를 설정할 수 있습니다.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ node-sass scss/main.scss public/main.css dist/style.css
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;옵션을 적용할 수도 있습니다.&lt;br /&gt;
옵션으로 –watch 혹은 -w를 입력하면, 런타임 중 파일을 감시하여 저장 시 자동으로 변경 사항을 컴파일합니다.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ node-sass --watch scss/main.scss public/main.css
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;기타 옵션&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;https://github.com/sass/node-sass#command-line-interface&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;gulp&quot;&gt;Gulp&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;npm이 설치되어있다고 생각하고 작성된 코드입니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Gulp : https://gulpjs.com/&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;빌드 자동화 도구(JavaScript Task Runner)인 Gulp에서는 gulpfile.js을 만들어 아래와 같이 설정할 수 있습니다.
먼저 gulp 명령을 사용하기 위해서는 전역 설치가 필요합니다.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ npm install -g gulp    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Gulp와 함께 Sass 컴파일러인 gulp-sass를 개발 의존성(devDependency) 모드로 설치합니다.
gulp-sass는 위에서 살펴본 node-sass를 Gulp에서 사용할 수 있도록 만들어진 플러그인입니다.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;https://github.com/dlmanning/gulp-sass&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ npm install --save-dev gulp gulp-sass
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;환경설정&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; // 자바스크립트
 // gulpfile.js
   
 var gulp = require('gulp')
 var sass = require('gulp-sass')
   
 // 일반 컴파일
 gulp.task('sass', function () {
   return gulp.src('./src/scss/*.scss')  // 입력 경로
     .pipe(sass().on('error', sass.logError))
     .pipe(gulp.dest('./dist/css'));  // 출력 경로
 });
   
 // 런타임 중 파일 감시
 gulp.task('sass:watch', function () {
   gulp.watch('./src/scss/*.scss', ['sass']);  
   // 입력 경로와 파일 변경 감지 시 실행할 Actions(Task Name)
 });
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;컴파일&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ gulp sass
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;런타임 중 파일 감시 모드로 실행할 수도 있습니다.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ gulp sass:watch
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;parcel&quot;&gt;Parcel&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;https://parceljs.org/&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;npm이 설치되어있다고 생각하고 작성된 코드입니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;우선 Parcel를 전역으로 설치합니다.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ npm install -g parcel-bundler
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;프로젝트에 Sass 컴파일러(node-sass)를 설치합니다.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ npm install --save-dev node-sass
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;이제 HTML에 &lt;link /&gt;로 Sass 파일만 연결하면 됩니다. 다른 설정은 필요하지 않습니다.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &amp;lt;link rel=&quot;stylesheet&quot; href=&quot;scss/main.scss&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;컴파일&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ parcel index.html
  # 혹은
  $ parcel build index.html
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ul&gt;
      &lt;li&gt;dist/에서 컴파일된 Sass 파일을 볼 수 있고,&lt;br /&gt;
별도의 포트 번호를 설정하지 않았다면 http://localhost:1234에 접속하여 적용 상태를 확인할 수 있습니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    본 포스팅은 HEROPY 님의 영상과 블로그를 보고 공부한 내용을 정리한 것입니다.
    https://heropy.blog/2018/01/31/sass/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Wed, 11 Mar 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/devlog/2020/03/11/sass-03/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/devlog/2020/03/11/sass-03/</guid>
        
        <category>sass</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[Sass/SCSS] Sass와 SCSS는 차이점</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/sass/2020-03-10-sass-02.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;sass와-scss는-차이점&quot;&gt;Sass와 SCSS는 차이점&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Sass(Syntactically Awesome Style Sheets)의 3버전에서 새롭게 등장한 SCSS는 CSS 구문과 완전히 호환되도록 
  새로운 구문을 도입해 만든 Sass의 모든 기능을 지원하는 CSS의 상위집합(Superset) 이다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;SCSS는 CSS와 거의 같은 문법으로 Sass 기능을 지원한다&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;더 쉽고 간단한 차이는 {}(중괄호)와 ;(세미콜론)의 유무 이다&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;Sass:&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  .list
    width: 100px
    float: left
    li
      color: red
      background: url(&quot;./image.jpg&quot;)
      &amp;amp;:last-child
        margin-right: -10px
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;

        &lt;ul&gt;
          &lt;li&gt;Sass는 선택자의 유효범위를 ‘들여쓰기’로 구분&lt;/li&gt;
        &lt;/ul&gt;

        &lt;p&gt;&lt;br /&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;SCSS:&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  .list {
    width: 100px;
    float: left;
    li {
      color: red;
      background: url(&quot;./image.jpg&quot;);
      &amp;amp;:last-child {
        margin-right: -10px;
      }
    }
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;

        &lt;ul&gt;
          &lt;li&gt;SCSS는 {}로 범위를 구분&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Sass 와 SCSS의 차는 Mixins(‘믹스인’은 재사용 가능한 기능을 만드는 방식의 의미) 사용 방식에도 차이가 있다.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;Sass:&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  =border-radius($radius)
    -webkit-border-radius: $radius
    -moz-border-radius:    $radius
    -ms-border-radius:     $radius
    border-radius:         $radius
        
  .box
    +border-radius(10px)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;

        &lt;ul&gt;
          &lt;li&gt;Sass는 =와 + 기호로 Mixins 기능을 사용&lt;/li&gt;
        &lt;/ul&gt;

        &lt;p&gt;&lt;br /&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;SCSS:&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; @mixin border-radius($radius) {
   -webkit-border-radius: $radius;
      -moz-border-radius: $radius;
       -ms-border-radius: $radius;
           border-radius: $radius;
 }
       
 .box { @include border-radius(10px); }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;

        &lt;ul&gt;
          &lt;li&gt;SCSS는 @mixin과 @include로 기능을 사용&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Sass는 좀 더 간결하고 작성하기 편리하며, {}나 ;를 사용하지 않아도 되니 코드가 훨씬 깔끔해짐&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;SCSS는 인라인 코드(한 줄 작성)를 작성할 수 있고, CSS와 유사한 문법을 가지기 때문에 코드 통합이 훨씬 수월&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;장단점이 있기 때문에 회사나 팀에서 원하는 방식을 사용해야 하거나, 개인 취향에 따라서 선택&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;보통의 경우 SCSS를 추천&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    본 포스팅은 HEROPY 님의 영상과 블로그를 보고 공부한 내용을 정리한 것입니다.
    https://heropy.blog/2018/01/31/sass/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Tue, 10 Mar 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/devlog/2020/03/10/sass-02/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/devlog/2020/03/10/sass-02/</guid>
        
        <category>sass</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[Sass/SCSS] CSS Preprocessor(전처리기) 란?</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/sass/2020-03-09-sass-01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;css-preprocessor-란&quot;&gt;CSS Preprocessor 란?&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Sass, Less 등이 있습니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;이 친구들은 CSS 전(예비)처리기 입니다. 보통 CSS Preprocessor 라고 부릅니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;CSS가 동작하기 전에 사용하는 기능으로, 웹에서는 분명 CSS가 동작하지만 우리는 CSS의 불편함을 이런 확장 기능으로 상쇄할 수 있습니다.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  사스는 기초 언어에 힘과 우아함을 더해주는 CSS의 확장이다.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;어떻게-사용할까&quot;&gt;어떻게 사용할까?&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;위에서 언급한 것처럼 웹에서는 CSS만 동작합니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Sass, Less, Stylus 같은 전처리기(이하 ‘전처리기’로 표기)는 직접 동작시킬 수 없습니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;그렇다면 어떻게 사용할 수 있을까?&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;CSS는 불편하니 일단 배제하고 우선 전처리기로 작성(코딩)합니다.
  전처리기는 CSS 문법과 굉장히 유사하지만 선택자의 중첩(Nesting)이나 조건문, 반복문, 다양한 단위(Unit)의 연산 등… 
  표준 CSS 보다 훨씬 많은 기능을 사용해서 편리하게 작성할 수 있습니다.
  단, 웹에서는 직접 동작하지 않으니 이렇게 작성한 전처리기를 웹에서 동작 가능한 표준의 CSS로 컴파일(Compile)합니다.
  전처리기로 작성하고 CSS로 컴파일해서 동작시키는 거죠.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;왜-sassscss인가&quot;&gt;왜 Sass(SCSS)인가?&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;보통 언급되는 전처리기 3대장으로 Less, Sass(SCSS), Stylus가 있습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Less&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;Less에서 제공하는 기능의 한계.&lt;/li&gt;
      &lt;li&gt;기능이 Sass나 Stylus에는 있음.&lt;/li&gt;
      &lt;li&gt;하지만 진입장벽이 낮기 때문에 접하기 쉽고 그만큼 많이 사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Stylus&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;깔끔하고 좀 더 세련됐으며 기능&lt;/li&gt;
      &lt;li&gt;하지만 덜 사용되며(덜 유명하며) 비교적 늦게 나왔기 때문에 성숙도는 떨어짐&lt;/li&gt;
      &lt;li&gt;그 때문인지 컴파일 후 사소한 버그가 몇몇&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Sass(SCSS)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;위에 언급한 두 가지 전처리기의 장점을 모두 가지고있음.&lt;/li&gt;
      &lt;li&gt;문법은 Sass가 Stylus와 비슷하고, SCSS는 Less와 비슷하며, Sass와 SCSS는 하나의 컴파일러로 모두 컴파일 가능&lt;/li&gt;
      &lt;li&gt;2006년부터 시작하여 가장 오래된 CSS 확장 언어이며 그만큼 높은 성숙도와 많은 커뮤니티를 가지고 있고 기능도 훌륭&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    본 포스팅은 HEROPY 님의 영상과 블로그를 보고 공부한 내용을 정리한 것입니다.
    https://heropy.blog/2018/01/31/sass/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Mon, 09 Mar 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/devlog/2020/03/09/sass-01/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/devlog/2020/03/09/sass-01/</guid>
        
        <category>sass</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[MySQL/MariaDB] REPLACE 사용법(콤마제거, 치환하기)</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/mysql/2020-03-08-tip-mysql-01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;mysql-replace-콤마제거-치환하기&quot;&gt;MySQL REPLACE (콤마제거, 치환하기)&lt;/h1&gt;
&lt;h3 id=&quot;how-to-using-select-replace-with-mysql&quot;&gt;How to Using SELECT REPLACE with MySQL&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;SELECT문 사용시 컬럼에 콤마(,) 또는 치환해야할 문자가 있을 때 콤마를 제거하거나 문자를 치환해서 출력 하기 위해 사용&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;1-select-시-그냥-replace-만을-사용해서-콤마를-제거하는-경우&quot;&gt;1. SELECT 시 그냥 REPLACE 만을 사용해서 콤마를 제거하는 경우&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    ﻿SELECT ﻿REPLACE(컬럼, '컬럼 안에 바꿔야할 문자','바꿔서 출력될 문자') FROM 테이블 
    
    ﻿﻿SELECT ﻿REPLACE(price, ',','') FROM FOODS
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;푸드 테이블의 price컬럼에서 콤마를 제거해서 출력하라&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h2 id=&quot;2-select-시--replace를사용해서-콤마를-제거-후-sum-을-하는-경우&quot;&gt;2. SELECT 시  REPLACE를사용해서 콤마를 제거 후 SUM 을 하는 경우&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    ﻿SELECT SUM(REPLACE(price, ',','')) AS totalPrice FROM FOODS 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;푸드 테이블의 price컬럼에서 콤마를 제거하고 price 컬럼을 모두 더해서 tatalPrice라는 이름으로 출력하라&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 08 Mar 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/tip/2020/03/08/tip-mysql-01/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/tip/2020/03/08/tip-mysql-01/</guid>
        
        <category>mysql</category>
        
        
        <category>tip</category>
        
      </item>
    
      <item>
        <title>[JAVA] Java에서 백분율(퍼센트) 계산하기</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/java/2020-03-07-tip-java-01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;java에서-백분율퍼센트-계산하기&quot;&gt;Java에서 백분율(퍼센트) 계산하기&lt;/h1&gt;
&lt;h3 id=&quot;how-to-calculate-percentage-in-java&quot;&gt;How to calculate percentage in java&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;1-전체값에서-일부값은-몇-퍼센트&quot;&gt;1. 전체값에서 일부값은 몇 퍼센트?&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;일부값 / 전체값 *100&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// 10은 100에서 몇 퍼센트?
System.out.format(&quot;%.2f%%%n&quot;, 10.0 / 100.0 * 100.0);
// 출력 결과: 10.00%


// 33은 100에서 몇 퍼센트?
int x = 33;
int y = 100;
System.out.println( (double) x / (double) y * 100.0 + &quot;%&quot;);
// 출력 결과: 33.0%
// 정수의 경우에는 (double) 로 실수화시키지 않으면
// 0.0 이라는 엉뚱한 값이 나옴
// 맨 끝의 + &quot;%&quot; 이 부분은 공식의 일부가 아니라 퍼센트 기호 출력


// 105는 300의 몇퍼센트?
double x2 = 105.0;
double y2 = 300.0;
System.out.format(&quot;%.2f%%%n&quot;, x2 / y2 * 100.0);
// 출력 결과: 35.00%
// 실수형 변수에 값을 넣어두는 것이 좋음


// 한달 봉급 156만원인 사람이, 음식 값으로 21만원을 쓰면,
// 그 음식값은 한 달 봉급의 몇 퍼센트?
System.out.format(&quot;%.2f%%%n&quot;, 210000.0 / 1560000.0 * 100.0);
// 출력 결과: 13.46%


// 만약 봉급 156만원으로 모두 먹는 데 사용했다면
// 100% 가 나와야겠지요.
System.out.format(&quot;%.2f%%%n&quot;, 1560000.0 / 1560000.0 * 100.0);
// 출력 결과: 100.00%

// 만약 아무것도 먹지 않았면 0% 가 나와야합니다.
System.out.format(&quot;%.2f%%%n&quot;, 0.0 / 1560000.0 * 100.0);
// 출력 결과: 0.00%
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h3 id=&quot;1-전체값의-몇-퍼센트는-얼마&quot;&gt;1. 전체값의 몇 퍼센트는 얼마?&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;전체값 * 퍼센트 /100&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// 100의 10퍼센트는 얼마?
System.out.format(&quot;%.2f%n&quot;, 100.0 * 10.0 / 100.0);
// 출력 결과: 10.00


// 100의 33퍼센트는 얼마?
System.out.format(&quot;%.2f%n&quot;, 100.0 * 33.0 / 100.0);
// 출력 결과: 33.00


// 300의 35퍼센트는 얼마?
System.out.format(&quot;%.2f%n&quot;, 300.0 * 35.0 / 100.0);
// 출력 결과: 105.00


// 156만원의 13.46퍼센트는 얼마?
System.out.format(&quot;%.2f%n&quot;, 1560000.0 * 13.46 / 100.0);
// 출력 결과 (21만원에 가까운 값): 209976.00


// 156만원의 100퍼센트는 얼마?
System.out.format(&quot;%.2f%n&quot;, 1560000.0 * 100.0 / 100.0);
// 출력 결과: 1560000.00


// 156만원의 0퍼센트는 얼마?
System.out.format(&quot;%.2f%n&quot;, 1560000.0 * 0.0 / 100.0);
// 출력 결과: 0.00
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sat, 07 Mar 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/tip/2020/03/07/tip-java-01/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/tip/2020/03/07/tip-java-01/</guid>
        
        <category>java</category>
        
        
        <category>tip</category>
        
      </item>
    
      <item>
        <title>[유닉스] vi 환경 설정</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-06-unix-15.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;환경설정-명령어&quot;&gt;환경설정 명령어&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;1-파일-읽어오기여러-파일-편집하기&quot;&gt;1. 파일 읽어오기/여러 파일 편집하기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;파일 중간에 다른 파일 내용 삽입하거나 작업 중이던 파일을 종료하고 다른 파일로 작업 전환하기 위한 명령키들은 마지막 행 모드에서 실행&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-06-unix-15-01.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;파일 읽어들이기&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;:r 파일명&lt;/li&gt;
      &lt;li&gt;현재 작업 중인 파일에서 다른 파일을 읽어들이면 현재 커서 위치 다음 행에 삽입됨&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;다른 파일 편집하기&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;:e 파일명&lt;/li&gt;
      &lt;li&gt;현재 작업 중인 파일을 종료하고 다른 파일을 편집하려고 할 때 사용&lt;/li&gt;
      &lt;li&gt;:w 명령을 이용하여 현재 작업 중인 파일 저장 후 실행&lt;/li&gt;
      &lt;li&gt;작업 중이 내용 저장하지 않고 다른 파일 편집하려고 할 때는 “:e! 파일명“ 입력&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;여러 파일 편집하기&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;vi 시작할 때 파일명 여러 개 지정&lt;/li&gt;
      &lt;li&gt;지정한 순서대로 파일이 열림&lt;/li&gt;
      &lt;li&gt;편집 후 다음 파일로 이동시 :n 명령키 사용&lt;/li&gt;
      &lt;li&gt;다시 처음 파일로 이동하려면 “:e 파일명” 사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;2-vi에서-쉘-명령-사용하기&quot;&gt;2. vi에서 쉘 명령 사용하기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;vi 작업 도중 디렉토리의 파일 목록 확인, 프로그램 컴파일 등 쉘 명령 실행할 경우&lt;/li&gt;
  &lt;li&gt;vi를 종료하지 않고 쉘 명령 실행 가능&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-06-unix-15-02.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;:! 기능 이용&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;하나의 명령만 실행할 경우 가장 간단한 방법&lt;/li&gt;
      &lt;li&gt;형식 : :! 쉘 명령&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;사용 예 : :! date&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  ~
  ~
  :! date
  2015. 06. 10. (수) 16:24:06 KST
  Press ENTER or type command to continue
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;:sh 기능 이용&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;쉘 명령 여러 개를 실행할 경우&lt;/li&gt;
      &lt;li&gt;vi를 잠시 빠져나가 작업 수행 후 돌아옴&lt;/li&gt;
      &lt;li&gt;vi로 다시 돌아오려면 exit 입력&lt;/li&gt;
      &lt;li&gt;형식 : :sh&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;3-기타-명령&quot;&gt;3. 기타 명령&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-06-unix-15-03.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;화면 다시 출력&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;vi 작업 중 시스템 메시지 출력 등 화면이 정상이 아닐 때 Ctrl+L 명령키 입력하면 메시지들 사라지고 원래 작업 중인 내용만 남음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;행 연결&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;J(대문자 j) 키 사용&lt;/li&gt;
      &lt;li&gt;커서가 위치한 행과 다음 행을 하나의 행으로 만들어줌&lt;/li&gt;
      &lt;li&gt;현재 커서가 unix의 ‘x’위치에 있고, 현재 위치에서 J 명령키 입력&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-06-unix-15-04.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;이전 명령 반복&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;.(점) 명령키&lt;/li&gt;
      &lt;li&gt;바로 앞에 했던 명령을 반복적으로 수행&lt;/li&gt;
      &lt;li&gt;현재 커서가 editor의 ‘e’에 있고, 현재 위치에서 . 명령키 입력&lt;/li&gt;
      &lt;li&gt;바로 전 명령이 J 명령이었으므로 같은 명령을 반복&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-06-unix-15-05.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;대소문자 전환&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;~(틸드) 명령키&lt;/li&gt;
      &lt;li&gt;커서가 위치한 글자를 소문자는 대문자로, 대문자는 소문자로 바꿈&lt;/li&gt;
      &lt;li&gt;현재 커서가 test의 ‘t’에 있고, 현재 위치에서 ~ 명령키 입력&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-06-unix-15-06.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;4-읽기-전용-편집&quot;&gt;4. 읽기 전용 편집&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;파일을 읽기 전용으로 불러와 원본의 손상을 막을 수 있는 기능&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;vi –R 옵션 사용&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ vi –R hosts
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;view 명령 사용&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ view hosts
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;5-데이터-복구&quot;&gt;5. 데이터 복구&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;컴퓨터를 사용하다 갑자기 정전이 되거나 실수로 전원 코드를 뽑게 되어 시스템이 갑자가 다운되었을 때&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;vi 에디터는 실제 파일을 편집하는게 아니라 편집 버퍼에 편집 내용이 복사됨&lt;/li&gt;
      &lt;li&gt;시스템이 갑자기 다운되어도 편집 버퍼는 자동 저장&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;편집하던 파일 복구 방법&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;vi –r [파일 명] : 파일명은 생략 가능, 생략하면 되살릴 수 있는 모든 파일을 보여줌&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ vi –r text
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;vi-환경-설정&quot;&gt;vi 환경 설정&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;1-vi-환경-설정&quot;&gt;1. vi 환경 설정&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;vi 사용할 때 사용자 자신에게 맞는 환경 설정&lt;/li&gt;
  &lt;li&gt;마지막 행 모드에서 실행&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-06-unix-15-07.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/assets/img/unix/2020-03-06-unix-15-08.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;2-행-번호-표시&quot;&gt;2. 행 번호 표시&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;:set nu 명령&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-06-unix-15-09.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;행 번호는 사용자의 편의를 위해 보이는 것, 파일에 저장되지 않음&lt;/li&gt;
      &lt;li&gt;행 번호 없애려면 :set nonu 명령키 사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;3-특수-문자-표시&quot;&gt;3. 특수 문자 표시&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;:set list 명령&lt;/li&gt;
  &lt;li&gt;vi에서 보이지 않는 행의 끝이나 탭 같은 특수 문자들을 보여줌&lt;/li&gt;
  &lt;li&gt;한글(HWP)의 조판 부호 보기 기능과 비슷&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;4-현재-모드-표시&quot;&gt;4. 현재 모드 표시&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;:set showmode 명령&lt;/li&gt;
  &lt;li&gt;vi 작업 도중 명령 모드인지 입력 모드인지 알고자 할 때&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;명령 모드인 경우 아무 표시 없고, 입력 모드인 경우 화면 하단에 “–INSERT–”라고 표시됨&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  ~
  ~
  --INSERT--
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;5-환경-설정-값-표시&quot;&gt;5. 환경 설정 값 표시&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;:set 명령&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;현재 사용 중인 vi의 환경 설정 상태를 보여줌&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  ~
  ~
  :set
  --- Options ---
  background=dark scroll=14
  fileencodings=ucs-bom,utf-8,default,latin1
  Press ENTER or type command to continue
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;6-모든-환경-변수-표시&quot;&gt;6. 모든 환경 변수 표시&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;:set all 명령&lt;/li&gt;
  &lt;li&gt;vi 환경 설정에 사용되는 모든 환경 변수와 현재 설정 값을 보여줌&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;7-관련-파일-exrc&quot;&gt;7. 관련 파일 .exrc&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;vi 편집기의 환경 설정을 등록하여 실행시 계속적으로 지정한 설정을 이용하도록 해주는 파일&lt;/li&gt;
  &lt;li&gt;set 명령과 환경 변수를 이용하여 홈 디렉토리에 .exrc (또는 .vimrc) 안에 적어 놓으면 vi가 실행될 때 기본으로
설정되어 시작하게 됨&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Fri, 06 Mar 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/devlog/2020/03/06/unix-15/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/devlog/2020/03/06/unix-15/</guid>
        
        <category>unix</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[유닉스] 편집기 (vi) - 내용 수정 및 삭제</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-06-unix-14.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;내용-수정-및-삭제&quot;&gt;내용 수정 및 삭제&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;1-내용-수정하기&quot;&gt;1. 내용 수정하기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;한 글자만 수정, 단어별로 수정, 수정할 글자 수 지정해서 수정&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-06-unix-14-01.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;2-내용-삭제취소하기&quot;&gt;2. 내용 삭제/취소하기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;입력 모드에서 입력 중에 틀린 글자 삭제할 때는 Backspace 키나 Delete 키를 이용하면 됨&lt;/li&gt;
  &lt;li&gt;명령 모드에서는 문자를 삭제하거나 행을 삭제하기 위해 별도의 명령키 존재&lt;/li&gt;
  &lt;li&gt;삭제할 문자 수나 행 수를 지정하려면 명령키 앞에 숫자를 지정&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-06-unix-14-02.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;편집-기능&quot;&gt;편집 기능&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;1-복사하기-붙이기-잘라내기&quot;&gt;1. 복사하기, 붙이기, 잘라내기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;소문자 yy 명령키 : 해당 행을 복사&lt;/li&gt;
  &lt;li&gt;커서를 원하는 위치로 이동 후 p 명령키 : 붙이기&lt;/li&gt;
  &lt;li&gt;dd 명령키로 행 삭제 후 p 명령키 입력하면 “잘라내서 붙이기”&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-06-unix-14-03.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;커서 위치에서 1행과 2행 복사하기&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  Hello, World!
  ============
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;1행에서 2yy 명령키 입력 후 2행에서 p 명령키 입력&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  Hello, World!
  ============
  Hello, World!
  ============
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;2-버퍼의-사용&quot;&gt;2. 버퍼의 사용&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;버퍼 : 복사하거나 잘라낸 내용을 저장해두는 임시 저장 공간&lt;/li&gt;
  &lt;li&gt;윈도우의 클립보드와 같은 기능&lt;/li&gt;
  &lt;li&gt;yy 명령키를 사용해 복사할 경우 복사된 내용은 버퍼에 저장&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;언네임드(unnamed) 버퍼&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;이름 붙이지 않은 버퍼&lt;/li&gt;
      &lt;li&gt;한 번에 하나의 내용만 저장&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;네임드(named) 버퍼&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;이름 붙인 버퍼&lt;/li&gt;
      &lt;li&gt;각기 다른 이름을 붙인 버퍼에 별도로 저장할 수 있는 내용을 모두 저장하고 사용 가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;네임드 버퍼 사용&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;버퍼 이름 붙이기 : “(따옴표) + 문자, 또는 ”+숫자(숫자 버퍼라고도 함)&lt;/li&gt;
      &lt;li&gt;네임드 버퍼 : “a, ”b, “c, ……, ”z&lt;/li&gt;
      &lt;li&gt;숫자 버퍼 : “1, ”2, “3, …… ”9&lt;/li&gt;
      &lt;li&gt;네임드 버퍼에 커서 위치한 행 저장 : “ayy, 붙이기 : ”ap&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;네임드 버퍼 사용하여 1행과 2행을 따로 복사하여 붙이기&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  Hello, World!
  ============
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ul&gt;
      &lt;li&gt;커서를 1행에 위치하고 “ayy 입력&lt;/li&gt;
      &lt;li&gt;커서를 2행으로 이동 후 “byy 입력&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;2행 다음에 b 버퍼 먼저 붙이기 하려면, “bp, ”ap를 차례로 입력&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  Hello, World!
  ============
  ============
  Hello, World!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;3-마지막-행-모드에서-복사하기와-잘라내기&quot;&gt;3. 마지막 행 모드에서 복사하기와 잘라내기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;마지막 행 모드에서 행을 복사하고 잘라내기 할 때는 범위를 지정한 후 수행&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;범위 지정하기&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;vi에서 범위 지정은 마지막 행 모드에서만 가능&lt;/li&gt;
      &lt;li&gt;행번호와 특수 문자 사용&lt;/li&gt;
      &lt;li&gt;특수문자 : 현재 커서가 있는 행을 나타내는 .(마침표), 마지막 행을 나타내는 $, %&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-06-unix-14-04.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;
&lt;img src=&quot;/assets/img/unix/2020-03-06-unix-14-05.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;복사하기/잘라내기&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;:은 마지막 행 모드로 이동하기 위한 기호&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-06-unix-14-06.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;4-검색하기&quot;&gt;4. 검색하기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;vi에서 특정 단어를 검색하거나 검색한 단어를 다른 단어로 바꾸기 위한 명령은 마지막 행 모드에서 제공&lt;/li&gt;
  &lt;li&gt;검색하기 위해 마지막 행 모드로 가려면 “/”나 “?”를 입력&lt;/li&gt;
  &lt;li&gt;“/”는 커서의 위치에서 아래 방향으로 검색&lt;/li&gt;
  &lt;li&gt;“?”는 커서의 위치에서 위 방향으로 검색&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-06-unix-14-07.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;5-바꾸기&quot;&gt;5. 바꾸기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;기존의 문자열을 다른 문자열로 바꾸려면 :를 입력해 마지막 행 모드로 이동&lt;/li&gt;
  &lt;li&gt;바꾸기 명령은 파일 전체를 대상으로 할 수도 있고 특정 범위만 지정해 실행할 수도 있음&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-06-unix-14-08.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;문서 전체에서 and를 or로 바꾸기 예제&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;and 패턴을 찾아 or로 바꿀 때 수정할지 여부를 묻는 명령 사용&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  :%s/and/or/gc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;and를 or로 바꿀 때마다 아래와 같은 질문을 함&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  Starry, starry night
  Paint your palette blue and gray
  Look out on a summer’s day
  With eyes that know the darkness in my soul
  Shadows on the hills
  Sketch the trees and the daffodils;
  Catch the breeze and the winter chills
  In colors on the snowy linen land.
  ~
  replace with or(y/n/a/q/l/^E/^Y)?
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;패턴에 대한 옵션의 의미&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-06-unix-14-09.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

</description>
        <pubDate>Fri, 06 Mar 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/devlog/2020/03/06/unix-14/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/devlog/2020/03/06/unix-14/</guid>
        
        <category>unix</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[유닉스] 편집기 (vi)</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-06-unix-13.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;유닉스-편집기의-종류&quot;&gt;유닉스 편집기의 종류&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;1-편집기의-종류&quot;&gt;1. 편집기의 종류&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;행 단위 편집기와 화면 단위 편집기로 구분&lt;/li&gt;
  &lt;li&gt;행 단위 편집기 : 한 번에 한 행씩만 작성하거나 수정&lt;/li&gt;
  &lt;li&gt;화면 단위 편집기 : 전체 내용을 화면 단위로 보면서 커서를 이동하며 작업&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-06-unix-13-01.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;ed&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;유닉스 초기의 표준 편집기&lt;/li&gt;
      &lt;li&gt;사용이 불편해 지금은 거의 사용하지 않음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;ex&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;ed의 발전된 버전&lt;/li&gt;
      &lt;li&gt;행 단위 편집기로 시작하여 화면 단위 편집기로 발전&lt;/li&gt;
      &lt;li&gt;현재는 vi에 내장되어 명령행 명령 모드를 제공&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;sed&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;비대화식 행 단위 편집기&lt;/li&gt;
      &lt;li&gt;조건에 맞는 행에 지정한 편집 명령을 실행, 결과를 화면에 출력&lt;/li&gt;
      &lt;li&gt;크기가 큰 파일에 간단한 편집을 반복 수행할 때 많이 사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;emacs&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;화면 단위 편집기&lt;/li&gt;
      &lt;li&gt;종류가 다양, GNU 이맥스가 유명&lt;/li&gt;
      &lt;li&gt;기본 설치가 되지 않아 별도로 설치해야 함&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;가장 큰 장점 : 파일 편집하면서, 유닉스의 여러 기능들을 그냥 사용할 수 있음&lt;/p&gt;

        &lt;p&gt;예) 편집 도중 이메일 주고받을 수 있고, 쉘 실행, 파일 복사, 삭제 등 작업 가능&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;vi&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;유닉스에서 기본으로 제공되는 화면 편집기&lt;/li&gt;
      &lt;li&gt;ex 편집기의 명령을 그대로 사용 가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;2-모드형과-비모드형-편집기&quot;&gt;2. 모드형과 비모드형 편집기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;윈도우 시스템에서 사용하는 한글 워드는 비모드형 편집기&lt;/li&gt;
  &lt;li&gt;vi는 모드형 편집기&lt;/li&gt;
  &lt;li&gt;비모드형에서 a는 항상 a라는 글자를 의미&lt;/li&gt;
  &lt;li&gt;모드형에서 a는 글자 자체가 되기도 하고 명령을 나타내는 키가 되기도 함&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;vi-동작-모드&quot;&gt;vi 동작 모드&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;1-vi-동작-구조&quot;&gt;1. vi 동작 구조&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;vi에서 편집한 파일은 저장할 파일을 지정하기 전에 하드디스크에 저장되지 않고, 버퍼에만 존재&lt;/li&gt;
  &lt;li&gt;사용자가 파일 저장 명령을 주어야 하드디스크에 저장됨&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-06-unix-13-02.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;2-vi-동작-모드&quot;&gt;2. vi 동작 모드&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;입력 모드 : 실제로 내용을 입력할 수 있는 모드&lt;/li&gt;
  &lt;li&gt;명령 모드, 마지막 행 모드(명령 모드에 포함시키기도 함) : 글자와 행의 삭제, 검색, 저장 등의 기능 수행&lt;/li&gt;
  &lt;li&gt;vi를 시작하면 바로 명령 모드&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-06-unix-13-03.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;vi 명령의 분류&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;원하는 위치로 이동하는 명령&lt;/li&gt;
      &lt;li&gt;입력 모드로 전환하는 명령&lt;/li&gt;
      &lt;li&gt;수정 혹은 삭제 명령&lt;/li&gt;
      &lt;li&gt;복사 및 붙이기&lt;/li&gt;
      &lt;li&gt;기타 명령&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;3-vi-시작과-종료&quot;&gt;3. vi 시작과 종료&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;vi의 기본 기능&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;지정한 파일을 편집&lt;/li&gt;
      &lt;li&gt;파일명을 지정하지 않으면 빈 파일이 열리고 파일명은 저장할 때 지정 가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;형식 : vi [파일명…]&lt;/li&gt;
  &lt;li&gt;사용 예 : vi hello.c&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;4-vi-시작하기&quot;&gt;4. vi 시작하기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;파일명을 지정하거나 지정하지 않을 수도 있음&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-06-unix-13-04.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;5-vi-종료하고-파일-저장하기&quot;&gt;5. vi 종료하고 파일 저장하기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;명령 모드에서 파일 저장과 종료를 동시 수행 : ZZ(Shift+zz), 파일 저장 후 바로 종료함&lt;/li&gt;
  &lt;li&gt;다른 명령키들은 마지막 행 모드에서 실행할 수 있음&lt;/li&gt;
  &lt;li&gt;마지막 행 모드로 가려면 콜론(“:”) 키를 먼저 입력&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-06-unix-13-05.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;6-입력-모드로의-전환&quot;&gt;6. 입력 모드로의 전환&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;vi는 명령 모드에서 시작&lt;/li&gt;
  &lt;li&gt;내용을 입력하거나 편집하려면 명령 모드에서 입력 모드로 전환&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-06-unix-13-06.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;명령키를 사용한 입력 모드 전환&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;명령 모드에서 i 명령키를 입력하면 내용 입력 가능&lt;/li&gt;
      &lt;li&gt;명령 모드에서 o 명령키를 입력하면 현재 커서 위치 다음 행에 글자 입력 가능&lt;/li&gt;
      &lt;li&gt;명령 모드에서 a 명령키를 입력하면 현재 커서 위치 오른쪽에 글자 입력 가능&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;내용 모두 입력한 뒤 명령 모드로 돌아가려면 Esc 키를 누름&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  vi Insert Mode Test
  unix linux vi-editor
  ~
  ~
  ~
  ~
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;7-커서-이동&quot;&gt;7. 커서 이동&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;vi에서 커서 이동은 키보드를 이용&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-06-unix-13-07.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/assets/img/unix/2020-03-06-unix-13-08.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;8-화면-이동&quot;&gt;8. 화면 이동&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;파일 크기가 터미널 화면 크기보다 클 경우 화면 이동&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;화면 이동 명령키&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;Ctrl + f 명령키는 현재 보이는 부분의 아래 부분으로 한 화면 이동&lt;/li&gt;
      &lt;li&gt;Ctrl + b 명령키는 현재 보이는 부분의 윗부분으로 한 화면 이동&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-06-unix-13-09.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;마지막 행 모드에서 커서 이동&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;:을 입력해 마지막 행으로 전환한 뒤 이동하려는 행 번호 입력&lt;/li&gt;
      &lt;li&gt;행 번호 대신 $를 입력하면 파일의 마지막 행으로 이동&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-03-06-unix-13-10.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

</description>
        <pubDate>Fri, 06 Mar 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/devlog/2020/03/06/unix-13/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/devlog/2020/03/06/unix-13/</guid>
        
        <category>unix</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[Database] Windows(윈도우)에 MySQL 설치방법</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-15.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;dbms&quot;&gt;DBMS&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;1-대표적인-dbms&quot;&gt;1. 대표적인 DBMS&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-15-01.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;2-mysql&quot;&gt;2. MySQL&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;공개 소프트웨어 제공
    &lt;ul&gt;
      &lt;li&gt;Community Edition – GPL (General Public License)&lt;/li&gt;
      &lt;li&gt;상업적인 목적으로 사용시 구매하여야 함&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;기종과 운영체제에 관계없이 사용 가능&lt;/li&gt;
  &lt;li&gt;설치가 쉽고 사용하기 쉬워서 초보자도 빠른 시일 내에 사용법을 익힐 수 있다.&lt;/li&gt;
  &lt;li&gt;대용량 처리도 가능&lt;/li&gt;
  &lt;li&gt;처리 속도가 빠름&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;windows윈도우에-mysql-설치&quot;&gt;Windows(윈도우)에 MySQL 설치&lt;/h1&gt;

&lt;h3 id=&quot;mysql-다운로드&quot;&gt;MySQL 다운로드&lt;/h3&gt;

&lt;p&gt;(A) http://www.mysql.com/downloads 다운로드&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-15-02.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;(B) MySQL Community Edition (GPL) 의 Community (GPL) Downloads 선택&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-15-03.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;(C) MySQL Community Server의 DOWNLOAD 선택&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-15-04.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;(D) MySQL Community Server에 대한 온라인 설명서&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-15-05.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;(E) MySQL Community Server의 플랫폼 (Microsoft Windows) 선택&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-15-06.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;(F) Microsoft Windows 용 MySQL Community Server&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-15-07.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;(G) Windows 32bit 용 MySQL Download 시작 화면&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;32bit 와 64bit 운영체제 확인하기&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;“제어판 &amp;gt; 시스템” 의 시스템 종류에 “xx비트 운영 체제”와 같이 표시되어 있음&lt;/li&gt;
      &lt;li&gt;운영체제가 설치된 드라이브의 Windows 폴더에 “Program Files”와 “Program Files (x86)”과 같이 두 개의 폴더가 있는 경우, 64bit 운영체제 임&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;소프트웨어 실행시 주의 점&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;64bit 운영체제에서 32bit용 소프트웨어 실행에 문제 없음&lt;/li&gt;
      &lt;li&gt;32bit 운영체제에서 64bit용 소프트웨어 실행 불가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;MySQL Installer는 32bit 용이지만, 32bit와 64bit MySQL을 설치한다&lt;/li&gt;
  &lt;li&gt;Web Installer는 설치시 인터넷을 통하여 필요한 파일을 다운로드 함.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-15-08.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;(H) 다른 이름으로 저장 &amp;gt; 저장할 폴더 선택하여 저장&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;파일 이름은 “mysql-installer-community-5.6.25.0.msi”으로 저장 됨&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-15-09.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;mysql-설치하기&quot;&gt;MySQL 설치하기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;저장한 “mysql-installer-community-5.6.25.0.msi”를 더블 클릭하여 실행&lt;/p&gt;

    &lt;p&gt;(A) .NET Framework 4.0이 설치되지 않은 시스템&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;오류 메시지 발생하며 설치가 되지 않음&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-15-10.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;웹브라우저에 http://go.Microsoft.com/fwlink/?Linkid=181012 로 이동&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-15-11.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;.NET Framework 4(웹 설치 관리자) 다운로드
        &lt;ul&gt;
          &lt;li&gt;dotNetFx40_Full_setup.exe 저장됨&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-15-12.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;dotNetFx40_Full_setup.exe 실행&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-15-13.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;.NET Framework 4 설치&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-15-14.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;.NET Framework 4 설치 완료
        &lt;ul&gt;
          &lt;li&gt;컴퓨터 다시 시작
  &lt;img src=&quot;/assets/img/database/2020-03-06-database-15-15.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;.NET Framework 4.0이 설치된 시스템&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;“mysql-installer-community-5.6.25.0.msi” 실행&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-15-16.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;
  &lt;img src=&quot;/assets/img/database/2020-03-06-database-15-17.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;MySQL 설치 초기화 작업 화면&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-15-18.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;Setup Type 선택하기
        &lt;ul&gt;
          &lt;li&gt;“Developer Default” 선택&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-15-19.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;필요사항 체크&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-15-20.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;설치
  &lt;img src=&quot;/assets/img/database/2020-03-06-database-15-21.png&quot; alt=&quot;&quot; /&gt;
  &lt;img src=&quot;/assets/img/database/2020-03-06-database-15-22.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;환경 설정&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-15-23.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;MySQL Server - 환경설정 타입과 네트워크 설정&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-15-24.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;MySQL Server - Root 계정 설정 및 사용자 추가&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-15-25.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;MySQL Server - 윈도우 서비스 등록 설정
        &lt;ul&gt;
          &lt;li&gt;서비스명 등록&lt;/li&gt;
          &lt;li&gt;시스템 시작시 MySQL Server 실행 등록&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-15-26.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;MySQL Server - 선택한 환경 설정 적용하기&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-15-27.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;
  &lt;img src=&quot;/assets/img/database/2020-03-06-database-15-28.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;
  &lt;img src=&quot;/assets/img/database/2020-03-06-database-15-29.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;샘플과 예제 – 서버로 연결 설정&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-15-30.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;샘플과 예제 – 서버 환경 설정에 적용하기&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-15-31.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;환경 설정 완료&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-15-32.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;MySQL 설치 완료&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-15-33.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;mysql-테스트&quot;&gt;MySQL 테스트&lt;/h3&gt;

&lt;p&gt;(A) 설치된 폴더 확인하기&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;실치 폴더 : C:\Program Files\MySQL&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;mysql.exe 가 있는 폴더 : C:\Program Files\MySQL\MySQL Server 5.6\bin&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;MySQL의 모든 실행 파일들이 있는 곳&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;(B) MySQL 실행하기&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;명령어 : mysql –uroot –p&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;패스워드 : 설치시 입력한 패스워드&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-15-34.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;(C) 기본 시스템 데이터베이스 확인하기&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;명령어 : show databases;&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-15-35.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;(D) MySQL 종료하기&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;명령어 : quit&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-15-36.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Fri, 06 Mar 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/devlog/2020/03/06/database-15/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/devlog/2020/03/06/database-15/</guid>
        
        <category>database</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[Database] 순수관계연산자 (3/3)</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-14.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;확장-조인-연산&quot;&gt;확장 조인 연산&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;1-외부조인-outer-join&quot;&gt;1. 외부조인 (Outer Join)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;자연조인의 확장된 형태&lt;/li&gt;
  &lt;li&gt;자연조인시 조인에 실패한 투플을 모두 보여주되, 값이 없는 대응 속성에는 NULL값을 채워서 반환&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;모든 속성을 보여주는 기준 릴레이션의 위치에 따른 분류&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-14-01.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;왼쪽 외부조인&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-14-02.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;질의 1 : 주문내역을 고객 기준으로 작성하되 주문내역이 없는 고객도 표시하시오&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-14-03.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-14-04.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;질의 2 : 주문내역을 기준으로 현황을 파악하되 고객릴레이션에 고객아이디가 없는 주문도 모두 표시하시오.&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-14-05.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;질의 3 : 주문내역이 없는 고객과 주문의 고객아이디가 고객 릴레이션에 없는 경우도 모두 표시하시오&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-14-06.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;2-세미조인-semi-join&quot;&gt;2. 세미조인 (Semi Join)&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;자연조인을 한 후 두 릴레이션 중 한쪽 릴레이션의 결과만 반환&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;기호에서 닫힌 쪽 릴레이션의 투플만 반환&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;세미조인 종류&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-14-07.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;질의 1 : 고객중에서 주문 내역이 있는 고객의 정보를 찾으시오.&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-14-08.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;관계대수의-복합사용-예&quot;&gt;관계대수의 복합사용 예&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;관계대수식은 여러 연산자들을 복합하여 사용하는 경우가 많다
    &lt;ul&gt;
      &lt;li&gt;카디션 프로덕트 단독으로 사용하면 의미 없는 결과를 반환 =&amp;gt; 프로젝트과 셀렉트 연산과 조합&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;연산의 우선 순위
    &lt;ul&gt;
      &lt;li&gt;왼쪽에서 오른쪽으로 순차적으로 처리&lt;/li&gt;
      &lt;li&gt;우선 처리하여야 하는 연산은 ( )를 사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;1-셀렉트--프로젝트--집합-연산&quot;&gt;1. 셀렉트 + 프로젝트 + 집합 연산&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;질의 : 서점의 도서 중 가격이 10,000원 이하인 도서이름과 출판사를 찾으시오&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-14-09.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;질의 : 두 서점의 도서 중 가격이 10,000원 이하인 도서이름과 출판사를 찾으시오&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-14-10.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;2-카디션-프로덕트와-조인을-사용한-연산-비교&quot;&gt;2. 카디션 프로덕트와 조인을 사용한 연산 비교&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;질의 : 홍길동 고객의 거래 내역중, 주문번호와 제품코드, 가격을 추출하시오&lt;/p&gt;

    &lt;p&gt;(1) 카디션 프로덕트를 사용한 연산&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-14-11.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-14-12.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;p&gt;(2)조인을 사용한 연산&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-14-13.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-14-14.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Fri, 06 Mar 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/devlog/2020/03/06/database-14/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/devlog/2020/03/06/database-14/</guid>
        
        <category>database</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[Database] 순수관계연산자 (2/3)</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-13.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;조인연산자-개요&quot;&gt;조인연산자 개요&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;1-조인-join-연산자&quot;&gt;1. 조인 (Join) 연산자&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;이용 시기&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;하나의 릴레이션으로 원하는 데이터를 얻을 수 없어 관계가 있는 여러 릴레이션을 함께 사용하여야 하는 경우&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;조인 속성을 이용해 두 릴레이션을 조합하여 하나의 결과 릴레이션 만듬&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;조인 속성 : 두 릴레이션이 공통으로 가지고 있는 속성&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;조인 연산자 : ▷◁&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-13-01.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;결과 릴레이션&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;조인 속성의 값이 같은 투플만 수평으로 결합&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-13-02.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;셀렉트(σ,Sigma)연산 : σ조건식(릴레이션)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;제한 사항
    &lt;ul&gt;
      &lt;li&gt;두 릴레이션의 조인에 참여하는 속성이 동일한 도메인으로 구성되어야 함&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;조인 연산의 종류&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-13-03.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;조인연산자-개요-1&quot;&gt;조인연산자 개요&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;1-세타조인-theta-join-θ-join&quot;&gt;1. 세타조인 (Theta Join, θ Join)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;조인에 참여하는 두 릴레이션의 속성 값을 비교하여 조건을 만족하는 투플만 반환&lt;/li&gt;
  &lt;li&gt;결과 릴레이션의 차수 = 릴레이션R의 차수 + 릴레이션S의 차수&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;표현법&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-13-04.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;θ 는 비교 연산자( &amp;gt;, ≥, &amp;lt;, ≤, =, ≠ )를 의미&lt;/li&gt;
      &lt;li&gt;r은 R의 속성&lt;/li&gt;
      &lt;li&gt;s는 S의 속성&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;2-동등조인-equi-join&quot;&gt;2. 동등조인 (Equi Join)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;세타조인에서 = 연산자를 사용한 조인&lt;/li&gt;
  &lt;li&gt;일반적인 조인연산은 동등조인을 지칭함&lt;/li&gt;
  &lt;li&gt;내부조인 (Inner Join)이라고도 함&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;표현법&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-13-05.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;질의 – 고객과 고객의 주문 사항을 모두 보이시오&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-13-06.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-13-07.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-13-08.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-13-09.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;결과 릴레이션&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;두 릴레이션에서 조인 속성 값이 같은 투플끼리만 수평으로 연결하여 생성된 새로운 투플로 구성&lt;/li&gt;
          &lt;li&gt;결과 릴레이션 차수 = 고객릴레이션 차수 + 주문릴레이션 차수&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;2-동등조인-equi-join-1&quot;&gt;2. 동등조인 (Equi Join)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;동등조인에서 조인에 참여한 속성이 두 번 나오지 않도록 두 번째 속성을 제거한 결과를 반환&lt;/li&gt;
  &lt;li&gt;연산자 : ▷◁N&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;표현법&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-13-10.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;결과 릴레이션의 차수 = 릴레이션R의 차수 + 릴레이션S의 차수 – 1&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;질의 : 고객과 고객의 주문 사항을 모두 보이시오&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-13-11.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/database/2020-03-06-database-13-12.png&quot; alt=&quot;&quot; /&gt;
  &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Fri, 06 Mar 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/devlog/2020/03/06/database-13/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/devlog/2020/03/06/database-13/</guid>
        
        <category>database</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[JSTL] &lt; c:if &gt;, &lt; c:choose &gt; 태그 사용법</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/jstl/2020-03-04-tip-jstl-01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;jstl---태그-사용법&quot;&gt;[JSTL] &lt;c:if&gt;, &lt;c:choose&gt; 태그 사용법&lt;/c:choose&gt;&lt;/c:if&gt;&lt;/h1&gt;
&lt;h3 id=&quot;how-to-use-if-else-option-in-jstl&quot;&gt;How to use if-else option in JSTL&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;조건&quot;&gt;조건&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;jsp 페이지  상단에 아래의 코드를 선언 하고 사용한다.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   &amp;lt;%@ taglib uri=&quot;http://java.sun.com/sjp/jstl/core&quot; prefix=&quot;c&quot; %&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;-cif-&quot;&gt;&amp;lt; c:if &amp;gt;&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;jstl에서 조건에 따른 분기를 처리할 수 있는 태그로 &amp;lt; c:if &amp;gt;와 &amp;lt; c:choose &amp;gt;가 있습니다.&lt;/li&gt;
  &lt;li&gt;태그 - test 속성내의 EL 의 결과가 참이면 실행됩니다. else 구문은 없습니다.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;예제&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   &amp;lt;c:set var=&quot;name&quot; value=&quot;홍길동&quot; /&amp;gt;
      &amp;lt;c:if test=&quot;${nae eq '홍길동'}&quot;&amp;gt;
          &amp;lt;c:out value=&quot;${str}&quot; /&amp;gt;
      &amp;lt;/c:if&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ul&gt;
      &lt;li&gt;위의 코드는 변수 name의 값이 “홍길동” 이면 출력합니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&amp;lt; c:if &amp;gt; 태그에 사용될 수 있는 속성은 다음 세 가지 입니다.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;test : 필수 속성으로 속성값으로 EL 비교식을 가집니다.&lt;/li&gt;
      &lt;li&gt;var : 조건 결과를 저장할 변수를 지정합니다.&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;scope : 조건 결과를 저장할 변수의 저장 scope을 지정합니다.&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &amp;lt;c:if test=&quot;${name eq '홍길동'}&quot; var=&quot;nameHong&quot; scope=&quot;session&quot;&amp;gt;
      ....
  &amp;lt;/c:if&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;

        &lt;ul&gt;
          &lt;li&gt;위 코드는 test 속성의 결과를 nameHong 변수 이름으로 session 영역에 저장합니다. 동일 세션의 다른 페이지에서 결과를 찾을 수 있습니다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;test속성에-사용될-비교-연산자&quot;&gt;test속성에 사용될 비교 연산자&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;eq(==) : 문자열 또는 숫자가 같으면 참입니다. null 또는 빈 문자열 인지도 확인할 수 있습니다.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; ﻿&amp;lt;c:if test=&quot;${name == '홍길동'}&quot;&amp;gt;
      
 &amp;lt;c:if test=&quot;${name eq '홍길동'}&quot;&amp;gt;
      
 &amp;lt;c:if test=&quot;${name == null}&quot;&amp;gt;
      
 &amp;lt;c:if test=&quot;${name eq null}&quot;&amp;gt;
      
 &amp;lt;c:if test=&quot;${num == 5}&quot;&amp;gt;
      
 &amp;lt;c:if test=&quot;${num eq 5}&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;ne(!=) : 문자열 또는 숫자가 다르면 참입니다.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &amp;lt;c:if test=&quot;${name != '홍길동'}&quot;&amp;gt;
       
  &amp;lt;c:if test=&quot;${name ne '홍길동'}&quot;&amp;gt;
       
  &amp;lt;c:if test=&quot;${num != 5}&quot;&amp;gt;
       
  &amp;lt;c:if test=&quot;${num ne 5}&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;empty : List 또는 배열이 비어있거나, 문자열이 null 또는 빈 문자열이면 참을 반환합니다. 숫자 0은 eq(==) 로 비교해야 합니다.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   ﻿&amp;lt;c:if test=&quot;${empty name}&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;not empty : List 또는 배열이 비어 있지 않을 경우, 문자열이 값이 있을 경우 참을 반환합니다.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   ﻿&amp;lt;c:if test=&quot;${not empty name}&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h3 id=&quot;논리연산자&quot;&gt;논리연산자&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;비교연산자의 조합으로 논리 연산을 할 수 있는 논리연산자 입니다.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;and (&amp;amp;&amp;amp;) : 모두 참일때 참이 됩니다.&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  ﻿&amp;lt;c:if test=&quot;${a &amp;gt; b and c &amp;lt; d}&quot;&amp;gt;
            
  &amp;lt;c:if test=&quot;${a &amp;gt; b &amp;amp;&amp;amp; c &amp;lt; d}&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;or (II) : 둘중 하나라도 참이면 참이 됩니다.&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  ﻿&amp;lt;c:if test=&quot;${a &amp;gt; b or c &amp;lt; d}&quot;&amp;gt;
            
  &amp;lt;c:if test=&quot;${a &amp;gt; b || c &amp;lt; d}&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;not (!) : 논리를 반전합니다.&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  ﻿&amp;lt;c:if test=&quot;${not a == ''}&quot;&amp;gt;
            
  &amp;lt;c:if test=&quot;${! a == ''}&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;괄호를 사용하여 논리연산의 우선 순위를 지정할 수 있습니다.&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  ﻿&amp;lt;c:if test=&quot;${a &amp;gt; b &amp;amp;&amp;amp; (b &amp;gt; c || d &amp;lt; e)}&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;-cchoose--태그&quot;&gt;&amp;lt; c:choose &amp;gt; 태그&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&amp;lt; c:choose &amp;gt; 태그는 조건에 따른 여러곳으로 분기 가능하고, 조건이 맞은 것이 없을 경우 기본 분기를 제공할 수 있습니다.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &amp;lt;c:choose&amp;gt;
      &amp;lt;c:when test=&quot;${name eq '김철수'}&quot;&amp;gt; 
          ... 
      &amp;lt;/c:when&amp;gt;
       
      &amp;lt;c:when test=&quot;${name eq '박영희'}&quot;&amp;gt; 
          ... 
      &amp;lt;/c:when&amp;gt;
       
      &amp;lt;c:otherwise&amp;gt; ... &amp;lt;/c:otherwise&amp;gt;
  &amp;lt;/c:choose&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ul&gt;
      &lt;li&gt;위 코드는 이름이 “김철수”, “박영희” 일 경우 분기 하고 그 외의 경우에는 &amp;lt; c:otherwise &amp;gt; 로 분기 합니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;참고 : https://offbyone.tistory.com/367&lt;/p&gt;

</description>
        <pubDate>Wed, 04 Mar 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/tip/2020/03/04/tip-jstl-01/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/tip/2020/03/04/tip-jstl-01/</guid>
        
        <category>jstl</category>
        
        
        <category>tip</category>
        
      </item>
    
      <item>
        <title>[자바스크립트] 절대값 구하기[ Math.abs() ] </title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/javascript/2020-03-01-tip-javascript-06.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;자바스크립트-절대값--mathabs-&quot;&gt;자바스크립트 절대값 [ Math.abs() ]&lt;/h1&gt;
&lt;h3 id=&quot;how-to-use-mathabs-in-javascript&quot;&gt;How to use math.abs in javascript&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;사용법&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;빈 객체, 하나 이상의 요소를 가진 배열, 숫자가 아닌 문자열, undefined나 빈 매개변수를 받으면 NaN을 반환합니다. null, 빈 문자열이나 빈 배열을 제공하면 0을 반환합&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; function difference(a, b) {
   return Math.abs(a - b);
 }
    
 console.log(difference(3, 5));
 // expected output: 2
    
 console.log(difference(5, 3));
 // expected output: 2
    
 console.log(difference(1.23456, 7.89012));
 // expected output: 6.6555599999999995
    
    
    
 Math.abs('-1');     // 1
 Math.abs(-2);       // 2
 Math.abs(null);     // 0
 Math.abs('');       // 0
 Math.abs([]);       // 0
 Math.abs([2]);      // 2
 Math.abs([1,2]);    // NaN
 Math.abs({});       // NaN
 Math.abs('string'); // NaN
 Math.abs();         // NaN
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sun, 01 Mar 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/tip/2020/03/01/tip-javascript-06/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/tip/2020/03/01/tip-javascript-06/</guid>
        
        <category>javascript</category>
        
        
        <category>tip</category>
        
      </item>
    
      <item>
        <title>[자바스크립트] 문자열 길이(문자열 수) 확인</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/javascript/2020-03-01-tip-javascript-05.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;자바스크립트-문자열-길이문자열-수-확인&quot;&gt;자바스크립트 문자열 길이(문자열 수) 확인&lt;/h1&gt;
&lt;h3 id=&quot;how-to-check-string-length-in-javascript&quot;&gt;How to check String length in JavaScript&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    // 정말 단순이 변수에 담긴 문자의 길이를 알고 싶을 뿐.
    // length 함수를 사용하면 된다.
    
    let str = &quot;이렇게 쉬운걸 왜 몰랐을까 나는 똥멍청이 입니다.&quot;;
    let testString = str.length;
    console.log(testString);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Sun, 01 Mar 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/tip/2020/03/01/tip-javascript-05/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/tip/2020/03/01/tip-javascript-05/</guid>
        
        <category>javascript</category>
        
        
        <category>tip</category>
        
      </item>
    
      <item>
        <title>[유닉스] 링크, 수정 시각 변경</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-02-29-unix-12.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;파일-링크&quot;&gt;파일 링크&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;1-ln-명령&quot;&gt;1. ln 명령&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;파일의 링크를 생성&lt;/li&gt;
  &lt;li&gt;형식 : ln [옵션] 원본파일명 링크파일명&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;옵션&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;-s : 심볼릭 링크 파일 생성&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;사용 예 : ln test lntest, ln –s test lntest&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;2-하드-링크&quot;&gt;2. 하드 링크&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;하나의 파일에 둘 이상의 다른 이름을 붙일 수 있음&lt;/li&gt;
  &lt;li&gt;파일에 붙인 이름을 하드 링크, 이름이 붙여진 파일을 하드 링크 파일&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;예제&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cat &amp;gt; ln.txt
  This is the first ln test.
  ^D
  $ ls –l ln.txt
  -rw--r--r-- 1 ksshin ksshin 27 6월 12 16:56 ln.txt
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ul&gt;
      &lt;li&gt;파일의 종류는 일반 파일&lt;/li&gt;
      &lt;li&gt;하드 링크 수는 1&lt;/li&gt;
      &lt;li&gt;원본 파일이 한 개이고 파일 이름의 개수가 1이므로 하드 링크 수가 1&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;3-하드-링크-파일&quot;&gt;3. 하드 링크 파일&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;ln 명령 사용하여 기존 파일에 새로운 이름 부여&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ ln ln.txt ln.hd
  $ ls –l ln.*
  -rw--r--r-- 2 ksshin ksshin 27 6월 12 16:56 ln.hd
  -rw--r--r-- 2 ksshin ksshin 27 6월 12 16:56 ln.txt
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ul&gt;
      &lt;li&gt;두 파일 모두 하드 링크 수가 2&lt;/li&gt;
      &lt;li&gt;하나의 파일에 두 개의 이름이 붙여졌으므로 링크 수 증가&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;ln.txt와 ln.hd 파일이 동일한 파일임을 확인 (파일 내용으로 확인)&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cat ln.txt
  This is the first ln test.
  $ cat ln.hd
  This is the first ln test.
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;4-하드-링크와-파일-복사의-차이&quot;&gt;4. 하드 링크와 파일 복사의 차이&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;파일을 복사해도 내용은 같지만 다른 파일임&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;같은 파일인지 알 수 있는 방법은 inode를 확인하는 것&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;하드 링크의 경우 inode 값이 같음&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;ls –i 옵션으로 inode 확인 가능&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ ls –i ln*
  133938 ln.hd 133938 ln.txt
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;파일을 복사한 경우 inode 값이 다름&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;파일 복사한 경우의 하드 링크 수와 inode 값 확인&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cp ln.txt ln1.txt
  $ ls –l ln*
  -rw--r--r-- 1 ksshin ksshin 27 6월 12 17:07 ln1.txt
  -rw--r--r-- 2 ksshin ksshin 27 6월 12 16:56 ln.hd
  -rw--r--r-- 2 ksshin ksshin 27 6월 12 16:56 ln.txt
  $ ls –i ln*
  134032 ln1.txt 133938 ln.hd 133938 ln.txt
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;5-하드-링크-파일과-원본-파일의-변경&quot;&gt;5. 하드 링크 파일과 원본 파일의 변경&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;ln.hd 파일의 내용을 변경하면 ln.txt의 내용도 같이 변경됨&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ ls –i ln.* &amp;gt;&amp;gt; ln.hd
  $ cat ln.txt
  This is the first ln test.
  133938 ln.hd
  133938 ln.txt
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;ln.txt 파일을 삭제한 후 ln.hd 파일의 변화&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ rm ln.txt
  $ ls –l ln.*
  -rw--r--r-- 1 ksshin ksshin 27 6월 12 16:56 ln.hd
  $ cat ln.hd
  This is the first ln test.
  133938 ln.hd
  133938 ln.txt
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ul&gt;
      &lt;li&gt;하드 링크 수가 1로 바뀌고 내용은 변화 없음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;6-심볼릭-링크&quot;&gt;6. 심볼릭 링크&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;윈도우의 바로가기 아이콘과 같음&lt;/li&gt;
  &lt;li&gt;원본 파일에 쉽게 접근하기 위해 생성한 특수 파일&lt;/li&gt;
  &lt;li&gt;파일의 내용은 원본 파일의 경로&lt;/li&gt;
  &lt;li&gt;링크 파일을 복사하거나 내용을 출력하면 모든 작업이 원본 파일에 대해 수행됨&lt;/li&gt;
  &lt;li&gt;원본 파일이 삭제되면 심볼릭 링크 파일이 남아있어도 그 파일을 사용할 수 없음&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;7-심볼릭-링크-파일&quot;&gt;7. 심볼릭 링크 파일&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;ln 명령에 –s 옵션을 사용하여 만듦&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;특징&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;파일 종류 : l, 심볼릭 링크로 표시됨&lt;/li&gt;
      &lt;li&gt;하드 링크 수 : 1, 이름 추가가 아님&lt;/li&gt;
      &lt;li&gt;파일 이름 : 파일 이름 뒤에 원본 파일의 이름이 표시됨 (-&amp;gt;ln.hd)&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;inode 번호 : inode 번호가 다른 별개의 파일임&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ ln –s ln.hd ln.sl
  $ ls –l ln.*
  -rw--r--r-- 1 ksshin ksshin 27 6월 12 16:56 ln.hd
  lrwxrwxrwx 1 ksshin ksshin 5 6월 12 17:25 ln.sl -&amp;gt; ln.hd
  $ ls –i ln.*
  133938 ln.hd 134106 ln.sl
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;8-하드-링크-파일과-심볼릭-링크-파일&quot;&gt;8. 하드 링크 파일과 심볼릭 링크 파일&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;공통점&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;심볼릭 링크 파일을 수정하면 원본이 수정됨&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; $ pwd &amp;gt;&amp;gt; ln.sl
 $ cat ln.hd
 This is the first ln test.
 133938 ln.hd
 133938 ln.txt
 /home/ksshin
 $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;차이점&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;원본 삭제하면 하드 링크는 새로운 이름 사용 가능, 심볼릭 링크는 사용 불가&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;하드 링크는 디렉토리 설정할 수 없지만 심볼릭 링크는 설정 가능&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ rm ln.hd
  $ cat ln.sl
  cat: ln.sl: No such file or directory
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h1 id=&quot;파일-생성-및-수정-시각-변경&quot;&gt;파일 생성 및 수정 시각 변경&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;1-touch-명령&quot;&gt;1. touch 명령&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;빈 파일을 생성하거나 파일 수정 시각을 변경&lt;/li&gt;
  &lt;li&gt;형식 : touch [-acm] [-r ref_file] [-t time] 파일&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;옵션&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;-a : 접근 시간만 변경&lt;/li&gt;
      &lt;li&gt;-c : 지정된 파일이 없는 경우 새로 생성하지 않음&lt;/li&gt;
      &lt;li&gt;-m : 수정 시간만 변경&lt;/li&gt;
      &lt;li&gt;-r ref_file : 시각을 파일에서 읽음&lt;/li&gt;
      &lt;li&gt;-t [[CC]YY]MMDDhhmm[.ss] : 시각을 직접 입력&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;사용 예 : touch test&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;2-파일-생성&quot;&gt;2. 파일 생성&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;지정한 파일이 존재하지 않으면 내용 없는 빈 파일 생성&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;touch 명령 실습을 위해 디렉토리 생성&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; $ mkdir Touch
 $ cd Touch
 $ ls test
 ls: cannot access test: No such file or directory
 $    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;touch 명령 입력&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ touch test
  $ ls –l test
  -rw-rw-r-- 1 ksshin ksshin 0 6월 8 21:18 test
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ul&gt;
      &lt;li&gt;기존에 없던 test 파일 생성, 파일 크기 0으로 내용 없이 파일 정보만 존재&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;여러 파일을 한꺼번에 생성&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    $ touch t1 t2
    $ ls
    t1 t2 test
    $     
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ul&gt;
      &lt;li&gt;생성된 파일의 종류는 일반 파일이므로 vi 에디터를 이용해 내용 편집 가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;touch 명령 이용해 빈 파일 생성하는 이유&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;테스트를 위해 내용에 상관없이 파일만 필요한 경우&lt;/p&gt;

        &lt;p&gt;i. 유닉스의 파일 명령 연습할 때&lt;br /&gt;
   ii. 쉘 특수 문자 테스트를 위해 다양한 이름의 파일 생성&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;유닉스 시스템 관리를 할 때 필요에 의해&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;3-파일-접근-및-수정-시각-변경&quot;&gt;3. 파일 접근 및 수정 시각 변경&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;인자로 지정한 파일이 존재하면 해당 파일의 접근 및 수정 시각 변경&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;4-현재-시각으로-변경하기&quot;&gt;4. 현재 시각으로 변경하기&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;touch 명령을 옵션 없이 사용&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   $ ls –l
   total 4
   -rw-rw-r-- 1 ksshin ksshin 0 6월 8 21:20 t1
   -rw-rw-r-- 1 ksshin ksshin 0 6월 8 21:20 t2
   -rw-rw-r-- 1 ksshin ksshin 0 6월 8 21:18 test
   $ touch t1
   $ ls –l t1
   -rw-rw-r-- 1 ksshin ksshin 0 6월 8 21:35 t1
   $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;5-지정한-시각으로-변경하기&quot;&gt;5. 지정한 시각으로 변경하기&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;-t 옵션 사용&lt;/li&gt;
  &lt;li&gt;시각 표시 형식
    &lt;ul&gt;
      &lt;li&gt;형식 : [[CC]YY]MMDDhhmm[ss]&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;옵션&lt;/p&gt;

        &lt;p&gt;i. CC : 연도의 첫 두 자리&lt;br /&gt;
  ii. YY : 연도의 마지막 두 자리&lt;br /&gt;
  iii. MM : 달(01~12 범위내 지정)&lt;br /&gt;
  iv. DD : 날짜(01~31 범위내 지정)&lt;br /&gt;
  v. hh : 시각(00~23 범위내 지정)&lt;br /&gt;
  vi. mm : 분(00~59 범위내 지정)&lt;br /&gt;
  vii. ss : 초(00~59 범위내 지정)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;CC를 지정하지 않으면 YY 값에 따라 CC를 자동으로 인식&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-02-29-unix-12-01.png&quot; alt=&quot;&quot; /&gt;
   &lt;br /&gt;
   &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;연도를 지정하지 않고 월, 일, 시각만 지정한 예&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ touch –t 05311830 test
  $ ls –l
  total 4
  -rw-rw-r-- 1 ksshin ksshin 0 6월 8 21:20 t1
  -rw-rw-r-- 1 ksshin ksshin 0 6월 8 21:20 t2
  -rw-rw-r-- 1 ksshin ksshin 0 5월 31 18:30 test
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;연도 네 자리를 모두 지정한 예&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   $ touch –t 200501010000 test
   $ ls –l
   total 4
   -rw-rw-r-- 1 ksshin ksshin 0 6월 8 21:20 t1
   -rw-rw-r-- 1 ksshin ksshin 0 6월 8 21:20 t2
   -rw-rw-r-- 1 ksshin ksshin 0 1월 1 2005 test
   $      
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;6-특정-파일-기준으로-변경하기&quot;&gt;6. 특정 파일 기준으로 변경하기&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;특정 파일과 접근, 수정 시각을 일치시키고 싶을 때 –r 옵션 사용&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ touch –r t1 test
  $ ls –l
  total 4
  -rw-rw-r-- 1 ksshin ksshin 0 6월 8 21:20 t1
  -rw-rw-r-- 1 ksshin ksshin 0 6월 8 21:20 t2
  -rw-rw-r-- 1 ksshin ksshin 0 6월 8 21:20 test
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;7-수정-접근-시각-선택-변경하기&quot;&gt;7. 수정, 접근 시각 선택 변경하기&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;수정 시각만 변경하고 싶으면 –m 옵션 사용&lt;/li&gt;
  &lt;li&gt;접근 시각만 변경하고 싶으면 –a 옵션 사용&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;접근 시각만 변경한 경우 ls –ul 옵션을 사용해야 결과 확인 가능&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ touch –a –t 05311830 test
  $ ls –l
  total 4
  -rw-rw-r-- 1 ksshin ksshin 0 6월 8 21:20 t1
  -rw-rw-r-- 1 ksshin ksshin 0 6월 8 21:20 t2
  -rw-rw-r-- 1 ksshin ksshin 0 6월 8 21:18 test
  $ ls –ul
  total 4
  -rw-rw-r-- 1 ksshin ksshin 0 6월 8 21:20 t1
  -rw-rw-r-- 1 ksshin ksshin 0 6월 8 21:20 t2
  -rw-rw-r-- 1 ksshin ksshin 0 5월 31 18:30 test
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sat, 29 Feb 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/devlog/2020/02/29/unix-12/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/devlog/2020/02/29/unix-12/</guid>
        
        <category>unix</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[유닉스] 복사, 삭제, 이동</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-02-29-unix-11.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;파일-복사&quot;&gt;파일 복사&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;1-cp-명령&quot;&gt;1. cp 명령&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;파일이나 디렉토리를 복사&lt;/li&gt;
  &lt;li&gt;형식 : cp [옵션] 파일명1/디렉토리명1 파일명2/디렉토리명2&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;옵션&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;-i : 파일명2가 존재할 경우 덮어쓸 것인지 물어봄&lt;/li&gt;
      &lt;li&gt;-r :디렉토리를 복사할 때 지정&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;사용 예 :&lt;br /&gt; 
   p file1 file2&lt;br /&gt;
   cp f1 f2 f3 dir1&lt;br /&gt;
   cp –r dir1 dir2&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;2-파일을-파일로-복사&quot;&gt;2. 파일을 파일로 복사&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;첫 번째 인자와 두 번째 인자 모두 파일명 사용&lt;/li&gt;
  &lt;li&gt;두 번째 인자의 파일명이 존재하지 않으면 새로 생성됨&lt;/li&gt;
  &lt;li&gt;이미 존재하면 원래의 파일에 덮어 씌워짐&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;/etc 디렉토리에 있는 파일을 현재 디렉토리의 etc_hosts라는 파일로 복사&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cp /etc/hosts etc_hosts
  $ ls
  etc_hosts
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;현재 디렉토리에서 파일 복사&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   $ cp etc_hosts tmp_hosts
   $ ls
   etc_hosts tmp_hosts
   $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;3-파일을-디렉토리로-복사&quot;&gt;3. 파일을 디렉토리로 복사&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;첫 번째 인자는 파일명, 두 번째 인자는 디렉토리명 사용&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;파일을 현재 디렉토리에 복사&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cp /etc/hosts .
  $ ls
  etc_hosts hosts tmp_hosts
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;현재 디렉토리가 아닌 다른 디렉토리로 복사&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ mkdir temp
  $ cp hosts temp
  $ ls temp
  hosts
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;파일명을 바꿔서 복사&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cp hosts temp/hosts1
  $ ls temp
  hosts hosts1
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;4-여러-개의-파일을-디렉토리에-복사&quot;&gt;4. 여러 개의 파일을 디렉토리에 복사&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;첫 번째 인자의 자리에 파일명 여러 개 사용&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;마지막 인자는 반드시 디렉토리명이어야 함&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cp etc_hosts tmp_hosts temp
  $ ls temp
  etc_hosts hosts hosts1 tmp_hosts
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;5--i-옵션-사용&quot;&gt;5. -i 옵션 사용&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;두 번째 인자에 지정한 파일명이 이미 존재하면 겹쳐서 복사할 것인지 물어봄&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;“y”나 “n”으로 대답&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cp –i tmp_hosts hosts
  cp: overwrite hosts? n
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;6-디렉토리를-복사&quot;&gt;6. 디렉토리를 복사&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;-r 옵션 사용하지 않을 경우 오류 발생&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cp temp tmp
  cp: omitting directory ‘temp’
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ul&gt;
      &lt;li&gt;유닉스 버전에 따라 오류 메시지는 다르게 출력됨&lt;/li&gt;
      &lt;li&gt;“cp: temp: is a directory“라는 오류 메시지가 출력되기도 함&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;-r 옵션 사용하여 복사할 경우 디렉토리 내에 있던 파일이나 하위 디렉토리 모두 복사&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cp –r temp tmp
  $ ls –F
  etc_hosts hosts temp/ tmp/ tmp_hosts
  $ ls tmp
  hosts hosts1
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;두 번째 인자인 tmp 디렉토리가 원래 없었으므로 원본 디렉토리와 같은 위치에 새로 생성됨&lt;/li&gt;
  &lt;li&gt;두 번째 인자가 기존에 있던 디렉토리 이름이면 원본 디렉토리는 두 번째 인자로 지정한 디렉토리 아래에 같은 이름으로 복사됨&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h1 id=&quot;파일-삭제&quot;&gt;파일 삭제&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;1-rm-명령&quot;&gt;1. rm 명령&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;파일을 삭제&lt;/li&gt;
  &lt;li&gt;형식 : rm [옵션] 파일명/디렉토리명&lt;/li&gt;
  &lt;li&gt;옵션
    &lt;ul&gt;
      &lt;li&gt;-i : 지정한 파일을 정말 삭제할 것인지 확인&lt;/li&gt;
      &lt;li&gt;-r : 디렉토리를 삭제할 때 지정&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;사용 예 : &lt;br /&gt;
   rm file&lt;br /&gt;
   rm –r dir&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;2-기본-삭제&quot;&gt;2. 기본 삭제&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;인자를 파일로 지정하면 해당파일 삭제&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;유닉스에는 ‘휴지통’ 기능이 없어, 삭제된 파일은 복구할 수 없음&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ rm hosts
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;3--i-옵션을-사용한-파일-삭제&quot;&gt;3. -i 옵션을 사용한 파일 삭제&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;지정한 파일을 정말 삭제할 것인지 물어봄&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;y를 입력하면 삭제되고, n을 입력하면 삭제되지 않음&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ rm –i hosts1
  rm: remove regular file hosts1? y
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;4-디렉토리-삭제&quot;&gt;4. 디렉토리 삭제&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;-r 옵션을 사용하면 디렉토리가 비어 있는지 여부와 상관없이 디렉토리 및 그 아래 모든 파일 삭제&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;-r 옵션 없이 삭제&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ rm tmp
  rm: cannot remove ‘tmp’: Is a directory
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;rmdir 명령으로 삭제&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ rmdir tmp
  rmdir: failed to remove ‘tmp’: Directory not empty
  $ ls tmp
  hosts hosts1 text
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;-r 옵션으로 삭제&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ rm –r tmp
  $ ls –F
  etc_hosts hosts temp/ tmp_hosts
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;-ri 옵션으로 삭제&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   $ rm –ri temp
   rm: descend into directory temp? y
   rm: descend into directory temp/tmp? y
   rm: remove regular file temp/tmp/text1? y
   rm: remove directory temp/tmp? y
   rm: remove regular file temp/hosts1? y
   rm: remove regular file temp/text? y
   rm: remove regular file temp/hosts? y
   rm: remove directory temp? n
   $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h1 id=&quot;파일-이동&quot;&gt;파일 이동&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;1-mvmove-명령&quot;&gt;1. mv(move) 명령&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;파일의 이름을 바꾸거나 다른 디렉토리로 이동&lt;/li&gt;
  &lt;li&gt;형식 : mv [옵션] 파일명1/디렉토리명1 파일명2/디렉토리명2&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;옵션&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;-i : 파일명2/디렉토리명2가 존재하면 덮어쓸 것인지 물어봄&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;사용 예 : &lt;br /&gt;
   mv file1 file2&lt;br /&gt;
   mv file1 dir1&lt;br /&gt;
   mv file1 file2 file3 dir1&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;2-파일을-파일로-이동&quot;&gt;2. 파일을 파일로 이동&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;첫 번째 인자와 두 번째 인자를 모두 파일명으로 지정&lt;/li&gt;
  &lt;li&gt;결과적으로는 이름 변경&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;두 번째 인자로 지정한 파일이 존재하면 내용 덮어씀&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ mv hosts text
  $ ls –F
  etc_hosts temp/ text tmp_hosts
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;3-파일을-디렉토리로-이동&quot;&gt;3. 파일을 디렉토리로 이동&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;두 번째 인자로 디렉토리 지정&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ mv text temp
  $ ls –F
  etc_hosts temp/ tmp_hosts
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;두 번째 인자로 디렉토리명과 파일명을 모두 지정하면 지정한 디렉토리로 파일명 바꿔서 이동&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ mv tmp_hosts temp/hosts
  $ ls –F
  etc_hosts temp/
  $ ls temp
  hosts text
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;4-여러-개의-파일을-디렉토리로-이동&quot;&gt;4. 여러 개의 파일을 디렉토리로 이동&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;첫 번째 인자의 자리에 파일명 여러 개 지정하면 두 번째 인자를 반드시 디렉토리로 해야 함&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;마지막 지정한 디렉토리로 파일이 모두 이동&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   $ mv temp/hosts temp/text .
   $ ls –F
   etc_hosts hosts temp/ text
   $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;5--i-옵션을-사용한-이동&quot;&gt;5. -i 옵션을 사용한 이동&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;두 번째 인자에 지정한 파일명이 기존에 있는 파일일 경우 덮어쓸 것인지 물어봄&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   $ mv –i etc_hosts hosts
   mv: overwrite ‘hosts’? n
   $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;6-디렉토리를-디렉토리로-이동&quot;&gt;6. 디렉토리를 디렉토리로 이동&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;두 인자 모두 디렉토리명으로 지정&lt;/li&gt;
  &lt;li&gt;첫 번째 인자인 디렉토리가 두 번째 인자 디렉토리 아래로 이동&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;두 번째 인자가 새로운 이름이면 디렉토리 이름 변경&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   $ cp –r temp tmp
   $ ls –F
   etc_hosts hosts temp/ text tmp/
   $ mv tmp temp
   $ ls -F
   etc_hosts hosts temp/ text
   $ ls –F temp
   etc_hosts hosts text tmp/
   $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sat, 29 Feb 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/devlog/2020/02/29/unix-11/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/devlog/2020/02/29/unix-11/</guid>
        
        <category>unix</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>[유닉스] 파일 내용 보기</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/unix/2020-02-29-unix-10.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;파일-내용-보기&quot;&gt;파일 내용 보기&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;1-cat-concatenate&quot;&gt;1. cat (concatenate)&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;파일 내용을 연속적으로 화면에 출력&lt;/li&gt;
  &lt;li&gt;형식 : cat [옵션] 파일명…&lt;/li&gt;
  &lt;li&gt;옵션
    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;-n : 행번호를 붙여서 출력&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cat /etc/hosts
  127.0.0.1 localhost
  127.0.1.1 ksshin
  ......
  $ cat –n /etc/hosts
  1 127.0.0.1 localhost
  2 127.0.1.1 ksshin
  3 ......
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;2-cat의-다른-기능&quot;&gt;2. cat의 다른 기능&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;표준 입력으로부터 데이터를 입력받아 화면에 출력&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;옵션이나 파일명 없이 cat 명령만 입력&lt;/li&gt;
      &lt;li&gt;문자열 입력 후 엔터(Enter) 키를 치면 화면에 그대로 복사하여 보여줌&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Ctrl + D를 입력하여 종료&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cat
  hello
  hello
  unix
  unix
  ^D
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;표준 입력 대신 파일에 있는 데이터를 화면에 출력&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;리다이렉션 기호 “&amp;lt;” 사용&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;첫 번째 cat 기능과 같이 “&amp;lt;” 생략하고 파일명만 사용&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cat &amp;lt; file1
  unix1
  unix2
  $ cat file1
  unix1
  unix2
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;리다이렉션 기호 “&amp;gt;”를 사용하여 짧은 파일 작성&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;내용을 모두 적은 후 Ctrl + D를 입력하여 종료&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cat &amp;gt; testfile
  unix
  linux
  test
  ^D
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;리다이렉션 기호 “»” 사용하여 이미 존재하는 파일에 내용 추가&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cat &amp;gt;&amp;gt; testfile
  This is the end.
  ^D
  $ cat testfile
  unix
  linux
  test
  This is the end.
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;cat을 이용하여 파일 복사&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cat &amp;lt; testfile &amp;gt; newfile
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;3-more&quot;&gt;3. more&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;파일 내용을 화면 단위로 출력&lt;/li&gt;
  &lt;li&gt;형식 : more [옵션] 파일명…&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;옵션&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;+행 번호 : 출력을 시작할 행번호를 지정&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;화면 단위로 내용을 출력한 뒤 ‘–More–(00%)’를 보여줌&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;스페이스바(SpaceBar) : 다음 화면을 출력&lt;/li&gt;
      &lt;li&gt;엔터(Enter) : 행 단위로 스크롤&lt;/li&gt;
      &lt;li&gt;/문자열 : 해당 문자열을 검색&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;q : more 명령 종료&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ more /etc/group
  root:x:0:
  daemon:x:1:
  bin:x:2:
  sys:x:3:
  ......
  --More--(38%)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;현재 디렉토리의 파일목록이 많아서 한 화면에서 볼 수 없을 때 ls와 more를 파이프로 연결해서 사용&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ ls /etc | more
  acpi
  adduser.conf
  alternatives
  ......
  --More--
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;4-tail&quot;&gt;4. tail&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;파일의 뒷부분 몇 행을 출력&lt;/li&gt;
  &lt;li&gt;형식 : tail [옵션] 파일명&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;옵션&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;-n +행번호 : 지정한 행부터 끝까지 출력&lt;/li&gt;
      &lt;li&gt;-숫자 : 화면에 출력할 행의 수를 지정 (기본값은 10)&lt;/li&gt;
      &lt;li&gt;-f : 파일 출력이 종료되지 않고, 주기적으로 계속 출력&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;“-숫자” 옵션을 이용한 출력&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;파일 뒷부분 5행 출력&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ tail –5 etc_files
  X11
  xdg
  xml
  xul-ext
  zsh_command_not_found
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;“-n +행번호“ 옵션을 이용한 출력&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;210번 라인부터 끝까지 출력&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ tail –n +210 etc_files
  systemd
  terminfo
  ......
  X11
  xdg
  xml
  xul-ext
  zsh_command_not_found
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;-f 옵션을 이용한 출력&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;파일 출력이 종료되지 않고 대기 상태가 됨&lt;/li&gt;
      &lt;li&gt;파일 내용 주기적으로 반복 출력&lt;/li&gt;
      &lt;li&gt;파일 뒷부분에 내용 추가되면 자동 출력하므로 파일의 내용 변화를 확인할 때 사용하면 편리&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;무한 반복되므로 ^C(Ctrl + C)키로 명령 종료&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ tail –f etc_files
  vim
  vtrgb
  wgetrc
  wodim.conf
  wpa_supplicant
  X11
  xdg
  xml
  xul-ext
  zsh_command_not_found
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;5-head&quot;&gt;5. head&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;파일의 앞부분 몇 행을 출력&lt;/li&gt;
  &lt;li&gt;형식 : head [옵션] 파일명&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;옵션 :&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;-숫자 : 화면에 출력할 행의 수를 지정 (기본값은 10)&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ ls /etc &amp;gt; etc_files
  $ head etc_files
  acpi
  adduser.conf
  anacrontab
  apg.conf
  apm
  apparmor
  apparmor.d
  apport
  apt
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;6-wc-word-count&quot;&gt;6. wc (word count)&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;파일에 저장된 라인, 단어, 문자의 개수를 세어서 출력&lt;/li&gt;
  &lt;li&gt;형식 : wc [옵션] 파일명&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;옵션&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;-c : 바이트 수 출력&lt;/li&gt;
      &lt;li&gt;-m : 문자 수&lt;/li&gt;
      &lt;li&gt;-l : 라인 수 출력&lt;/li&gt;
      &lt;li&gt;-w : 단어 수 출력&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;-c : 문자(바이트) 수 출력&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ wc etc_files
  226 226 2171 etc_files
  $        
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;파일이 영어로만 되어 있으면, 바이트 수와 문자 수가 같고, 한글이 포함되어 있으면 바이트 수와 문자 수가 다름&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;파일-내용-보기-1&quot;&gt;파일 내용 보기&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;1-cmp-명령&quot;&gt;1. cmp 명령&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;두 파일의 내용 비교 후 결과 출력&lt;/li&gt;
  &lt;li&gt;diff 명령의 간단한 버전&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;두 파일의 내용이 다른 부분에 대해 첫 번째 위치와 행번호를 보여줌&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;첫 번째 라인 6번째 바이트부터 다르다는 의미&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cat &amp;gt; compare1
  This is a test file.
  ^D
  $ cat &amp;gt; compare2
  This si a test file.
  ^D
  $ cmp compare1 compare2
  compare1 compare2 differ: byte 6, line 1
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;2-comm-명령&quot;&gt;2. comm 명령&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;행별로 정렬된 파일 비교&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;대상 파일이 미리 정렬되어 있어야 함&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cat &amp;gt; file1
  line 1
  line 2
  line 3
  ^D
  $ cat &amp;gt; file2
  line 1
  line 3
  line 4
  ^D
  $ comm file1 file2
  line 1
  line 2
  line 3
  line 4
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ul&gt;
      &lt;li&gt;첫 번째 파일에만 있는 행들이 첫 번째 열(column)에 표시됨&lt;/li&gt;
      &lt;li&gt;두 번째 파일에만 있는 행들이 두 번째 열에 표시됨&lt;/li&gt;
      &lt;li&gt;두 파일에 모두 있는 행들이 세 번째 열에 표시됨&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;13-diff-명령&quot;&gt;13. diff 명령&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;매우 강력하고 유연한 파일 비교 유틸리티&lt;/li&gt;
  &lt;li&gt;대상 파일들을 줄 단위로 차례차례 비교&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;예제 파일 만들기&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cat file1
  line 1
  line 2
  line 4
  $ cat file2
  line 1
  line 2
  line 3
  line 5
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;diff 명령&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ diff file1 file2
  3c3,4
  &amp;lt; line 4
  ------
  &amp;gt; line 3
  &amp;gt; line 5
  $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ul&gt;
      &lt;li&gt;file1의 3 라인을 file2의 3, 4 라인으로 대체하면 두 파일은 같다는 의미&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;diff 명령 결과의 의미&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;n1 a n3, n4 : 첫 번째 파일의 n1 라인 이후에 두 번째 파일의 n3부터 n4까지의 라인들을 추가하면 두 파일은 서로 같다.&lt;/li&gt;
      &lt;li&gt;n1, n2 d n3 : 첫 번째 파일의 n1부터 n2까지의 라인을 삭제하면 두 번째 파일의 n3 이후와 서로 같다.&lt;/li&gt;
      &lt;li&gt;n1, n2 c n3, n4 : 첫 번째 파일의 n1부터 n2까지의 라인을 두 번째 파일의 n3부터 n4까지의 라인으로 대체하면 두 파일은 서로 같다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 29 Feb 2020 00:00:00 +0900</pubDate>
        <link>https://m-veloper.github.io/devlog/2020/02/29/unix-10/</link>
        <guid isPermaLink="true">https://m-veloper.github.io/devlog/2020/02/29/unix-10/</guid>
        
        <category>unix</category>
        
        
        <category>devlog</category>
        
      </item>
    
  </channel>
</rss>
